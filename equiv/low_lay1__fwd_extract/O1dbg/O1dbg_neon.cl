proc main(
    # input
    sint16 poly0, sint16 poly1, sint16 poly2, sint16 poly3, sint16 poly4, sint16 poly5, sint16 poly6, sint16 poly7,
    sint16 poly8, sint16 poly9, sint16 poly10, sint16 poly11, sint16 poly12, sint16 poly13, sint16 poly14, sint16 poly15,
    sint16 poly16, sint16 poly17, sint16 poly18, sint16 poly19, sint16 poly20, sint16 poly21, sint16 poly22, sint16 poly23,
    sint16 poly24, sint16 poly25, sint16 poly26, sint16 poly27, sint16 poly28, sint16 poly29, sint16 poly30, sint16 poly31,
    sint16 poly32, sint16 poly33, sint16 poly34, sint16 poly35, sint16 poly36, sint16 poly37, sint16 poly38, sint16 poly39,
    sint16 poly40, sint16 poly41, sint16 poly42, sint16 poly43, sint16 poly44, sint16 poly45, sint16 poly46, sint16 poly47,
    sint16 poly48, sint16 poly49, sint16 poly50, sint16 poly51, sint16 poly52, sint16 poly53, sint16 poly54, sint16 poly55,
    sint16 poly56, sint16 poly57, sint16 poly58, sint16 poly59, sint16 poly60, sint16 poly61, sint16 poly62, sint16 poly63,
    sint16 poly64, sint16 poly65, sint16 poly66, sint16 poly67, sint16 poly68, sint16 poly69, sint16 poly70, sint16 poly71,
    sint16 poly72, sint16 poly73, sint16 poly74, sint16 poly75, sint16 poly76, sint16 poly77, sint16 poly78, sint16 poly79;

    # output
    sint16 arr000, sint16 arr001, sint16 arr002, sint16 arr003, sint16 arr004, sint16 arr005, sint16 arr006, sint16 arr007,
    sint16 arr010, sint16 arr011, sint16 arr012, sint16 arr013, sint16 arr014, sint16 arr015, sint16 arr016, sint16 arr017,
    sint16 arr100, sint16 arr101, sint16 arr102, sint16 arr103, sint16 arr104, sint16 arr105, sint16 arr106, sint16 arr107,
    sint16 arr110, sint16 arr111, sint16 arr112, sint16 arr113, sint16 arr114, sint16 arr115, sint16 arr116, sint16 arr117,
    sint16 arr200, sint16 arr201, sint16 arr202, sint16 arr203, sint16 arr204, sint16 arr205, sint16 arr206, sint16 arr207,
    sint16 arr210, sint16 arr211, sint16 arr212, sint16 arr213, sint16 arr214, sint16 arr215, sint16 arr216, sint16 arr217,
    sint16 arr300, sint16 arr301, sint16 arr302, sint16 arr303, sint16 arr304, sint16 arr305, sint16 arr306, sint16 arr307,
    sint16 arr310, sint16 arr311, sint16 arr312, sint16 arr313, sint16 arr314, sint16 arr315, sint16 arr316, sint16 arr317,
    sint16 arr400, sint16 arr401, sint16 arr402, sint16 arr403, sint16 arr404, sint16 arr405, sint16 arr406, sint16 arr407,
    sint16 arr410, sint16 arr411, sint16 arr412, sint16 arr413, sint16 arr414, sint16 arr415, sint16 arr416, sint16 arr417,
    sint16 arr500, sint16 arr501, sint16 arr502, sint16 arr503, sint16 arr504, sint16 arr505, sint16 arr506, sint16 arr507,
    sint16 arr510, sint16 arr511, sint16 arr512, sint16 arr513, sint16 arr514, sint16 arr515, sint16 arr516, sint16 arr517,
    sint16 arr600, sint16 arr601, sint16 arr602, sint16 arr603, sint16 arr604, sint16 arr605, sint16 arr606, sint16 arr607,
    sint16 arr610, sint16 arr611, sint16 arr612, sint16 arr613, sint16 arr614, sint16 arr615, sint16 arr616, sint16 arr617,
    sint16 arr700, sint16 arr701, sint16 arr702, sint16 arr703, sint16 arr704, sint16 arr705, sint16 arr706, sint16 arr707,
    sint16 arr710, sint16 arr711, sint16 arr712, sint16 arr713, sint16 arr714, sint16 arr715, sint16 arr716, sint16 arr717,
    sint16 arr800, sint16 arr801, sint16 arr802, sint16 arr803, sint16 arr804, sint16 arr805, sint16 arr806, sint16 arr807,
    sint16 arr810, sint16 arr811, sint16 arr812, sint16 arr813, sint16 arr814, sint16 arr815, sint16 arr816, sint16 arr817,
    sint16 arr900, sint16 arr901, sint16 arr902, sint16 arr903, sint16 arr904, sint16 arr905, sint16 arr906, sint16 arr907,
    sint16 arr910, sint16 arr911, sint16 arr912, sint16 arr913, sint16 arr914, sint16 arr915, sint16 arr916, sint16 arr917
) =
{
    [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23] <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31] <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\

    [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\
    [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\
    [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23] >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\
    [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31] >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\
    [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\
    [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\
    [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\
    [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\
    [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\
    [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295]
  &&
    [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] <=s [2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16] /\
    [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] <=s [2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16] /\
    [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23] <=s [2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16] /\
    [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31] <=s [2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16] /\
    [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] <=s [2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16] /\
    [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] <=s [2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16] /\
    [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] <=s [2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16] /\
    [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] <=s [2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16] /\
    [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] <=s [2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16] /\
    [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] <=s [2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16, 2295@16] /\

    [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] >=s [(-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16] /\
    [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] >=s [(-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16] /\
    [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23] >=s [(-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16] /\
    [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31] >=s [(-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16] /\
    [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] >=s [(-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16] /\
    [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] >=s [(-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16] /\
    [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] >=s [(-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16] /\
    [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] >=s [(-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16] /\
    [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] >=s [(-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16] /\
    [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] >=s [(-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16, (-2295)@16]
}

# setup

mov [L0x55555526f0, L0x55555526f2, L0x55555526f4, L0x55555526f6, L0x55555526f8, L0x55555526fa, L0x55555526fc, L0x55555526fe] [4591@sint16, 29@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16];
mov [L0x5555552700, L0x5555552702, L0x5555552704, L0x5555552706, L0x5555552708, L0x555555270a, L0x555555270c, L0x555555270e] [1005@sint16, 918@sint16, (-818)@sint16, (-1736)@sint16, 7173@sint16, 6552@sint16, (-5838)@sint16, (-12391)@sint16];
mov [L0x5555552710, L0x5555552712, L0x5555552714, L0x5555552716, L0x5555552718, L0x555555271a, L0x555555271c, L0x555555271e] [(-2274)@sint16, (-16231)@sint16, 1610@sint16, 11491@sint16, (-2113)@sint16, (-15081)@sint16, (-1815)@sint16, (-12954)@sint16];
mov [L0x5555552720, L0x5555552722, L0x5555552724, L0x5555552726, L0x5555552728, L0x555555272a, L0x555555272c, L0x555555272e] [(-2274)@sint16, (-16231)@sint16, 1610@sint16, 11491@sint16, (-2113)@sint16, (-15081)@sint16, (-1815)@sint16, (-12954)@sint16];
mov [L0x5555552730, L0x5555552732, L0x5555552734, L0x5555552736, L0x5555552738, L0x555555273a, L0x555555273c, L0x555555273e] [2113@sint16, 15081@sint16, (-2274)@sint16, (-16231)@sint16, 1815@sint16, 12954@sint16, 1610@sint16, 11491@sint16];
mov [L0x5555552740, L0x5555552742, L0x5555552744, L0x5555552746, L0x5555552748, L0x555555274a, L0x555555274c, L0x555555274e] [(-2113)@sint16, (-15081)@sint16, 2274@sint16, 16231@sint16, (-1815)@sint16, (-12954)@sint16, (-1610)@sint16, (-11491)@sint16];
mov [L0x5555552750, L0x5555552752, L0x5555552754, L0x5555552756, L0x5555552758, L0x555555275a, L0x555555275c, L0x555555275e] [1@sint16, 7@sint16, 1@sint16, 7@sint16, 1@sint16, 7@sint16, 1@sint16, 7@sint16];
mov [L0x5555552760, L0x5555552762, L0x5555552764, L0x5555552766, L0x5555552768, L0x555555276a, L0x555555276c, L0x555555276e] [1@sint16, 7@sint16, 1@sint16, 7@sint16, 1@sint16, 7@sint16, 1@sint16, 7@sint16];
mov [L0x5555552770, L0x5555552772, L0x5555552774, L0x5555552776, L0x5555552778, L0x555555277a, L0x555555277c, L0x555555277e] [(-1610)@sint16, (-11491)@sint16, (-1815)@sint16, (-12954)@sint16, 2274@sint16, 16231@sint16, (-2113)@sint16, (-15081)@sint16];
mov [L0x5555552780, L0x5555552782, L0x5555552784, L0x5555552786, L0x5555552788, L0x555555278a, L0x555555278c, L0x555555278e] [1610@sint16, 11491@sint16, 1815@sint16, 12954@sint16, (-2274)@sint16, (-16231)@sint16, 2113@sint16, 15081@sint16];
mov [L0x5555552790, L0x5555552792, L0x5555552794, L0x5555552796, L0x5555552798, L0x555555279a, L0x555555279c, L0x555555279e] [(-1815)@sint16, (-12954)@sint16, (-2113)@sint16, (-15081)@sint16, 1610@sint16, 11491@sint16, (-2274)@sint16, (-16231)@sint16];
mov [L0x55555527a0, L0x55555527a2, L0x55555527a4, L0x55555527a6, L0x55555527a8, L0x55555527aa, L0x55555527ac, L0x55555527ae] [(-1815)@sint16, (-12954)@sint16, (-2113)@sint16, (-15081)@sint16, 1610@sint16, 11491@sint16, (-2274)@sint16, (-16231)@sint16];
mov [L0x55555527b0, L0x55555527b2, L0x55555527b4, L0x55555527b6, L0x55555527b8, L0x55555527ba, L0x55555527bc, L0x55555527be] [2274@sint16, 16231@sint16, 1610@sint16, 11491@sint16, 2113@sint16, 15081@sint16, (-1815)@sint16, (-12954)@sint16];
mov [L0x55555527c0, L0x55555527c2, L0x55555527c4, L0x55555527c6, L0x55555527c8, L0x55555527ca, L0x55555527cc, L0x55555527ce] [(-2274)@sint16, (-16231)@sint16, (-1610)@sint16, (-11491)@sint16, (-2113)@sint16, (-15081)@sint16, 1815@sint16, 12954@sint16];
mov [L0x55555527d0, L0x55555527d2, L0x55555527d4, L0x55555527d6, L0x55555527d8, L0x55555527da, L0x55555527dc, L0x55555527de] [(-2113)@sint16, (-15081)@sint16, (-2274)@sint16, (-16231)@sint16, (-1815)@sint16, (-12954)@sint16, 1610@sint16, 11491@sint16];
mov [L0x55555527e0, L0x55555527e2, L0x55555527e4, L0x55555527e6, L0x55555527e8, L0x55555527ea, L0x55555527ec, L0x55555527ee] [(-2113)@sint16, (-15081)@sint16, (-2274)@sint16, (-16231)@sint16, (-1815)@sint16, (-12954)@sint16, 1610@sint16, 11491@sint16];
mov [L0x55555527f0, L0x55555527f2, L0x55555527f4, L0x55555527f6, L0x55555527f8, L0x55555527fa, L0x55555527fc, L0x55555527fe] [(-1)@sint16, (-7)@sint16, 1@sint16, 7@sint16, (-1)@sint16, (-7)@sint16, 1@sint16, 7@sint16];
mov [L0x5555552800, L0x5555552802, L0x5555552804, L0x5555552806, L0x5555552808, L0x555555280a, L0x555555280c, L0x555555280e] [1@sint16, 7@sint16, (-1)@sint16, (-7)@sint16, 1@sint16, 7@sint16, (-1)@sint16, (-7)@sint16];
mov [L0x5555552810, L0x5555552812, L0x5555552814, L0x5555552816, L0x5555552818, L0x555555281a, L0x555555281c, L0x555555281e] [1610@sint16, 11491@sint16, (-1815)@sint16, (-12954)@sint16, (-2274)@sint16, (-16231)@sint16, (-2113)@sint16, (-15081)@sint16];
mov [L0x5555552820, L0x5555552822, L0x5555552824, L0x5555552826, L0x5555552828, L0x555555282a, L0x555555282c, L0x555555282e] [1610@sint16, 11491@sint16, (-1815)@sint16, (-12954)@sint16, (-2274)@sint16, (-16231)@sint16, (-2113)@sint16, (-15081)@sint16];
mov [L0x5555552830, L0x5555552832, L0x5555552834, L0x5555552836, L0x5555552838, L0x555555283a, L0x555555283c, L0x555555283e] [4591@sint16, 29235@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16];
mov [L0x5555552840, L0x5555552842, L0x5555552844, L0x5555552846, L0x5555552848, L0x555555284a, L0x555555284c, L0x555555284e] [(-621)@sint16, 1891@sint16, (-803)@sint16, 0@sint16, (-4432)@sint16, 13497@sint16, (-5731)@sint16, (-17729)@sint16];
mov [L0x5555552850, L0x5555552852, L0x5555552854, L0x5555552856, L0x5555552858, L0x555555285a, L0x555555285c, L0x555555285e] [4591@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16];
mov [L0x5555552860, L0x5555552862, L0x5555552864, L0x5555552866, L0x5555552868, L0x555555286a, L0x555555286c, L0x555555286e] [(-28264)@sint16, (-16381)@sint16, (-28264)@sint16, (-16381)@sint16, (-2295)@sint16, (-2295)@sint16, 7@sint16, 1@sint16];
mov [L0x5555552870, L0x5555552872, L0x5555552874, L0x5555552876, L0x5555552878, L0x555555287a, L0x555555287c, L0x555555287e] [(-28264)@sint16, (-16381)@sint16, 557@sint16, 12983@sint16, (-2295)@sint16, 1819@sint16, 12241@sint16, 1715@sint16];
mov [L0x5555552880, L0x5555552882, L0x5555552884, L0x5555552886, L0x5555552888, L0x555555288a, L0x555555288c, L0x555555288e] [(-28264)@sint16, (-16381)@sint16, (-6267)@sint16, 13496@sint16, (-2295)@sint16, 1891@sint16, (-11463)@sint16, (-1606)@sint16];
mov [L0x5555552890, L0x5555552892, L0x5555552894, L0x5555552896, L0x5555552898, L0x555555289a, L0x555555289c, L0x555555289e] [(-28264)@sint16, (-16381)@sint16, 8365@sint16, 15274@sint16, (-2295)@sint16, 2140@sint16, 2213@sint16, 310@sint16];
mov [L0x55555528a0, L0x55555528a2, L0x55555528a4, L0x55555528a6, L0x55555528a8, L0x55555528aa, L0x55555528ac, L0x55555528ae] [(-28264)@sint16, (-16381)@sint16, 23468@sint16, (-7252)@sint16, (-2295)@sint16, (-1016)@sint16, (-6467)@sint16, (-906)@sint16];
mov [L0x55555528b0, L0x55555528b2, L0x55555528b4, L0x55555528b6, L0x55555528b8, L0x55555528ba, L0x55555528bc, L0x55555528be] [(-28264)@sint16, (-16381)@sint16, (-17144)@sint16, (-3234)@sint16, (-2295)@sint16, (-453)@sint16, (-14503)@sint16, (-2032)@sint16];
mov [L0x55555528c0, L0x55555528c2, L0x55555528c4, L0x55555528c6, L0x55555528c8, L0x55555528ca, L0x55555528cc, L0x55555528ce] [(-28264)@sint16, (-16381)@sint16, 19899@sint16, 1106@sint16, (-2295)@sint16, 155@sint16, (-2220)@sint16, (-311)@sint16];
mov [L0x55555528d0, L0x55555528d2, L0x55555528d4, L0x55555528d6, L0x55555528d8, L0x55555528da, L0x55555528dc, L0x55555528de] [(-28264)@sint16, (-16381)@sint16, (-24025)@sint16, (-5732)@sint16, (-2295)@sint16, (-803)@sint16, (-5774)@sint16, (-809)@sint16];
mov [L0x55555528e0, L0x55555528e2, L0x55555528e4, L0x55555528e6, L0x55555528e8, L0x55555528ea, L0x55555528ec, L0x55555528ee] [(-28264)@sint16, (-16381)@sint16, 23411@sint16, (-10264)@sint16, (-2295)@sint16, (-1438)@sint16, (-6802)@sint16, (-953)@sint16];
mov [L0x55555528f0, L0x55555528f2, L0x55555528f4, L0x55555528f6, L0x55555528f8, L0x55555528fa, L0x55555528fc, L0x55555528fe] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-11491)@sint16, (-1610)@sint16];
mov [L0x5555552900, L0x5555552902, L0x5555552904, L0x5555552906, L0x5555552908, L0x555555290a, L0x555555290c, L0x555555290e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 6616@sint16, 927@sint16];
mov [L0x5555552910, L0x5555552912, L0x5555552914, L0x5555552916, L0x5555552918, L0x555555291a, L0x555555291c, L0x555555291e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-9122)@sint16, (-1278)@sint16];
mov [L0x5555552920, L0x5555552922, L0x5555552924, L0x5555552926, L0x5555552928, L0x555555292a, L0x555555292c, L0x555555292e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 2077@sint16, 291@sint16];
mov [L0x5555552930, L0x5555552932, L0x5555552934, L0x5555552936, L0x5555552938, L0x555555293a, L0x555555293c, L0x555555293e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 6681@sint16, 936@sint16];
mov [L0x5555552940, L0x5555552942, L0x5555552944, L0x5555552946, L0x5555552948, L0x555555294a, L0x555555294c, L0x555555294e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-13982)@sint16, (-1959)@sint16];
mov [L0x5555552950, L0x5555552952, L0x5555552954, L0x5555552956, L0x5555552958, L0x555555295a, L0x555555295c, L0x555555295e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 9414@sint16, 1319@sint16];
mov [L0x5555552960, L0x5555552962, L0x5555552964, L0x5555552966, L0x5555552968, L0x555555296a, L0x555555296c, L0x555555296e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-13297)@sint16, (-1863)@sint16];
mov [L0x5555552970, L0x5555552972, L0x5555552974, L0x5555552976, L0x5555552978, L0x555555297a, L0x555555297c, L0x555555297e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-9664)@sint16, (-1354)@sint16];
mov [L0x5555552980, L0x5555552982, L0x5555552984, L0x5555552986, L0x5555552988, L0x555555298a, L0x555555298c, L0x555555298e] [(-28264)@sint16, (-16381)@sint16, 19114@sint16, 8843@sint16, (-2295)@sint16, 1239@sint16, 11491@sint16, 1610@sint16];
mov [L0x5555552990, L0x5555552992, L0x5555552994, L0x5555552996, L0x5555552998, L0x555555299a, L0x555555299c, L0x555555299e] [(-28264)@sint16, (-16381)@sint16, 3297@sint16, (-6281)@sint16, (-2295)@sint16, (-880)@sint16, 13982@sint16, 1959@sint16];
mov [L0x55555529a0, L0x55555529a2, L0x55555529a4, L0x55555529a6, L0x55555529a8, L0x55555529aa, L0x55555529ac, L0x55555529ae] [(-28264)@sint16, (-16381)@sint16, 3212@sint16, (-10799)@sint16, (-2295)@sint16, (-1513)@sint16, (-6616)@sint16, (-927)@sint16];
mov [L0x55555529b0, L0x55555529b2, L0x55555529b4, L0x55555529b6, L0x55555529b8, L0x55555529ba, L0x55555529bc, L0x55555529be] [(-28264)@sint16, (-16381)@sint16, 19300@sint16, 2248@sint16, (-2295)@sint16, 315@sint16, (-9414)@sint16, (-1319)@sint16];
mov [L0x55555529c0, L0x55555529c2, L0x55555529c4, L0x55555529c6, L0x55555529c8, L0x55555529ca, L0x55555529cc, L0x55555529ce] [(-28264)@sint16, (-16381)@sint16, 23054@sint16, (-12705)@sint16, (-2295)@sint16, (-1780)@sint16, 9122@sint16, 1278@sint16];
mov [L0x55555529d0, L0x55555529d2, L0x55555529d4, L0x55555529d6, L0x55555529d8, L0x55555529da, L0x55555529dc, L0x55555529de] [(-28264)@sint16, (-16381)@sint16, (-15845)@sint16, 16137@sint16, (-2295)@sint16, 2261@sint16, 13297@sint16, 1863@sint16];
mov [L0x55555529e0, L0x55555529e2, L0x55555529e4, L0x55555529e6, L0x55555529e8, L0x55555529ea, L0x55555529ec, L0x55555529ee] [(-28264)@sint16, (-16381)@sint16, 27122@sint16, (-11092)@sint16, (-2295)@sint16, (-1554)@sint16, (-2077)@sint16, (-291)@sint16];
mov [L0x55555529f0, L0x55555529f2, L0x55555529f4, L0x55555529f6, L0x55555529f8, L0x55555529fa, L0x55555529fc, L0x55555529fe] [(-28264)@sint16, (-16381)@sint16, (-26351)@sint16, (-13783)@sint16, (-2295)@sint16, (-1931)@sint16, 9664@sint16, 1354@sint16];
mov [L0x5555552a00, L0x5555552a02, L0x5555552a04, L0x5555552a06, L0x5555552a08, L0x5555552a0a, L0x5555552a0c, L0x5555552a0e] [(-28264)@sint16, (-16381)@sint16, 12633@sint16, (-5339)@sint16, (-2295)@sint16, (-748)@sint16, (-6681)@sint16, (-936)@sint16];
mov [L0x5555552a10, L0x5555552a12, L0x5555552a14, L0x5555552a16, L0x5555552a18, L0x5555552a1a, L0x5555552a1c, L0x5555552a1e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 16231@sint16, 2274@sint16];
mov [L0x5555552a20, L0x5555552a22, L0x5555552a24, L0x5555552a26, L0x5555552a28, L0x5555552a2a, L0x5555552a2c, L0x5555552a2e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-15695)@sint16, (-2199)@sint16];
mov [L0x5555552a30, L0x5555552a32, L0x5555552a34, L0x5555552a36, L0x5555552a38, L0x5555552a3a, L0x5555552a3c, L0x5555552a3e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 7958@sint16, 1115@sint16];
mov [L0x5555552a40, L0x5555552a42, L0x5555552a44, L0x5555552a46, L0x5555552a48, L0x5555552a4a, L0x5555552a4c, L0x5555552a4e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-1427)@sint16, (-200)@sint16];
mov [L0x5555552a50, L0x5555552a52, L0x5555552a54, L0x5555552a56, L0x5555552a58, L0x5555552a5a, L0x5555552a5c, L0x5555552a5e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-1213)@sint16, (-170)@sint16];
mov [L0x5555552a60, L0x5555552a62, L0x5555552a64, L0x5555552a66, L0x5555552a68, L0x5555552a6a, L0x5555552a6c, L0x5555552a6e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 15353@sint16, 2151@sint16];
mov [L0x5555552a70, L0x5555552a72, L0x5555552a74, L0x5555552a76, L0x5555552a78, L0x5555552a7a, L0x5555552a7c, L0x5555552a7e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-14803)@sint16, (-2074)@sint16];
mov [L0x5555552a80, L0x5555552a82, L0x5555552a84, L0x5555552a86, L0x5555552a88, L0x5555552a8a, L0x5555552a8c, L0x5555552a8e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-15859)@sint16, (-2222)@sint16];
mov [L0x5555552a90, L0x5555552a92, L0x5555552a94, L0x5555552a96, L0x5555552a98, L0x5555552a9a, L0x5555552a9c, L0x5555552a9e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 9457@sint16, 1325@sint16];
mov [L0x5555552aa0, L0x5555552aa2, L0x5555552aa4, L0x5555552aa6, L0x5555552aa8, L0x5555552aaa, L0x5555552aac, L0x5555552aae] [(-28264)@sint16, (-16381)@sint16, (-17858)@sint16, (-8116)@sint16, (-2295)@sint16, (-1137)@sint16, (-12954)@sint16, (-1815)@sint16];
mov [L0x5555552ab0, L0x5555552ab2, L0x5555552ab4, L0x5555552ab6, L0x5555552ab8, L0x5555552aba, L0x5555552abc, L0x5555552abe] [(-28264)@sint16, (-16381)@sint16, (-20799)@sint16, 606@sint16, (-2295)@sint16, 85@sint16, (-193)@sint16, (-27)@sint16];
mov [L0x5555552ac0, L0x5555552ac2, L0x5555552ac4, L0x5555552ac6, L0x5555552ac8, L0x5555552aca, L0x5555552acc, L0x5555552ace] [(-28264)@sint16, (-16381)@sint16, 29106@sint16, 11655@sint16, (-2295)@sint16, 1633@sint16, (-2819)@sint16, (-395)@sint16];
mov [L0x5555552ad0, L0x5555552ad2, L0x5555552ad4, L0x5555552ad6, L0x5555552ad8, L0x5555552ada, L0x5555552adc, L0x5555552ade] [(-28264)@sint16, (-16381)@sint16, (-16759)@sint16, 713@sint16, (-2295)@sint16, 100@sint16, 14582@sint16, 2043@sint16];
mov [L0x5555552ae0, L0x5555552ae2, L0x5555552ae4, L0x5555552ae6, L0x5555552ae8, L0x5555552aea, L0x5555552aec, L0x5555552aee] [(-28264)@sint16, (-16381)@sint16, (-19728)@sint16, 7929@sint16, (-2295)@sint16, 1111@sint16, 5796@sint16, 812@sint16];
mov [L0x5555552af0, L0x5555552af2, L0x5555552af4, L0x5555552af6, L0x5555552af8, L0x5555552afa, L0x5555552afc, L0x5555552afe] [(-28264)@sint16, (-16381)@sint16, (-8151)@sint16, 12404@sint16, (-2295)@sint16, 1738@sint16, 10756@sint16, 1507@sint16];
mov [L0x5555552b00, L0x5555552b02, L0x5555552b04, L0x5555552b06, L0x5555552b08, L0x5555552b0a, L0x5555552b0c, L0x5555552b0e] [(-28264)@sint16, (-16381)@sint16, (-30919)@sint16, 7401@sint16, (-2295)@sint16, 1037@sint16, (-1627)@sint16, (-228)@sint16];
mov [L0x5555552b10, L0x5555552b12, L0x5555552b14, L0x5555552b16, L0x5555552b18, L0x5555552b1a, L0x5555552b1c, L0x5555552b1e] [(-28264)@sint16, (-16381)@sint16, (-25010)@sint16, (-8537)@sint16, (-2295)@sint16, (-1196)@sint16, (-5603)@sint16, (-785)@sint16];
mov [L0x5555552b20, L0x5555552b22, L0x5555552b24, L0x5555552b26, L0x5555552b28, L0x5555552b2a, L0x5555552b2c, L0x5555552b2e] [(-28264)@sint16, (-16381)@sint16, (-20956)@sint16, 8707@sint16, (-2295)@sint16, 1220@sint16, (-7937)@sint16, (-1112)@sint16];
mov [L0x5555552b30, L0x5555552b32, L0x5555552b34, L0x5555552b36, L0x5555552b38, L0x5555552b3a, L0x5555552b3c, L0x5555552b3e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-7)@sint16, (-1)@sint16];
mov [L0x5555552b40, L0x5555552b42, L0x5555552b44, L0x5555552b46, L0x5555552b48, L0x5555552b4a, L0x5555552b4c, L0x5555552b4e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 11463@sint16, 1606@sint16];
mov [L0x5555552b50, L0x5555552b52, L0x5555552b54, L0x5555552b56, L0x5555552b58, L0x5555552b5a, L0x5555552b5c, L0x5555552b5e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 6467@sint16, 906@sint16];
mov [L0x5555552b60, L0x5555552b62, L0x5555552b64, L0x5555552b66, L0x5555552b68, L0x5555552b6a, L0x5555552b6c, L0x5555552b6e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 2220@sint16, 311@sint16];
mov [L0x5555552b70, L0x5555552b72, L0x5555552b74, L0x5555552b76, L0x5555552b78, L0x5555552b7a, L0x5555552b7c, L0x5555552b7e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 6802@sint16, 953@sint16];
mov [L0x5555552b80, L0x5555552b82, L0x5555552b84, L0x5555552b86, L0x5555552b88, L0x5555552b8a, L0x5555552b8c, L0x5555552b8e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-12241)@sint16, (-1715)@sint16];
mov [L0x5555552b90, L0x5555552b92, L0x5555552b94, L0x5555552b96, L0x5555552b98, L0x5555552b9a, L0x5555552b9c, L0x5555552b9e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-2213)@sint16, (-310)@sint16];
mov [L0x5555552ba0, L0x5555552ba2, L0x5555552ba4, L0x5555552ba6, L0x5555552ba8, L0x5555552baa, L0x5555552bac, L0x5555552bae] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 14503@sint16, 2032@sint16];
mov [L0x5555552bb0, L0x5555552bb2, L0x5555552bb4, L0x5555552bb6, L0x5555552bb8, L0x5555552bba, L0x5555552bbc, L0x5555552bbe] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 5774@sint16, 809@sint16];
mov [L0x5555552bc0, L0x5555552bc2, L0x5555552bc4, L0x5555552bc6, L0x5555552bc8, L0x5555552bca, L0x5555552bcc, L0x5555552bce] [(-28264)@sint16, (-16381)@sint16, (-15031)@sint16, 9906@sint16, (-2295)@sint16, 1388@sint16, (-16231)@sint16, (-2274)@sint16];
mov [L0x5555552bd0, L0x5555552bd2, L0x5555552bd4, L0x5555552bd6, L0x5555552bd8, L0x5555552bda, L0x5555552bdc, L0x5555552bde] [(-28264)@sint16, (-16381)@sint16, (-27408)@sint16, (-3969)@sint16, (-2295)@sint16, (-556)@sint16, (-15353)@sint16, (-2151)@sint16];
mov [L0x5555552be0, L0x5555552be2, L0x5555552be4, L0x5555552be6, L0x5555552be8, L0x5555552bea, L0x5555552bec, L0x5555552bee] [(-28264)@sint16, (-16381)@sint16, (-29249)@sint16, 13582@sint16, (-2295)@sint16, 1903@sint16, 15695@sint16, 2199@sint16];
mov [L0x5555552bf0, L0x5555552bf2, L0x5555552bf4, L0x5555552bf6, L0x5555552bf8, L0x5555552bfa, L0x5555552bfc, L0x5555552bfe] [(-28264)@sint16, (-16381)@sint16, 21726@sint16, (-814)@sint16, (-2295)@sint16, (-114)@sint16, 14803@sint16, 2074@sint16];
mov [L0x5555552c00, L0x5555552c02, L0x5555552c04, L0x5555552c06, L0x5555552c08, L0x5555552c0a, L0x5555552c0c, L0x5555552c0e] [(-28264)@sint16, (-16381)@sint16, 4140@sint16, (-11006)@sint16, (-2295)@sint16, (-1542)@sint16, (-7958)@sint16, (-1115)@sint16];
mov [L0x5555552c10, L0x5555552c12, L0x5555552c14, L0x5555552c16, L0x5555552c18, L0x5555552c1a, L0x5555552c1c, L0x5555552c1e] [(-28264)@sint16, (-16381)@sint16, (-12990)@sint16, 2897@sint16, (-2295)@sint16, 406@sint16, 15859@sint16, 2222@sint16];
mov [L0x5555552c20, L0x5555552c22, L0x5555552c24, L0x5555552c26, L0x5555552c28, L0x5555552c2a, L0x5555552c2c, L0x5555552c2e] [(-28264)@sint16, (-16381)@sint16, (-6695)@sint16, (-9094)@sint16, (-2295)@sint16, (-1274)@sint16, 1427@sint16, 200@sint16];
mov [L0x5555552c30, L0x5555552c32, L0x5555552c34, L0x5555552c36, L0x5555552c38, L0x5555552c3a, L0x5555552c3c, L0x5555552c3e] [(-28264)@sint16, (-16381)@sint16, 23268@sint16, 14974@sint16, (-2295)@sint16, 2098@sint16, (-9457)@sint16, (-1325)@sint16];
mov [L0x5555552c40, L0x5555552c42, L0x5555552c44, L0x5555552c46, L0x5555552c48, L0x5555552c4a, L0x5555552c4c, L0x5555552c4e] [(-28264)@sint16, (-16381)@sint16, (-23297)@sint16, 16287@sint16, (-2295)@sint16, 2282@sint16, 1213@sint16, 170@sint16];
mov [L0x5555552c50, L0x5555552c52, L0x5555552c54, L0x5555552c56, L0x5555552c58, L0x5555552c5a, L0x5555552c5c, L0x5555552c5e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 12954@sint16, 1815@sint16];
mov [L0x5555552c60, L0x5555552c62, L0x5555552c64, L0x5555552c66, L0x5555552c68, L0x5555552c6a, L0x5555552c6c, L0x5555552c6e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 2819@sint16, 395@sint16];
mov [L0x5555552c70, L0x5555552c72, L0x5555552c74, L0x5555552c76, L0x5555552c78, L0x5555552c7a, L0x5555552c7c, L0x5555552c7e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-5796)@sint16, (-812)@sint16];
mov [L0x5555552c80, L0x5555552c82, L0x5555552c84, L0x5555552c86, L0x5555552c88, L0x5555552c8a, L0x5555552c8c, L0x5555552c8e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 1627@sint16, 228@sint16];
mov [L0x5555552c90, L0x5555552c92, L0x5555552c94, L0x5555552c96, L0x5555552c98, L0x5555552c9a, L0x5555552c9c, L0x5555552c9e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 7937@sint16, 1112@sint16];
mov [L0x5555552ca0, L0x5555552ca2, L0x5555552ca4, L0x5555552ca6, L0x5555552ca8, L0x5555552caa, L0x5555552cac, L0x5555552cae] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 193@sint16, 27@sint16];
mov [L0x5555552cb0, L0x5555552cb2, L0x5555552cb4, L0x5555552cb6, L0x5555552cb8, L0x5555552cba, L0x5555552cbc, L0x5555552cbe] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-14582)@sint16, (-2043)@sint16];
mov [L0x5555552cc0, L0x5555552cc2, L0x5555552cc4, L0x5555552cc6, L0x5555552cc8, L0x5555552cca, L0x5555552ccc, L0x5555552cce] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-10756)@sint16, (-1507)@sint16];
mov [L0x5555552cd0, L0x5555552cd2, L0x5555552cd4, L0x5555552cd6, L0x5555552cd8, L0x5555552cda, L0x5555552cdc, L0x5555552cde] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 5603@sint16, 785@sint16];
mov [L0x5555552ce0, L0x5555552ce2, L0x5555552ce4, L0x5555552ce6, L0x5555552ce8, L0x5555552cea, L0x5555552cec, L0x5555552cee] [(-28264)@sint16, (-16381)@sint16, (-23496)@sint16, 5745@sint16, (-2295)@sint16, 805@sint16, (-15081)@sint16, (-2113)@sint16];
mov [L0x5555552cf0, L0x5555552cf2, L0x5555552cf4, L0x5555552cf6, L0x5555552cf8, L0x5555552cfa, L0x5555552cfc, L0x5555552cfe] [(-28264)@sint16, (-16381)@sint16, (-21184)@sint16, (-3341)@sint16, (-2295)@sint16, (-468)@sint16, (-10678)@sint16, (-1496)@sint16];
mov [L0x5555552d00, L0x5555552d02, L0x5555552d04, L0x5555552d06, L0x5555552d08, L0x5555552d0a, L0x5555552d0c, L0x5555552d0e] [(-28264)@sint16, (-16381)@sint16, 3198@sint16, 4832@sint16, (-2295)@sint16, 677@sint16, 5203@sint16, 729@sint16];
mov [L0x5555552d10, L0x5555552d12, L0x5555552d14, L0x5555552d16, L0x5555552d18, L0x5555552d1a, L0x5555552d1c, L0x5555552d1e] [(-28264)@sint16, (-16381)@sint16, (-32632)@sint16, 15345@sint16, (-2295)@sint16, 2150@sint16, 10585@sint16, 1483@sint16];
mov [L0x5555552d20, L0x5555552d22, L0x5555552d24, L0x5555552d26, L0x5555552d28, L0x5555552d2a, L0x5555552d2c, L0x5555552d2e] [(-28264)@sint16, (-16381)@sint16, (-30934)@sint16, (-9736)@sint16, (-2295)@sint16, (-1364)@sint16, (-492)@sint16, (-69)@sint16];
mov [L0x5555552d30, L0x5555552d32, L0x5555552d34, L0x5555552d36, L0x5555552d38, L0x5555552d3a, L0x5555552d3c, L0x5555552d3e] [(-28264)@sint16, (-16381)@sint16, (-11406)@sint16, 4560@sint16, (-2295)@sint16, 639@sint16, 7359@sint16, 1031@sint16];
mov [L0x5555552d40, L0x5555552d42, L0x5555552d44, L0x5555552d46, L0x5555552d48, L0x5555552d4a, L0x5555552d4c, L0x5555552d4e] [(-28264)@sint16, (-16381)@sint16, (-9407)@sint16, 11676@sint16, (-2295)@sint16, 1636@sint16, 4497@sint16, 630@sint16];
mov [L0x5555552d50, L0x5555552d52, L0x5555552d54, L0x5555552d56, L0x5555552d58, L0x5555552d5a, L0x5555552d5c, L0x5555552d5e] [(-28264)@sint16, (-16381)@sint16, (-13418)@sint16, 13075@sint16, (-2295)@sint16, 1832@sint16, 11170@sint16, 1565@sint16];
mov [L0x5555552d60, L0x5555552d62, L0x5555552d64, L0x5555552d66, L0x5555552d68, L0x5555552d6a, L0x5555552d6c, L0x5555552d6e] [(-28264)@sint16, (-16381)@sint16, 8208@sint16, (-9393)@sint16, (-2295)@sint16, (-1316)@sint16, (-12562)@sint16, (-1760)@sint16];
mov [L0x5555552d70, L0x5555552d72, L0x5555552d74, L0x5555552d76, L0x5555552d78, L0x5555552d7a, L0x5555552d7c, L0x5555552d7e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 15081@sint16, 2113@sint16];
mov [L0x5555552d80, L0x5555552d82, L0x5555552d84, L0x5555552d86, L0x5555552d88, L0x5555552d8a, L0x5555552d8c, L0x5555552d8e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-5203)@sint16, (-729)@sint16];
mov [L0x5555552d90, L0x5555552d92, L0x5555552d94, L0x5555552d96, L0x5555552d98, L0x5555552d9a, L0x5555552d9c, L0x5555552d9e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 492@sint16, 69@sint16];
mov [L0x5555552da0, L0x5555552da2, L0x5555552da4, L0x5555552da6, L0x5555552da8, L0x5555552daa, L0x5555552dac, L0x5555552dae] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-4497)@sint16, (-630)@sint16];
mov [L0x5555552db0, L0x5555552db2, L0x5555552db4, L0x5555552db6, L0x5555552db8, L0x5555552dba, L0x5555552dbc, L0x5555552dbe] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 12562@sint16, 1760@sint16];
mov [L0x5555552dc0, L0x5555552dc2, L0x5555552dc4, L0x5555552dc6, L0x5555552dc8, L0x5555552dca, L0x5555552dcc, L0x5555552dce] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 10678@sint16, 1496@sint16];
mov [L0x5555552dd0, L0x5555552dd2, L0x5555552dd4, L0x5555552dd6, L0x5555552dd8, L0x5555552dda, L0x5555552ddc, L0x5555552dde] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-10585)@sint16, (-1483)@sint16];
mov [L0x5555552de0, L0x5555552de2, L0x5555552de4, L0x5555552de6, L0x5555552de8, L0x5555552dea, L0x5555552dec, L0x5555552dee] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-7359)@sint16, (-1031)@sint16];
mov [L0x5555552df0, L0x5555552df2, L0x5555552df4, L0x5555552df6, L0x5555552df8, L0x5555552dfa, L0x5555552dfc, L0x5555552dfe] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-11170)@sint16, (-1565)@sint16];
mov [L0x5555552e00, L0x5555552e02, L0x5555552e04, L0x5555552e06, L0x5555552e08, L0x5555552e0a, L0x5555552e0c, L0x5555552e0e] [1@sint16, 7@sint16, (-478)@sint16, (-3412)@sint16, (-478)@sint16, (-3412)@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e10, L0x5555552e12, L0x5555552e14, L0x5555552e16, L0x5555552e18, L0x5555552e1a, L0x5555552e1c, L0x5555552e1e] [(-1610)@sint16, (-11491)@sint16, 1175@sint16, 8386@sint16, 0@sint16, 0@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e20, L0x5555552e22, L0x5555552e24, L0x5555552e26, L0x5555552e28, L0x5555552e2a, L0x5555552e2c, L0x5555552e2e] [1610@sint16, 11491@sint16, (-129)@sint16, (-921)@sint16, 1708@sint16, 12191@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e30, L0x5555552e32, L0x5555552e34, L0x5555552e36, L0x5555552e38, L0x5555552e3a, L0x5555552e3c, L0x5555552e3e] [2274@sint16, 16231@sint16, 2190@sint16, 15631@sint16, 0@sint16, 0@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e40, L0x5555552e42, L0x5555552e44, L0x5555552e46, L0x5555552e48, L0x5555552e4a, L0x5555552e4c, L0x5555552e4e] [(-1815)@sint16, (-12954)@sint16, (-6)@sint16, (-43)@sint16, (-129)@sint16, (-921)@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e50, L0x5555552e52, L0x5555552e54, L0x5555552e56, L0x5555552e58, L0x5555552e5a, L0x5555552e5c, L0x5555552e5e] [(-1)@sint16, (-7)@sint16, 956@sint16, 6823@sint16, 0@sint16, 0@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e60, L0x5555552e62, L0x5555552e64, L0x5555552e66, L0x5555552e68, L0x5555552e6a, L0x5555552e6c, L0x5555552e6e] [(-2274)@sint16, (-16231)@sint16, 1708@sint16, 12191@sint16, (-1095)@sint16, (-7815)@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e70, L0x5555552e72, L0x5555552e74, L0x5555552e76, L0x5555552e78, L0x5555552e7a, L0x5555552e7c, L0x5555552e7e] [1815@sint16, 12954@sint16, 258@sint16, 1841@sint16, 0@sint16, 0@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e80, L0x5555552e82, L0x5555552e84, L0x5555552e86, L0x5555552e88, L0x5555552e8a, L0x5555552e8c, L0x5555552e8e] [(-2113)@sint16, (-15081)@sint16, (-1095)@sint16, (-7815)@sint16, (-6)@sint16, (-43)@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e90, L0x5555552e92, L0x5555552e94, L0x5555552e96, L0x5555552e98, L0x5555552e9a, L0x5555552e9c, L0x5555552e9e] [2113@sint16, 15081@sint16, 12@sint16, 86@sint16, 0@sint16, 0@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552ea0, L0x5555552ea2, L0x5555552ea4, L0x5555552ea6, L0x5555552ea8, L0x5555552eaa, L0x5555552eac, L0x5555552eae] [4591@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16];
mov [L0x5555552eb0, L0x5555552eb2, L0x5555552eb4, L0x5555552eb6, L0x5555552eb8, L0x5555552eba, L0x5555552ebc, L0x5555552ebe] [(-27)@sint16, (-193)@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16];
mov [L0x5555552ec0, L0x5555552ec2, L0x5555552ec4, L0x5555552ec6, L0x5555552ec8, L0x5555552eca, L0x5555552ecc, L0x5555552ece] [4591@sint16, 4591@sint16, 4591@sint16, 4591@sint16, 4591@sint16, 4591@sint16, 4591@sint16, 4591@sint16];
mov [L0x5555552ed0, L0x5555552ed2, L0x5555552ed4, L0x5555552ed6, L0x5555552ed8, L0x5555552eda, L0x5555552edc, L0x5555552ede] [2295@sint16, 2295@sint16, 2295@sint16, 2295@sint16, 2295@sint16, 2295@sint16, 2295@sint16, 2295@sint16];
mov [L0x5555552ee0, L0x5555552ee2, L0x5555552ee4, L0x5555552ee6, L0x5555552ee8, L0x5555552eea, L0x5555552eec, L0x5555552eee] [(-2295)@sint16, (-2295)@sint16, (-2295)@sint16, (-2295)@sint16, (-2295)@sint16, (-2295)@sint16, (-2295)@sint16, (-2295)@sint16];

mov [L0x5555570c38, L0x5555570c3a, L0x5555570c3c, L0x5555570c3e, L0x5555570c40, L0x5555570c42, L0x5555570c44, L0x5555570c46] [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7];
mov [L0x5555570c48, L0x5555570c4a, L0x5555570c4c, L0x5555570c4e, L0x5555570c50, L0x5555570c52, L0x5555570c54, L0x5555570c56] [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15];
mov [L0x5555570c58, L0x5555570c5a, L0x5555570c5c, L0x5555570c5e, L0x5555570c60, L0x5555570c62, L0x5555570c64, L0x5555570c66] [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23];
mov [L0x5555570c68, L0x5555570c6a, L0x5555570c6c, L0x5555570c6e, L0x5555570c70, L0x5555570c72, L0x5555570c74, L0x5555570c76] [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31];
mov [L0x5555570c78, L0x5555570c7a, L0x5555570c7c, L0x5555570c7e, L0x5555570c80, L0x5555570c82, L0x5555570c84, L0x5555570c86] [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39];
mov [L0x5555570c88, L0x5555570c8a, L0x5555570c8c, L0x5555570c8e, L0x5555570c90, L0x5555570c92, L0x5555570c94, L0x5555570c96] [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47];
mov [L0x5555570c98, L0x5555570c9a, L0x5555570c9c, L0x5555570c9e, L0x5555570ca0, L0x5555570ca2, L0x5555570ca4, L0x5555570ca6] [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55];
mov [L0x5555570ca8, L0x5555570caa, L0x5555570cac, L0x5555570cae, L0x5555570cb0, L0x5555570cb2, L0x5555570cb4, L0x5555570cb6] [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63];
mov [L0x5555570cb8, L0x5555570cba, L0x5555570cbc, L0x5555570cbe, L0x5555570cc0, L0x5555570cc2, L0x5555570cc4, L0x5555570cc6] [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71];
mov [L0x5555570cc8, L0x5555570cca, L0x5555570ccc, L0x5555570cce, L0x5555570cd0, L0x5555570cd2, L0x5555570cd4, L0x5555570cd6] [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79];


# prologue

(* #! -> SP = 0x7fffffe170 *)
#! 0x7fffffe170 = 0x7fffffe170;
(* ldr	q5, [x3, #1776]                             #! EA = L0x55555526f0; Value = 0x00000007001d11ef; PC = 0x5555551f68 *)
mov %v5 [L0x55555526f0,L0x55555526f2,L0x55555526f4,L0x55555526f6,L0x55555526f8,L0x55555526fa,L0x55555526fc,L0x55555526fe];
(* ldr	q4, [x3, #1792]                             #! EA = L0x5555552700; Value = 0xf938fcce039603ed; PC = 0x5555551f70 *)
mov %v4 [L0x5555552700,L0x5555552702,L0x5555552704,L0x5555552706,L0x5555552708,L0x555555270a,L0x555555270c,L0x555555270e];

cut (* 0 *)
    [L0x5555570c38, L0x5555570c3a, L0x5555570c3c, L0x5555570c3e, L0x5555570c40, L0x5555570c42, L0x5555570c44, L0x5555570c46] = [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] /\
    [L0x5555570c48, L0x5555570c4a, L0x5555570c4c, L0x5555570c4e, L0x5555570c50, L0x5555570c52, L0x5555570c54, L0x5555570c56] = [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] /\
    [L0x5555570c58, L0x5555570c5a, L0x5555570c5c, L0x5555570c5e, L0x5555570c60, L0x5555570c62, L0x5555570c64, L0x5555570c66] = [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23] /\
    [L0x5555570c68, L0x5555570c6a, L0x5555570c6c, L0x5555570c6e, L0x5555570c70, L0x5555570c72, L0x5555570c74, L0x5555570c76] = [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31] /\
    [L0x5555570c78, L0x5555570c7a, L0x5555570c7c, L0x5555570c7e, L0x5555570c80, L0x5555570c82, L0x5555570c84, L0x5555570c86] = [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] /\
    [L0x5555570c88, L0x5555570c8a, L0x5555570c8c, L0x5555570c8e, L0x5555570c90, L0x5555570c92, L0x5555570c94, L0x5555570c96] = [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] /\
    [L0x5555570c98, L0x5555570c9a, L0x5555570c9c, L0x5555570c9e, L0x5555570ca0, L0x5555570ca2, L0x5555570ca4, L0x5555570ca6] = [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] /\
    [L0x5555570ca8, L0x5555570caa, L0x5555570cac, L0x5555570cae, L0x5555570cb0, L0x5555570cb2, L0x5555570cb4, L0x5555570cb6] = [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] /\
    [L0x5555570cb8, L0x5555570cba, L0x5555570cbc, L0x5555570cbe, L0x5555570cc0, L0x5555570cc2, L0x5555570cc4, L0x5555570cc6] = [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] /\
    [L0x5555570cc8, L0x5555570cca, L0x5555570ccc, L0x5555570cce, L0x5555570cd0, L0x5555570cd2, L0x5555570cd4, L0x5555570cd6] = [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79]
  &&
    [L0x5555570c38, L0x5555570c3a, L0x5555570c3c, L0x5555570c3e, L0x5555570c40, L0x5555570c42, L0x5555570c44, L0x5555570c46] = [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] /\
    [L0x5555570c48, L0x5555570c4a, L0x5555570c4c, L0x5555570c4e, L0x5555570c50, L0x5555570c52, L0x5555570c54, L0x5555570c56] = [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] /\
    [L0x5555570c58, L0x5555570c5a, L0x5555570c5c, L0x5555570c5e, L0x5555570c60, L0x5555570c62, L0x5555570c64, L0x5555570c66] = [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23] /\
    [L0x5555570c68, L0x5555570c6a, L0x5555570c6c, L0x5555570c6e, L0x5555570c70, L0x5555570c72, L0x5555570c74, L0x5555570c76] = [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31] /\
    [L0x5555570c78, L0x5555570c7a, L0x5555570c7c, L0x5555570c7e, L0x5555570c80, L0x5555570c82, L0x5555570c84, L0x5555570c86] = [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] /\
    [L0x5555570c88, L0x5555570c8a, L0x5555570c8c, L0x5555570c8e, L0x5555570c90, L0x5555570c92, L0x5555570c94, L0x5555570c96] = [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] /\
    [L0x5555570c98, L0x5555570c9a, L0x5555570c9c, L0x5555570c9e, L0x5555570ca0, L0x5555570ca2, L0x5555570ca4, L0x5555570ca6] = [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] /\
    [L0x5555570ca8, L0x5555570caa, L0x5555570cac, L0x5555570cae, L0x5555570cb0, L0x5555570cb2, L0x5555570cb4, L0x5555570cb6] = [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] /\
    [L0x5555570cb8, L0x5555570cba, L0x5555570cbc, L0x5555570cbe, L0x5555570cc0, L0x5555570cc2, L0x5555570cc4, L0x5555570cc6] = [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] /\
    [L0x5555570cc8, L0x5555570cca, L0x5555570ccc, L0x5555570cce, L0x5555570cd0, L0x5555570cd2, L0x5555570cd4, L0x5555570cd6] = [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79];


## k0 iter

(* ldr	q16, [x1]                                   #! EA = L0x5555570c38; Value = 0x0000000000000000; PC = 0x5555551f74 *)
mov %v16 [L0x5555570c38,L0x5555570c3a,L0x5555570c3c,L0x5555570c3e,L0x5555570c40,L0x5555570c42,L0x5555570c44,L0x5555570c46];
(* ldr	q19, [x1, #32]                              #! EA = L0x5555570c58; Value = 0x0000000000000000; PC = 0x5555551f78 *)
mov %v19 [L0x5555570c58,L0x5555570c5a,L0x5555570c5c,L0x5555570c5e,L0x5555570c60,L0x5555570c62,L0x5555570c64,L0x5555570c66];
(* ldr	q1, [x1, #64]                               #! EA = L0x5555570c78; Value = 0x0000000000000000; PC = 0x5555551f7c *)
mov %v1 [L0x5555570c78,L0x5555570c7a,L0x5555570c7c,L0x5555570c7e,L0x5555570c80,L0x5555570c82,L0x5555570c84,L0x5555570c86];
(* ldr	q0, [x1, #96]                               #! EA = L0x5555570c98; Value = 0x0000000000000000; PC = 0x5555551f80 *)
mov %v0 [L0x5555570c98,L0x5555570c9a,L0x5555570c9c,L0x5555570c9e,L0x5555570ca0,L0x5555570ca2,L0x5555570ca4,L0x5555570ca6];
(* ldr	q2, [x1, #128]                              #! EA = L0x5555570cb8; Value = 0x0000000000000000; PC = 0x5555551f84 *)
mov %v2 [L0x5555570cb8,L0x5555570cba,L0x5555570cbc,L0x5555570cbe,L0x5555570cc0,L0x5555570cc2,L0x5555570cc4,L0x5555570cc6];

ghost %fa8_0@sint16[8], %fa9_0@sint16[8], %fa0_0@sint16[8], %fa1_0@sint16[8], %fa2_0@sint16[8] :
    %fa8_0 = %v16 /\ %fa9_0 = %v19 /\ %fa0_0 = %v1 /\ %fa1_0 = %v0 /\ %fa2_0 = %v2
  &&
    %fa8_0 = %v16 /\ %fa9_0 = %v19 /\ %fa0_0 = %v1 /\ %fa1_0 = %v0 /\ %fa2_0 = %v2;

(* add	v3.8h, v16.8h, v2.8h                        #! PC = 0x5555551f88 *)
add %v3 %v16 %v2;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551f8c *)
add %v6 %v1 %v3;
(* sqrdmulh	v7.8h, v6.8h, v5.h[1]                  #! PC = 0x5555551f90 *)
broadcast %mul 8 [%v5[1]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v7 %LO11 %LO01;
(* shl	v6.8h, v6.8h, #2                            #! PC = 0x5555551f94 *)
shl %v6 %v6 [(2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16];
(* mls	v6.8h, v7.8h, v5.h[0]                       #! PC = 0x5555551f98 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;

assert
    [4, 4, 4, 4, 4, 4, 4, 4] * (%fa0_0 + %fa2_0 + %fa8_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v6
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [4, 4, 4, 4, 4, 4, 4, 4] * (%fa0_0 + %fa2_0 + %fa8_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v6
    && true;

(* shl	v1.8h, v1.8h, #2                            #! PC = 0x5555551f9c *)
shl %v1 %v1 [(2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16];
(* sub	v1.8h, v1.8h, v3.8h                         #! PC = 0x5555551fa0 *)
sub %v1 %v1 %v3;
(* sshr	v7.8h, v1.8h, #12                          #! PC = 0x5555551fa4 *)
split %v7 %dc %v1 12;
(* cmlt	v17.8h, v1.8h, #0                          #! PC = 0x5555551fa8 *)
split %v17 %dc %v1 15;
(* sub	v7.8h, v7.8h, v17.8h                        #! PC = 0x5555551fac *)
sub %v7 %v7 %v17;
(* mls	v1.8h, v7.8h, v5.h[0]                       #! PC = 0x5555551fb0 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;

assert
    ([4, 4, 4, 4, 4, 4, 4, 4] * %fa0_0 - %fa2_0 - %fa8_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v1
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    ([4, 4, 4, 4, 4, 4, 4, 4] * %fa0_0 - %fa2_0 - %fa8_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v1
    && true;

(* sqrdmulh	v7.8h, v3.8h, v4.h[4]                  #! PC = 0x5555551fb4 *)
broadcast %mul 8 [%v4[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v7 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v4.h[0]                       #! PC = 0x5555551fb8 *)
broadcast %mul 8 [%v4[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v7.8h, v5.h[0]                       #! PC = 0x5555551fbc *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;

assert
    [1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005] * (%fa2_0 + %fa8_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v3
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005] * (%fa2_0 + %fa8_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v3
    && true;

(* sub	v17.8h, v1.8h, v3.8h                        #! PC = 0x5555551fc0 *)
sub %v17 %v1 %v3;
(* add	v1.8h, v1.8h, v3.8h                         #! PC = 0x5555551fc4 *)
add %v1 %v1 %v3;
(* sub	v2.8h, v2.8h, v16.8h                        #! PC = 0x5555551fc8 *)
sub %v2 %v2 %v16;
(* sqrdmulh	v7.8h, v2.8h, v4.h[6]                  #! PC = 0x5555551fcc *)
broadcast %mul 8 [%v4[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v7 %LO11 %LO01;
(* mul	v3.8h, v2.8h, v4.h[2]                       #! PC = 0x5555551fd0 *)
broadcast %mul 8 [%v4[2]]; mull %dc %v3 %v2 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v7.8h, v5.h[0]                       #! PC = 0x5555551fd4 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;

assert
    [-818, -818, -818, -818, -818, -818, -818, -818] * (%fa2_0 - %fa8_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v3
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [-818, -818, -818, -818, -818, -818, -818, -818] * (%fa2_0 - %fa8_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v3
    && true;

(* sqrdmulh	v7.8h, v2.8h, v4.h[7]                  #! PC = 0x5555551fd8 *)
broadcast %mul 8 [%v4[7]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v7 %LO11 %LO01;
(* mul	v2.8h, v2.8h, v4.h[3]                       #! PC = 0x5555551fdc *)
broadcast %mul 8 [%v4[3]]; mull %dc %v2 %v2 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v7.8h, v5.h[0]                       #! PC = 0x5555551fe0 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;

assert
    [-1736, -1736, -1736, -1736, -1736, -1736, -1736, -1736] * (%fa2_0 - %fa8_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v2
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [-1736, -1736, -1736, -1736, -1736, -1736, -1736, -1736] * (%fa2_0 - %fa8_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v2
    && true;

(* sub	v3.8h, v2.8h, v3.8h                         #! PC = 0x5555551fe4 *)
sub %v3 %v2 %v3;
(* sub	v18.8h, v17.8h, v2.8h                       #! PC = 0x5555551fe8 *)
sub %v18 %v17 %v2;
(* sub	v20.8h, v1.8h, v3.8h                        #! PC = 0x5555551fec *)
sub %v20 %v1 %v3;
(* add	v17.8h, v17.8h, v2.8h                       #! PC = 0x5555551ff0 *)
add %v17 %v17 %v2;
(* add	v1.8h, v1.8h, v3.8h                         #! PC = 0x5555551ff4 *)
add %v1 %v1 %v3;

assert
    true &&
    %v6 <=s [2690@16, 2690@16, 2690@16, 2690@16, 2690@16, 2690@16, 2690@16, 2690@16] /\
    %v6 >=s [(-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16] /\

    %v18 <=s [8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16] /\
    %v18 >=s [(-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16] /\

    %v1 <=s [10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16] /\
    %v1 >=s [(-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16] /\

    %v20 <=s [10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16] /\
    %v20 >=s [(-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16] /\

    %v17 <=s [8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16] /\
    %v17 >=s [(-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16]
    prove with [precondition, cuts[0]];

assume
    true &&
    %v6 <=s [2690@16, 2690@16, 2690@16, 2690@16, 2690@16, 2690@16, 2690@16, 2690@16] /\
    %v6 >=s [(-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16] /\

    %v18 <=s [8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16] /\
    %v18 >=s [(-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16] /\

    %v1 <=s [10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16] /\
    %v1 >=s [(-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16] /\

    %v20 <=s [10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16] /\
    %v20 >=s [(-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16] /\

    %v17 <=s [8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16] /\
    %v17 >=s [(-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16];

(* add	v3.8h, v19.8h, v0.8h                        #! PC = 0x5555551ff8 *)
add %v3 %v19 %v0;
(* sqrdmulh	v2.8h, v3.8h, v5.h[1]                  #! PC = 0x5555551ffc *)
broadcast %mul 8 [%v5[1]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* shl	v16.8h, v3.8h, #2                           #! PC = 0x5555552000 *)
shl %v16 %v3 [(2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16];
(* mls	v16.8h, v2.8h, v5.h[0]                      #! PC = 0x5555552004 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;

assert
    [4, 4, 4, 4, 4, 4, 4, 4] * (%fa1_0 + %fa9_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v2
    = %v16
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [4, 4, 4, 4, 4, 4, 4, 4] * (%fa1_0 + %fa9_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v2
    = %v16
    && true;

(* neg	v2.8h, v3.8h                                #! PC = 0x5555552008 *)
broadcast %zero 8 [0@sint16]; sub %v2 %zero %v3;
(* sshr	v7.8h, v2.8h, #12                          #! PC = 0x555555200c *)
split %v7 %dc %v2 12;
(* cmlt	v21.8h, v2.8h, #0                          #! PC = 0x5555552010 *)
split %v21 %dc %v2 15;
(* sub	v7.8h, v7.8h, v21.8h                        #! PC = 0x5555552014 *)
sub %v7 %v7 %v21;
(* mls	v2.8h, v7.8h, v5.h[0]                       #! PC = 0x5555552018 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;

assert
    -(%fa1_0 + %fa9_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v2
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    -(%fa1_0 + %fa9_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v2
    && true;

(* sqrdmulh	v7.8h, v3.8h, v4.h[4]                  #! PC = 0x555555201c *)
broadcast %mul 8 [%v4[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v7 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v4.h[0]                       #! PC = 0x5555552020 *)
broadcast %mul 8 [%v4[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v7.8h, v5.h[0]                       #! PC = 0x5555552024 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;

assert
    [1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005] * (%fa1_0 + %fa9_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v3
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005] * (%fa1_0 + %fa9_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v3
    && true;

(* add	v7.8h, v2.8h, v3.8h                         #! PC = 0x5555552028 *)
add %v7 %v2 %v3;
(* sub	v2.8h, v2.8h, v3.8h                         #! PC = 0x555555202c *)
sub %v2 %v2 %v3;
(* sub	v0.8h, v0.8h, v19.8h                        #! PC = 0x5555552030 *)
sub %v0 %v0 %v19;
(* sqrdmulh	v19.8h, v0.8h, v4.h[5]                 #! PC = 0x5555552034 *)
broadcast %mul 8 [%v4[5]]; smulj %LO %v0 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v19 %LO11 %LO01;
(* mul	v3.8h, v0.8h, v4.h[1]                       #! PC = 0x5555552038 *)
broadcast %mul 8 [%v4[1]]; mull %dc %v3 %v0 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v19.8h, v5.h[0]                      #! PC = 0x555555203c *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v19 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;

assert
    [918, 918, 918, 918, 918, 918, 918, 918] * (%fa1_0 - %fa9_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v19
    = %v3
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [918, 918, 918, 918, 918, 918, 918, 918] * (%fa1_0 - %fa9_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v19
    = %v3
    && true;

(* sqrdmulh	v19.8h, v0.8h, v4.h[6]                 #! PC = 0x5555552040 *)
broadcast %mul 8 [%v4[6]]; smulj %LO %v0 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v19 %LO11 %LO01;
(* mul	v0.8h, v0.8h, v4.h[2]                       #! PC = 0x5555552044 *)
broadcast %mul 8 [%v4[2]]; mull %dc %v0 %v0 %mul; cast %v0@int16[8] %v0;
(* mls	v0.8h, v19.8h, v5.h[0]                      #! PC = 0x5555552048 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v19 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;

assert
    [-818, -818, -818, -818, -818, -818, -818, -818] * (%fa1_0 - %fa9_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v19
    = %v0
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [-818, -818, -818, -818, -818, -818, -818, -818] * (%fa1_0 - %fa9_0)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v19
    = %v0
    && true;

(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x555555204c *)
sub %v0 %v0 %v3;
(* add	v21.8h, v7.8h, v3.8h                        #! PC = 0x5555552050 *)
add %v21 %v7 %v3;
(* add	v19.8h, v2.8h, v0.8h                        #! PC = 0x5555552054 *)
add %v19 %v2 %v0;
(* sub	v3.8h, v7.8h, v3.8h                         #! PC = 0x5555552058 *)
sub %v3 %v7 %v3;
(* sub	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555205c *)
sub %v2 %v2 %v0;

assert
    true &&
    %v16 <=s [2545@16, 2545@16, 2545@16, 2545@16, 2545@16, 2545@16, 2545@16, 2545@16] /\
    %v16 >=s [(-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16] /\

    %v21 <=s [8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16] /\
    %v21 >=s [(-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16] /\

    %v2 <=s [10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16] /\
    %v2 >=s [(-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16] /\

    %v19 <=s [10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16] /\
    %v19 >=s [(-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16] /\

    %v3 <=s [8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16] /\
    %v3 >=s [(-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16]
    prove with [precondition, cuts[0]];

assume
    true &&
    %v16 <=s [2545@16, 2545@16, 2545@16, 2545@16, 2545@16, 2545@16, 2545@16, 2545@16] /\
    %v16 >=s [(-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16] /\

    %v21 <=s [8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16] /\
    %v21 >=s [(-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16] /\

    %v2 <=s [10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16] /\
    %v2 >=s [(-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16] /\

    %v19 <=s [10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16] /\
    %v19 >=s [(-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16] /\

    %v3 <=s [8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16] /\
    %v3 >=s [(-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16];

(* add	v0.8h, v16.8h, v6.8h                        #! PC = 0x5555552060 *)
add %v0 %v16 %v6;
(* str	q0, [x2]                                    #! EA = L0x7fffffe430; PC = 0x5555552064 *)
mov [L0x7fffffe430,L0x7fffffe432,L0x7fffffe434,L0x7fffffe436,L0x7fffffe438,L0x7fffffe43a,L0x7fffffe43c,L0x7fffffe43e] %v0;
(* sub	v0.8h, v20.8h, v19.8h                       #! PC = 0x5555552068 *)
sub %v0 %v20 %v19;
(* str	q0, [x2, #32]                               #! EA = L0x7fffffe450; PC = 0x555555206c *)
mov [L0x7fffffe450,L0x7fffffe452,L0x7fffffe454,L0x7fffffe456,L0x7fffffe458,L0x7fffffe45a,L0x7fffffe45c,L0x7fffffe45e] %v0;
(* add	v0.8h, v21.8h, v18.8h                       #! PC = 0x5555552070 *)
add %v0 %v21 %v18;
(* str	q0, [x2, #64]                               #! EA = L0x7fffffe470; PC = 0x5555552074 *)
mov [L0x7fffffe470,L0x7fffffe472,L0x7fffffe474,L0x7fffffe476,L0x7fffffe478,L0x7fffffe47a,L0x7fffffe47c,L0x7fffffe47e] %v0;
(* sub	v0.8h, v17.8h, v3.8h                        #! PC = 0x5555552078 *)
sub %v0 %v17 %v3;
(* str	q0, [x2, #96]                               #! EA = L0x7fffffe490; PC = 0x555555207c *)
mov [L0x7fffffe490,L0x7fffffe492,L0x7fffffe494,L0x7fffffe496,L0x7fffffe498,L0x7fffffe49a,L0x7fffffe49c,L0x7fffffe49e] %v0;
(* add	v0.8h, v2.8h, v1.8h                         #! PC = 0x5555552080 *)
add %v0 %v2 %v1;
(* str	q0, [x2, #128]                              #! EA = L0x7fffffe4b0; PC = 0x5555552084 *)
mov [L0x7fffffe4b0,L0x7fffffe4b2,L0x7fffffe4b4,L0x7fffffe4b6,L0x7fffffe4b8,L0x7fffffe4ba,L0x7fffffe4bc,L0x7fffffe4be] %v0;
(* sub	v6.8h, v6.8h, v16.8h                        #! PC = 0x5555552088 *)
sub %v6 %v6 %v16;
(* str	q6, [x2, #160]                              #! EA = L0x7fffffe4d0; PC = 0x555555208c *)
mov [L0x7fffffe4d0,L0x7fffffe4d2,L0x7fffffe4d4,L0x7fffffe4d6,L0x7fffffe4d8,L0x7fffffe4da,L0x7fffffe4dc,L0x7fffffe4de] %v6;
(* add	v19.8h, v19.8h, v20.8h                      #! PC = 0x5555552090 *)
add %v19 %v19 %v20;
(* str	q19, [x2, #192]                             #! EA = L0x7fffffe4f0; PC = 0x5555552094 *)
mov [L0x7fffffe4f0,L0x7fffffe4f2,L0x7fffffe4f4,L0x7fffffe4f6,L0x7fffffe4f8,L0x7fffffe4fa,L0x7fffffe4fc,L0x7fffffe4fe] %v19;
(* sub	v18.8h, v18.8h, v21.8h                      #! PC = 0x5555552098 *)
sub %v18 %v18 %v21;
(* str	q18, [x2, #224]                             #! EA = L0x7fffffe510; PC = 0x555555209c *)
mov [L0x7fffffe510,L0x7fffffe512,L0x7fffffe514,L0x7fffffe516,L0x7fffffe518,L0x7fffffe51a,L0x7fffffe51c,L0x7fffffe51e] %v18;
(* add	v3.8h, v3.8h, v17.8h                        #! PC = 0x55555520a0 *)
add %v3 %v3 %v17;
(* str	q3, [x2, #256]                              #! EA = L0x7fffffe530; PC = 0x55555520a4 *)
mov [L0x7fffffe530,L0x7fffffe532,L0x7fffffe534,L0x7fffffe536,L0x7fffffe538,L0x7fffffe53a,L0x7fffffe53c,L0x7fffffe53e] %v3;
(* sub	v1.8h, v1.8h, v2.8h                         #! PC = 0x55555520a8 *)
sub %v1 %v1 %v2;
(* str	q1, [x2, #288]                              #! EA = L0x7fffffe550; PC = 0x55555520ac *)
mov [L0x7fffffe550,L0x7fffffe552,L0x7fffffe554,L0x7fffffe556,L0x7fffffe558,L0x7fffffe55a,L0x7fffffe55c,L0x7fffffe55e] %v1;
(* #b.ne	0x5555551f74 <_ZN6xpower8low_lay111fwd_extractEPA2_A8_sPKs+24>  // b.any#! PC = 0x55555520bc *)
#b.ne	0x5555551f74 <_ZN6xpower8low_lay111fwd_extractEPA2_A8_sPKs+24>  // b.any#! 0x55555520bc = 0x55555520bc;

cut (* 1 *)
    [L0x7fffffe430, L0x7fffffe432, L0x7fffffe434, L0x7fffffe436, L0x7fffffe438, L0x7fffffe43a, L0x7fffffe43c, L0x7fffffe43e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe450, L0x7fffffe452, L0x7fffffe454, L0x7fffffe456, L0x7fffffe458, L0x7fffffe45a, L0x7fffffe45c, L0x7fffffe45e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [-1610, -1610, -1610, -1610, -1610, -1610, -1610, -1610] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [2113, 2113, 2113, 2113, 2113, 2113, 2113, 2113] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe470, L0x7fffffe472, L0x7fffffe474, L0x7fffffe476, L0x7fffffe478, L0x7fffffe47a, L0x7fffffe47c, L0x7fffffe47e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe490, L0x7fffffe492, L0x7fffffe494, L0x7fffffe496, L0x7fffffe498, L0x7fffffe49a, L0x7fffffe49c, L0x7fffffe49e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [2274, 2274, 2274, 2274, 2274, 2274, 2274, 2274] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [1815, 1815, 1815, 1815, 1815, 1815, 1815, 1815] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe4b0, L0x7fffffe4b2, L0x7fffffe4b4, L0x7fffffe4b6, L0x7fffffe4b8, L0x7fffffe4ba, L0x7fffffe4bc, L0x7fffffe4be] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe4d0, L0x7fffffe4d2, L0x7fffffe4d4, L0x7fffffe4d6, L0x7fffffe4d8, L0x7fffffe4da, L0x7fffffe4dc, L0x7fffffe4de] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [-1, -1, -1, -1, -1, -1, -1, -1] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [-1, -1, -1, -1, -1, -1, -1, -1] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe4f0, L0x7fffffe4f2, L0x7fffffe4f4, L0x7fffffe4f6, L0x7fffffe4f8, L0x7fffffe4fa, L0x7fffffe4fc, L0x7fffffe4fe] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe510, L0x7fffffe512, L0x7fffffe514, L0x7fffffe516, L0x7fffffe518, L0x7fffffe51a, L0x7fffffe51c, L0x7fffffe51e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [1815, 1815, 1815, 1815, 1815, 1815, 1815, 1815] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [2274, 2274, 2274, 2274, 2274, 2274, 2274, 2274] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe530, L0x7fffffe532, L0x7fffffe534, L0x7fffffe536, L0x7fffffe538, L0x7fffffe53a, L0x7fffffe53c, L0x7fffffe53e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe550, L0x7fffffe552, L0x7fffffe554, L0x7fffffe556, L0x7fffffe558, L0x7fffffe55a, L0x7fffffe55c, L0x7fffffe55e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [2113, 2113, 2113, 2113, 2113, 2113, 2113, 2113] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [-1610, -1610, -1610, -1610, -1610, -1610, -1610, -1610] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    true
  &&
    [L0x7fffffe430, L0x7fffffe432, L0x7fffffe434, L0x7fffffe436, L0x7fffffe438, L0x7fffffe43a, L0x7fffffe43c, L0x7fffffe43e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe450, L0x7fffffe452, L0x7fffffe454, L0x7fffffe456, L0x7fffffe458, L0x7fffffe45a, L0x7fffffe45c, L0x7fffffe45e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe470, L0x7fffffe472, L0x7fffffe474, L0x7fffffe476, L0x7fffffe478, L0x7fffffe47a, L0x7fffffe47c, L0x7fffffe47e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe490, L0x7fffffe492, L0x7fffffe494, L0x7fffffe496, L0x7fffffe498, L0x7fffffe49a, L0x7fffffe49c, L0x7fffffe49e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe4b0, L0x7fffffe4b2, L0x7fffffe4b4, L0x7fffffe4b6, L0x7fffffe4b8, L0x7fffffe4ba, L0x7fffffe4bc, L0x7fffffe4be] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe4d0, L0x7fffffe4d2, L0x7fffffe4d4, L0x7fffffe4d6, L0x7fffffe4d8, L0x7fffffe4da, L0x7fffffe4dc, L0x7fffffe4de] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe4f0, L0x7fffffe4f2, L0x7fffffe4f4, L0x7fffffe4f6, L0x7fffffe4f8, L0x7fffffe4fa, L0x7fffffe4fc, L0x7fffffe4fe] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe510, L0x7fffffe512, L0x7fffffe514, L0x7fffffe516, L0x7fffffe518, L0x7fffffe51a, L0x7fffffe51c, L0x7fffffe51e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe530, L0x7fffffe532, L0x7fffffe534, L0x7fffffe536, L0x7fffffe538, L0x7fffffe53a, L0x7fffffe53c, L0x7fffffe53e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe550, L0x7fffffe552, L0x7fffffe554, L0x7fffffe556, L0x7fffffe558, L0x7fffffe55a, L0x7fffffe55c, L0x7fffffe55e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\

    [L0x7fffffe430, L0x7fffffe432, L0x7fffffe434, L0x7fffffe436, L0x7fffffe438, L0x7fffffe43a, L0x7fffffe43c, L0x7fffffe43e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe450, L0x7fffffe452, L0x7fffffe454, L0x7fffffe456, L0x7fffffe458, L0x7fffffe45a, L0x7fffffe45c, L0x7fffffe45e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe470, L0x7fffffe472, L0x7fffffe474, L0x7fffffe476, L0x7fffffe478, L0x7fffffe47a, L0x7fffffe47c, L0x7fffffe47e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe490, L0x7fffffe492, L0x7fffffe494, L0x7fffffe496, L0x7fffffe498, L0x7fffffe49a, L0x7fffffe49c, L0x7fffffe49e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe4b0, L0x7fffffe4b2, L0x7fffffe4b4, L0x7fffffe4b6, L0x7fffffe4b8, L0x7fffffe4ba, L0x7fffffe4bc, L0x7fffffe4be] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe4d0, L0x7fffffe4d2, L0x7fffffe4d4, L0x7fffffe4d6, L0x7fffffe4d8, L0x7fffffe4da, L0x7fffffe4dc, L0x7fffffe4de] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe4f0, L0x7fffffe4f2, L0x7fffffe4f4, L0x7fffffe4f6, L0x7fffffe4f8, L0x7fffffe4fa, L0x7fffffe4fc, L0x7fffffe4fe] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe510, L0x7fffffe512, L0x7fffffe514, L0x7fffffe516, L0x7fffffe518, L0x7fffffe51a, L0x7fffffe51c, L0x7fffffe51e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe530, L0x7fffffe532, L0x7fffffe534, L0x7fffffe536, L0x7fffffe538, L0x7fffffe53a, L0x7fffffe53c, L0x7fffffe53e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe550, L0x7fffffe552, L0x7fffffe554, L0x7fffffe556, L0x7fffffe558, L0x7fffffe55a, L0x7fffffe55c, L0x7fffffe55e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16]
    prove with [precondition, cuts[0]];


## k0 iter

(* ldr	q16, [x1]                                   #! EA = L0x5555570c48; Value = 0x0000000000000000; PC = 0x5555551f74 *)
mov %v16 [L0x5555570c48,L0x5555570c4a,L0x5555570c4c,L0x5555570c4e,L0x5555570c50,L0x5555570c52,L0x5555570c54,L0x5555570c56];
(* ldr	q19, [x1, #32]                              #! EA = L0x5555570c68; Value = 0x0000000000000000; PC = 0x5555551f78 *)
mov %v19 [L0x5555570c68,L0x5555570c6a,L0x5555570c6c,L0x5555570c6e,L0x5555570c70,L0x5555570c72,L0x5555570c74,L0x5555570c76];
(* ldr	q1, [x1, #64]                               #! EA = L0x5555570c88; Value = 0x0000000000000000; PC = 0x5555551f7c *)
mov %v1 [L0x5555570c88,L0x5555570c8a,L0x5555570c8c,L0x5555570c8e,L0x5555570c90,L0x5555570c92,L0x5555570c94,L0x5555570c96];
(* ldr	q0, [x1, #96]                               #! EA = L0x5555570ca8; Value = 0x0000000000000000; PC = 0x5555551f80 *)
mov %v0 [L0x5555570ca8,L0x5555570caa,L0x5555570cac,L0x5555570cae,L0x5555570cb0,L0x5555570cb2,L0x5555570cb4,L0x5555570cb6];
(* ldr	q2, [x1, #128]                              #! EA = L0x5555570cc8; Value = 0x0000000000000000; PC = 0x5555551f84 *)
mov %v2 [L0x5555570cc8,L0x5555570cca,L0x5555570ccc,L0x5555570cce,L0x5555570cd0,L0x5555570cd2,L0x5555570cd4,L0x5555570cd6];

ghost %fa8_1@sint16[8], %fa9_1@sint16[8], %fa0_1@sint16[8], %fa1_1@sint16[8], %fa2_1@sint16[8] :
    %fa8_1 = %v16 /\ %fa9_1 = %v19 /\ %fa0_1 = %v1 /\ %fa1_1 = %v0 /\ %fa2_1 = %v2
  &&
    %fa8_1 = %v16 /\ %fa9_1 = %v19 /\ %fa0_1 = %v1 /\ %fa1_1 = %v0 /\ %fa2_1 = %v2;

(* add	v3.8h, v16.8h, v2.8h                        #! PC = 0x5555551f88 *)
add %v3 %v16 %v2;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551f8c *)
add %v6 %v1 %v3;
(* sqrdmulh	v7.8h, v6.8h, v5.h[1]                  #! PC = 0x5555551f90 *)
broadcast %mul 8 [%v5[1]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v7 %LO11 %LO01;
(* shl	v6.8h, v6.8h, #2                            #! PC = 0x5555551f94 *)
shl %v6 %v6 [(2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16];
(* mls	v6.8h, v7.8h, v5.h[0]                       #! PC = 0x5555551f98 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;

assert
    [4, 4, 4, 4, 4, 4, 4, 4] * (%fa0_1 + %fa2_1 + %fa8_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v6
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [4, 4, 4, 4, 4, 4, 4, 4] * (%fa0_1 + %fa2_1 + %fa8_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v6
    && true;

(* shl	v1.8h, v1.8h, #2                            #! PC = 0x5555551f9c *)
shl %v1 %v1 [(2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16];
(* sub	v1.8h, v1.8h, v3.8h                         #! PC = 0x5555551fa0 *)
sub %v1 %v1 %v3;
(* sshr	v7.8h, v1.8h, #12                          #! PC = 0x5555551fa4 *)
split %v7 %dc %v1 12;
(* cmlt	v17.8h, v1.8h, #0                          #! PC = 0x5555551fa8 *)
split %v17 %dc %v1 15;
(* sub	v7.8h, v7.8h, v17.8h                        #! PC = 0x5555551fac *)
sub %v7 %v7 %v17;
(* mls	v1.8h, v7.8h, v5.h[0]                       #! PC = 0x5555551fb0 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;

assert
    ([4, 4, 4, 4, 4, 4, 4, 4] * %fa0_1 - %fa2_1 - %fa8_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v1
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    ([4, 4, 4, 4, 4, 4, 4, 4] * %fa0_1 - %fa2_1 - %fa8_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v1
    && true;

(* sqrdmulh	v7.8h, v3.8h, v4.h[4]                  #! PC = 0x5555551fb4 *)
broadcast %mul 8 [%v4[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v7 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v4.h[0]                       #! PC = 0x5555551fb8 *)
broadcast %mul 8 [%v4[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v7.8h, v5.h[0]                       #! PC = 0x5555551fbc *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;

assert
    [1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005] * (%fa2_1 + %fa8_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v3
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005] * (%fa2_1 + %fa8_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v3
    && true;

(* sub	v17.8h, v1.8h, v3.8h                        #! PC = 0x5555551fc0 *)
sub %v17 %v1 %v3;
(* add	v1.8h, v1.8h, v3.8h                         #! PC = 0x5555551fc4 *)
add %v1 %v1 %v3;
(* sub	v2.8h, v2.8h, v16.8h                        #! PC = 0x5555551fc8 *)
sub %v2 %v2 %v16;
(* sqrdmulh	v7.8h, v2.8h, v4.h[6]                  #! PC = 0x5555551fcc *)
broadcast %mul 8 [%v4[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v7 %LO11 %LO01;
(* mul	v3.8h, v2.8h, v4.h[2]                       #! PC = 0x5555551fd0 *)
broadcast %mul 8 [%v4[2]]; mull %dc %v3 %v2 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v7.8h, v5.h[0]                       #! PC = 0x5555551fd4 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;

assert
    [-818, -818, -818, -818, -818, -818, -818, -818] * (%fa2_1 - %fa8_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v3
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [-818, -818, -818, -818, -818, -818, -818, -818] * (%fa2_1 - %fa8_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v3
    && true;

(* sqrdmulh	v7.8h, v2.8h, v4.h[7]                  #! PC = 0x5555551fd8 *)
broadcast %mul 8 [%v4[7]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v7 %LO11 %LO01;
(* mul	v2.8h, v2.8h, v4.h[3]                       #! PC = 0x5555551fdc *)
broadcast %mul 8 [%v4[3]]; mull %dc %v2 %v2 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v7.8h, v5.h[0]                       #! PC = 0x5555551fe0 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;

assert
    [-1736, -1736, -1736, -1736, -1736, -1736, -1736, -1736] * (%fa2_1 - %fa8_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v2
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [-1736, -1736, -1736, -1736, -1736, -1736, -1736, -1736] * (%fa2_1 - %fa8_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v2
    && true;

(* sub	v3.8h, v2.8h, v3.8h                         #! PC = 0x5555551fe4 *)
sub %v3 %v2 %v3;
(* sub	v18.8h, v17.8h, v2.8h                       #! PC = 0x5555551fe8 *)
sub %v18 %v17 %v2;
(* sub	v20.8h, v1.8h, v3.8h                        #! PC = 0x5555551fec *)
sub %v20 %v1 %v3;
(* add	v17.8h, v17.8h, v2.8h                       #! PC = 0x5555551ff0 *)
add %v17 %v17 %v2;
(* add	v1.8h, v1.8h, v3.8h                         #! PC = 0x5555551ff4 *)
add %v1 %v1 %v3;

assert
    true &&
    %v6 <=s [2690@16, 2690@16, 2690@16, 2690@16, 2690@16, 2690@16, 2690@16, 2690@16] /\
    %v6 >=s [(-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16] /\

    %v18 <=s [8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16] /\
    %v18 >=s [(-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16] /\

    %v1 <=s [10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16] /\
    %v1 >=s [(-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16] /\

    %v20 <=s [10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16] /\
    %v20 >=s [(-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16] /\

    %v17 <=s [8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16] /\
    %v17 >=s [(-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16]
    prove with [precondition, cuts[0]];

assume
    true &&
    %v6 <=s [2690@16, 2690@16, 2690@16, 2690@16, 2690@16, 2690@16, 2690@16, 2690@16] /\
    %v6 >=s [(-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16, (-2690)@16] /\

    %v18 <=s [8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16] /\
    %v18 >=s [(-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16] /\

    %v1 <=s [10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16] /\
    %v1 >=s [(-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16] /\

    %v20 <=s [10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16, 10970@16] /\
    %v20 >=s [(-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16, (-10970)@16] /\

    %v17 <=s [8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16, 8925@16] /\
    %v17 >=s [(-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16, (-8925)@16];

(* add	v3.8h, v19.8h, v0.8h                        #! PC = 0x5555551ff8 *)
add %v3 %v19 %v0;
(* sqrdmulh	v2.8h, v3.8h, v5.h[1]                  #! PC = 0x5555551ffc *)
broadcast %mul 8 [%v5[1]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* shl	v16.8h, v3.8h, #2                           #! PC = 0x5555552000 *)
shl %v16 %v3 [(2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16, (2)@int16];
(* mls	v16.8h, v2.8h, v5.h[0]                      #! PC = 0x5555552004 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;

assert
    [4, 4, 4, 4, 4, 4, 4, 4] * (%fa1_1 + %fa9_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v2
    = %v16
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [4, 4, 4, 4, 4, 4, 4, 4] * (%fa1_1 + %fa9_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v2
    = %v16
    && true;

(* neg	v2.8h, v3.8h                                #! PC = 0x5555552008 *)
broadcast %zero 8 [0@sint16]; sub %v2 %zero %v3;
(* sshr	v7.8h, v2.8h, #12                          #! PC = 0x555555200c *)
split %v7 %dc %v2 12;
(* cmlt	v21.8h, v2.8h, #0                          #! PC = 0x5555552010 *)
split %v21 %dc %v2 15;
(* sub	v7.8h, v7.8h, v21.8h                        #! PC = 0x5555552014 *)
sub %v7 %v7 %v21;
(* mls	v2.8h, v7.8h, v5.h[0]                       #! PC = 0x5555552018 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;

assert
    -(%fa1_1 + %fa9_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v2
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    -(%fa1_1 + %fa9_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v2
    && true;

(* sqrdmulh	v7.8h, v3.8h, v4.h[4]                  #! PC = 0x555555201c *)
broadcast %mul 8 [%v4[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v7 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v4.h[0]                       #! PC = 0x5555552020 *)
broadcast %mul 8 [%v4[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v7.8h, v5.h[0]                       #! PC = 0x5555552024 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v7 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;

assert
    [1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005] * (%fa1_1 + %fa9_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v3
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005] * (%fa1_1 + %fa9_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v7
    = %v3
    && true;

(* add	v7.8h, v2.8h, v3.8h                         #! PC = 0x5555552028 *)
add %v7 %v2 %v3;
(* sub	v2.8h, v2.8h, v3.8h                         #! PC = 0x555555202c *)
sub %v2 %v2 %v3;
(* sub	v0.8h, v0.8h, v19.8h                        #! PC = 0x5555552030 *)
sub %v0 %v0 %v19;
(* sqrdmulh	v19.8h, v0.8h, v4.h[5]                 #! PC = 0x5555552034 *)
broadcast %mul 8 [%v4[5]]; smulj %LO %v0 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v19 %LO11 %LO01;
(* mul	v3.8h, v0.8h, v4.h[1]                       #! PC = 0x5555552038 *)
broadcast %mul 8 [%v4[1]]; mull %dc %v3 %v0 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v19.8h, v5.h[0]                      #! PC = 0x555555203c *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v19 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;

assert
    [918, 918, 918, 918, 918, 918, 918, 918] * (%fa1_1 - %fa9_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v19
    = %v3
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [918, 918, 918, 918, 918, 918, 918, 918] * (%fa1_1 - %fa9_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v19
    = %v3
    && true;

(* sqrdmulh	v19.8h, v0.8h, v4.h[6]                 #! PC = 0x5555552040 *)
broadcast %mul 8 [%v4[6]]; smulj %LO %v0 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v19 %LO11 %LO01;
(* mul	v0.8h, v0.8h, v4.h[2]                       #! PC = 0x5555552044 *)
broadcast %mul 8 [%v4[2]]; mull %dc %v0 %v0 %mul; cast %v0@int16[8] %v0;
(* mls	v0.8h, v19.8h, v5.h[0]                      #! PC = 0x5555552048 *)
broadcast %mul 8 [%v5[0]]; mull %dc %mls %v19 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;

assert
    [-818, -818, -818, -818, -818, -818, -818, -818] * (%fa1_1 - %fa9_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v19
    = %v0
    prove with [algebra solver isl, precondition, cuts[0]]
    && true;

assume
    [-818, -818, -818, -818, -818, -818, -818, -818] * (%fa1_1 - %fa9_1)
    - [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] * %v19
    = %v0
    && true;

(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x555555204c *)
sub %v0 %v0 %v3;
(* add	v21.8h, v7.8h, v3.8h                        #! PC = 0x5555552050 *)
add %v21 %v7 %v3;
(* add	v19.8h, v2.8h, v0.8h                        #! PC = 0x5555552054 *)
add %v19 %v2 %v0;
(* sub	v3.8h, v7.8h, v3.8h                         #! PC = 0x5555552058 *)
sub %v3 %v7 %v3;
(* sub	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555205c *)
sub %v2 %v2 %v0;

assert
    true &&
    %v16 <=s [2545@16, 2545@16, 2545@16, 2545@16, 2545@16, 2545@16, 2545@16, 2545@16] /\
    %v16 >=s [(-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16] /\

    %v21 <=s [8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16] /\
    %v21 >=s [(-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16] /\

    %v2 <=s [10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16] /\
    %v2 >=s [(-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16] /\

    %v19 <=s [10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16] /\
    %v19 >=s [(-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16] /\

    %v3 <=s [8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16] /\
    %v3 >=s [(-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16]
    prove with [precondition, cuts[0]];

assume
    true &&
    %v16 <=s [2545@16, 2545@16, 2545@16, 2545@16, 2545@16, 2545@16, 2545@16, 2545@16] /\
    %v16 >=s [(-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16, (-2545)@16] /\

    %v21 <=s [8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16] /\
    %v21 >=s [(-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16] /\

    %v2 <=s [10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16] /\
    %v2 >=s [(-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16] /\

    %v19 <=s [10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16, 10595@16] /\
    %v19 >=s [(-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16, (-10595)@16] /\

    %v3 <=s [8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16, 8110@16] /\
    %v3 >=s [(-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16, (-8110)@16];

(* add	v0.8h, v16.8h, v6.8h                        #! PC = 0x5555552060 *)
add %v0 %v16 %v6;
(* str	q0, [x2]                                    #! EA = L0x7fffffe440; PC = 0x5555552064 *)
mov [L0x7fffffe440,L0x7fffffe442,L0x7fffffe444,L0x7fffffe446,L0x7fffffe448,L0x7fffffe44a,L0x7fffffe44c,L0x7fffffe44e] %v0;
(* sub	v0.8h, v20.8h, v19.8h                       #! PC = 0x5555552068 *)
sub %v0 %v20 %v19;
(* str	q0, [x2, #32]                               #! EA = L0x7fffffe460; PC = 0x555555206c *)
mov [L0x7fffffe460,L0x7fffffe462,L0x7fffffe464,L0x7fffffe466,L0x7fffffe468,L0x7fffffe46a,L0x7fffffe46c,L0x7fffffe46e] %v0;
(* add	v0.8h, v21.8h, v18.8h                       #! PC = 0x5555552070 *)
add %v0 %v21 %v18;
(* str	q0, [x2, #64]                               #! EA = L0x7fffffe480; PC = 0x5555552074 *)
mov [L0x7fffffe480,L0x7fffffe482,L0x7fffffe484,L0x7fffffe486,L0x7fffffe488,L0x7fffffe48a,L0x7fffffe48c,L0x7fffffe48e] %v0;
(* sub	v0.8h, v17.8h, v3.8h                        #! PC = 0x5555552078 *)
sub %v0 %v17 %v3;
(* str	q0, [x2, #96]                               #! EA = L0x7fffffe4a0; PC = 0x555555207c *)
mov [L0x7fffffe4a0,L0x7fffffe4a2,L0x7fffffe4a4,L0x7fffffe4a6,L0x7fffffe4a8,L0x7fffffe4aa,L0x7fffffe4ac,L0x7fffffe4ae] %v0;
(* add	v0.8h, v2.8h, v1.8h                         #! PC = 0x5555552080 *)
add %v0 %v2 %v1;
(* str	q0, [x2, #128]                              #! EA = L0x7fffffe4c0; PC = 0x5555552084 *)
mov [L0x7fffffe4c0,L0x7fffffe4c2,L0x7fffffe4c4,L0x7fffffe4c6,L0x7fffffe4c8,L0x7fffffe4ca,L0x7fffffe4cc,L0x7fffffe4ce] %v0;
(* sub	v6.8h, v6.8h, v16.8h                        #! PC = 0x5555552088 *)
sub %v6 %v6 %v16;
(* str	q6, [x2, #160]                              #! EA = L0x7fffffe4e0; PC = 0x555555208c *)
mov [L0x7fffffe4e0,L0x7fffffe4e2,L0x7fffffe4e4,L0x7fffffe4e6,L0x7fffffe4e8,L0x7fffffe4ea,L0x7fffffe4ec,L0x7fffffe4ee] %v6;
(* add	v19.8h, v19.8h, v20.8h                      #! PC = 0x5555552090 *)
add %v19 %v19 %v20;
(* str	q19, [x2, #192]                             #! EA = L0x7fffffe500; PC = 0x5555552094 *)
mov [L0x7fffffe500,L0x7fffffe502,L0x7fffffe504,L0x7fffffe506,L0x7fffffe508,L0x7fffffe50a,L0x7fffffe50c,L0x7fffffe50e] %v19;
(* sub	v18.8h, v18.8h, v21.8h                      #! PC = 0x5555552098 *)
sub %v18 %v18 %v21;
(* str	q18, [x2, #224]                             #! EA = L0x7fffffe520; PC = 0x555555209c *)
mov [L0x7fffffe520,L0x7fffffe522,L0x7fffffe524,L0x7fffffe526,L0x7fffffe528,L0x7fffffe52a,L0x7fffffe52c,L0x7fffffe52e] %v18;
(* add	v3.8h, v3.8h, v17.8h                        #! PC = 0x55555520a0 *)
add %v3 %v3 %v17;
(* str	q3, [x2, #256]                              #! EA = L0x7fffffe540; PC = 0x55555520a4 *)
mov [L0x7fffffe540,L0x7fffffe542,L0x7fffffe544,L0x7fffffe546,L0x7fffffe548,L0x7fffffe54a,L0x7fffffe54c,L0x7fffffe54e] %v3;
(* sub	v1.8h, v1.8h, v2.8h                         #! PC = 0x55555520a8 *)
sub %v1 %v1 %v2;
(* str	q1, [x2, #288]                              #! EA = L0x7fffffe560; PC = 0x55555520ac *)
mov [L0x7fffffe560,L0x7fffffe562,L0x7fffffe564,L0x7fffffe566,L0x7fffffe568,L0x7fffffe56a,L0x7fffffe56c,L0x7fffffe56e] %v1;
(* #b.ne	0x5555551f74 <_ZN6xpower8low_lay111fwd_extractEPA2_A8_sPKs+24>  // b.any#! PC = 0x55555520bc *)
#b.ne	0x5555551f74 <_ZN6xpower8low_lay111fwd_extractEPA2_A8_sPKs+24>  // b.any#! 0x55555520bc = 0x55555520bc;

cut (* 2 *)
    [L0x7fffffe440, L0x7fffffe442, L0x7fffffe444, L0x7fffffe446, L0x7fffffe448, L0x7fffffe44a, L0x7fffffe44c, L0x7fffffe44e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe460, L0x7fffffe462, L0x7fffffe464, L0x7fffffe466, L0x7fffffe468, L0x7fffffe46a, L0x7fffffe46c, L0x7fffffe46e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [-1610, -1610, -1610, -1610, -1610, -1610, -1610, -1610] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [2113, 2113, 2113, 2113, 2113, 2113, 2113, 2113] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe480, L0x7fffffe482, L0x7fffffe484, L0x7fffffe486, L0x7fffffe488, L0x7fffffe48a, L0x7fffffe48c, L0x7fffffe48e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe4a0, L0x7fffffe4a2, L0x7fffffe4a4, L0x7fffffe4a6, L0x7fffffe4a8, L0x7fffffe4aa, L0x7fffffe4ac, L0x7fffffe4ae] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [2274, 2274, 2274, 2274, 2274, 2274, 2274, 2274] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [1815, 1815, 1815, 1815, 1815, 1815, 1815, 1815] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe4c0, L0x7fffffe4c2, L0x7fffffe4c4, L0x7fffffe4c6, L0x7fffffe4c8, L0x7fffffe4ca, L0x7fffffe4cc, L0x7fffffe4ce] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe4e0, L0x7fffffe4e2, L0x7fffffe4e4, L0x7fffffe4e6, L0x7fffffe4e8, L0x7fffffe4ea, L0x7fffffe4ec, L0x7fffffe4ee] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [-1, -1, -1, -1, -1, -1, -1, -1] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [-1, -1, -1, -1, -1, -1, -1, -1] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe500, L0x7fffffe502, L0x7fffffe504, L0x7fffffe506, L0x7fffffe508, L0x7fffffe50a, L0x7fffffe50c, L0x7fffffe50e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe520, L0x7fffffe522, L0x7fffffe524, L0x7fffffe526, L0x7fffffe528, L0x7fffffe52a, L0x7fffffe52c, L0x7fffffe52e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [1815, 1815, 1815, 1815, 1815, 1815, 1815, 1815] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [2274, 2274, 2274, 2274, 2274, 2274, 2274, 2274] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe540, L0x7fffffe542, L0x7fffffe544, L0x7fffffe546, L0x7fffffe548, L0x7fffffe54a, L0x7fffffe54c, L0x7fffffe54e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [L0x7fffffe560, L0x7fffffe562, L0x7fffffe564, L0x7fffffe566, L0x7fffffe568, L0x7fffffe56a, L0x7fffffe56c, L0x7fffffe56e] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [2113, 2113, 2113, 2113, 2113, 2113, 2113, 2113] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [-1610, -1610, -1610, -1610, -1610, -1610, -1610, -1610] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    true
  &&
    [L0x7fffffe440, L0x7fffffe442, L0x7fffffe444, L0x7fffffe446, L0x7fffffe448, L0x7fffffe44a, L0x7fffffe44c, L0x7fffffe44e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe460, L0x7fffffe462, L0x7fffffe464, L0x7fffffe466, L0x7fffffe468, L0x7fffffe46a, L0x7fffffe46c, L0x7fffffe46e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe480, L0x7fffffe482, L0x7fffffe484, L0x7fffffe486, L0x7fffffe488, L0x7fffffe48a, L0x7fffffe48c, L0x7fffffe48e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe4a0, L0x7fffffe4a2, L0x7fffffe4a4, L0x7fffffe4a6, L0x7fffffe4a8, L0x7fffffe4aa, L0x7fffffe4ac, L0x7fffffe4ae] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe4c0, L0x7fffffe4c2, L0x7fffffe4c4, L0x7fffffe4c6, L0x7fffffe4c8, L0x7fffffe4ca, L0x7fffffe4cc, L0x7fffffe4ce] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe4e0, L0x7fffffe4e2, L0x7fffffe4e4, L0x7fffffe4e6, L0x7fffffe4e8, L0x7fffffe4ea, L0x7fffffe4ec, L0x7fffffe4ee] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe500, L0x7fffffe502, L0x7fffffe504, L0x7fffffe506, L0x7fffffe508, L0x7fffffe50a, L0x7fffffe50c, L0x7fffffe50e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe520, L0x7fffffe522, L0x7fffffe524, L0x7fffffe526, L0x7fffffe528, L0x7fffffe52a, L0x7fffffe52c, L0x7fffffe52e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe540, L0x7fffffe542, L0x7fffffe544, L0x7fffffe546, L0x7fffffe548, L0x7fffffe54a, L0x7fffffe54c, L0x7fffffe54e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [L0x7fffffe560, L0x7fffffe562, L0x7fffffe564, L0x7fffffe566, L0x7fffffe568, L0x7fffffe56a, L0x7fffffe56c, L0x7fffffe56e] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\

    [L0x7fffffe440, L0x7fffffe442, L0x7fffffe444, L0x7fffffe446, L0x7fffffe448, L0x7fffffe44a, L0x7fffffe44c, L0x7fffffe44e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe460, L0x7fffffe462, L0x7fffffe464, L0x7fffffe466, L0x7fffffe468, L0x7fffffe46a, L0x7fffffe46c, L0x7fffffe46e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe480, L0x7fffffe482, L0x7fffffe484, L0x7fffffe486, L0x7fffffe488, L0x7fffffe48a, L0x7fffffe48c, L0x7fffffe48e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe4a0, L0x7fffffe4a2, L0x7fffffe4a4, L0x7fffffe4a6, L0x7fffffe4a8, L0x7fffffe4aa, L0x7fffffe4ac, L0x7fffffe4ae] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe4c0, L0x7fffffe4c2, L0x7fffffe4c4, L0x7fffffe4c6, L0x7fffffe4c8, L0x7fffffe4ca, L0x7fffffe4cc, L0x7fffffe4ce] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe4e0, L0x7fffffe4e2, L0x7fffffe4e4, L0x7fffffe4e6, L0x7fffffe4e8, L0x7fffffe4ea, L0x7fffffe4ec, L0x7fffffe4ee] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe500, L0x7fffffe502, L0x7fffffe504, L0x7fffffe506, L0x7fffffe508, L0x7fffffe50a, L0x7fffffe50c, L0x7fffffe50e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe520, L0x7fffffe522, L0x7fffffe524, L0x7fffffe526, L0x7fffffe528, L0x7fffffe52a, L0x7fffffe52c, L0x7fffffe52e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe540, L0x7fffffe542, L0x7fffffe544, L0x7fffffe546, L0x7fffffe548, L0x7fffffe54a, L0x7fffffe54c, L0x7fffffe54e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [L0x7fffffe560, L0x7fffffe562, L0x7fffffe564, L0x7fffffe566, L0x7fffffe568, L0x7fffffe56a, L0x7fffffe56c, L0x7fffffe56e] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16]
    prove with [precondition, cuts[0]];


# epilogue

(* #! <- SP = 0x7fffffe170 *)
#! 0x7fffffe170 = 0x7fffffe170;
(* #ret                                            #! PC = 0x55555520c0 *)
#ret                                            #! 0x55555520c0 = 0x55555520c0;


# output

mov [arr000, arr001, arr002, arr003, arr004, arr005, arr006, arr007] [L0x7fffffe430, L0x7fffffe432, L0x7fffffe434, L0x7fffffe436, L0x7fffffe438, L0x7fffffe43a, L0x7fffffe43c, L0x7fffffe43e];
mov [arr010, arr011, arr012, arr013, arr014, arr015, arr016, arr017] [L0x7fffffe440, L0x7fffffe442, L0x7fffffe444, L0x7fffffe446, L0x7fffffe448, L0x7fffffe44a, L0x7fffffe44c, L0x7fffffe44e];
mov [arr100, arr101, arr102, arr103, arr104, arr105, arr106, arr107] [L0x7fffffe450, L0x7fffffe452, L0x7fffffe454, L0x7fffffe456, L0x7fffffe458, L0x7fffffe45a, L0x7fffffe45c, L0x7fffffe45e];
mov [arr110, arr111, arr112, arr113, arr114, arr115, arr116, arr117] [L0x7fffffe460, L0x7fffffe462, L0x7fffffe464, L0x7fffffe466, L0x7fffffe468, L0x7fffffe46a, L0x7fffffe46c, L0x7fffffe46e];
mov [arr200, arr201, arr202, arr203, arr204, arr205, arr206, arr207] [L0x7fffffe470, L0x7fffffe472, L0x7fffffe474, L0x7fffffe476, L0x7fffffe478, L0x7fffffe47a, L0x7fffffe47c, L0x7fffffe47e];
mov [arr210, arr211, arr212, arr213, arr214, arr215, arr216, arr217] [L0x7fffffe480, L0x7fffffe482, L0x7fffffe484, L0x7fffffe486, L0x7fffffe488, L0x7fffffe48a, L0x7fffffe48c, L0x7fffffe48e];
mov [arr300, arr301, arr302, arr303, arr304, arr305, arr306, arr307] [L0x7fffffe490, L0x7fffffe492, L0x7fffffe494, L0x7fffffe496, L0x7fffffe498, L0x7fffffe49a, L0x7fffffe49c, L0x7fffffe49e];
mov [arr310, arr311, arr312, arr313, arr314, arr315, arr316, arr317] [L0x7fffffe4a0, L0x7fffffe4a2, L0x7fffffe4a4, L0x7fffffe4a6, L0x7fffffe4a8, L0x7fffffe4aa, L0x7fffffe4ac, L0x7fffffe4ae];
mov [arr400, arr401, arr402, arr403, arr404, arr405, arr406, arr407] [L0x7fffffe4b0, L0x7fffffe4b2, L0x7fffffe4b4, L0x7fffffe4b6, L0x7fffffe4b8, L0x7fffffe4ba, L0x7fffffe4bc, L0x7fffffe4be];
mov [arr410, arr411, arr412, arr413, arr414, arr415, arr416, arr417] [L0x7fffffe4c0, L0x7fffffe4c2, L0x7fffffe4c4, L0x7fffffe4c6, L0x7fffffe4c8, L0x7fffffe4ca, L0x7fffffe4cc, L0x7fffffe4ce];
mov [arr500, arr501, arr502, arr503, arr504, arr505, arr506, arr507] [L0x7fffffe4d0, L0x7fffffe4d2, L0x7fffffe4d4, L0x7fffffe4d6, L0x7fffffe4d8, L0x7fffffe4da, L0x7fffffe4dc, L0x7fffffe4de];
mov [arr510, arr511, arr512, arr513, arr514, arr515, arr516, arr517] [L0x7fffffe4e0, L0x7fffffe4e2, L0x7fffffe4e4, L0x7fffffe4e6, L0x7fffffe4e8, L0x7fffffe4ea, L0x7fffffe4ec, L0x7fffffe4ee];
mov [arr600, arr601, arr602, arr603, arr604, arr605, arr606, arr607] [L0x7fffffe4f0, L0x7fffffe4f2, L0x7fffffe4f4, L0x7fffffe4f6, L0x7fffffe4f8, L0x7fffffe4fa, L0x7fffffe4fc, L0x7fffffe4fe];
mov [arr610, arr611, arr612, arr613, arr614, arr615, arr616, arr617] [L0x7fffffe500, L0x7fffffe502, L0x7fffffe504, L0x7fffffe506, L0x7fffffe508, L0x7fffffe50a, L0x7fffffe50c, L0x7fffffe50e];
mov [arr700, arr701, arr702, arr703, arr704, arr705, arr706, arr707] [L0x7fffffe510, L0x7fffffe512, L0x7fffffe514, L0x7fffffe516, L0x7fffffe518, L0x7fffffe51a, L0x7fffffe51c, L0x7fffffe51e];
mov [arr710, arr711, arr712, arr713, arr714, arr715, arr716, arr717] [L0x7fffffe520, L0x7fffffe522, L0x7fffffe524, L0x7fffffe526, L0x7fffffe528, L0x7fffffe52a, L0x7fffffe52c, L0x7fffffe52e];
mov [arr800, arr801, arr802, arr803, arr804, arr805, arr806, arr807] [L0x7fffffe530, L0x7fffffe532, L0x7fffffe534, L0x7fffffe536, L0x7fffffe538, L0x7fffffe53a, L0x7fffffe53c, L0x7fffffe53e];
mov [arr810, arr811, arr812, arr813, arr814, arr815, arr816, arr817] [L0x7fffffe540, L0x7fffffe542, L0x7fffffe544, L0x7fffffe546, L0x7fffffe548, L0x7fffffe54a, L0x7fffffe54c, L0x7fffffe54e];
mov [arr900, arr901, arr902, arr903, arr904, arr905, arr906, arr907] [L0x7fffffe550, L0x7fffffe552, L0x7fffffe554, L0x7fffffe556, L0x7fffffe558, L0x7fffffe55a, L0x7fffffe55c, L0x7fffffe55e];
mov [arr910, arr911, arr912, arr913, arr914, arr915, arr916, arr917] [L0x7fffffe560, L0x7fffffe562, L0x7fffffe564, L0x7fffffe566, L0x7fffffe568, L0x7fffffe56a, L0x7fffffe56c, L0x7fffffe56e];

{
    [arr000, arr001, arr002, arr003, arr004, arr005, arr006, arr007] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr100, arr101, arr102, arr103, arr104, arr105, arr106, arr107] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [-1610, -1610, -1610, -1610, -1610, -1610, -1610, -1610] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [2113, 2113, 2113, 2113, 2113, 2113, 2113, 2113] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr200, arr201, arr202, arr203, arr204, arr205, arr206, arr207] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr300, arr301, arr302, arr303, arr304, arr305, arr306, arr307] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [2274, 2274, 2274, 2274, 2274, 2274, 2274, 2274] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [1815, 1815, 1815, 1815, 1815, 1815, 1815, 1815] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr400, arr401, arr402, arr403, arr404, arr405, arr406, arr407] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr500, arr501, arr502, arr503, arr504, arr505, arr506, arr507] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [-1, -1, -1, -1, -1, -1, -1, -1] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [-1, -1, -1, -1, -1, -1, -1, -1] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr600, arr601, arr602, arr603, arr604, arr605, arr606, arr607] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr700, arr701, arr702, arr703, arr704, arr705, arr706, arr707] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [1815, 1815, 1815, 1815, 1815, 1815, 1815, 1815] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [2274, 2274, 2274, 2274, 2274, 2274, 2274, 2274] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr800, arr801, arr802, arr803, arr804, arr805, arr806, arr807] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr900, arr901, arr902, arr903, arr904, arr905, arr906, arr907] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly32, poly33, poly34, poly35, poly36, poly37, poly38, poly39] +
        [2113, 2113, 2113, 2113, 2113, 2113, 2113, 2113] * [poly48, poly49, poly50, poly51, poly52, poly53, poly54, poly55] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly64, poly65, poly66, poly67, poly68, poly69, poly70, poly71] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly0, poly1, poly2, poly3, poly4, poly5, poly6, poly7] +
        [-1610, -1610, -1610, -1610, -1610, -1610, -1610, -1610] * [poly16, poly17, poly18, poly19, poly20, poly21, poly22, poly23]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr010, arr011, arr012, arr013, arr014, arr015, arr016, arr017] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr110, arr111, arr112, arr113, arr114, arr115, arr116, arr117] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [-1610, -1610, -1610, -1610, -1610, -1610, -1610, -1610] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [2113, 2113, 2113, 2113, 2113, 2113, 2113, 2113] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr210, arr211, arr212, arr213, arr214, arr215, arr216, arr217] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr310, arr311, arr312, arr313, arr314, arr315, arr316, arr317] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [2274, 2274, 2274, 2274, 2274, 2274, 2274, 2274] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [1815, 1815, 1815, 1815, 1815, 1815, 1815, 1815] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr410, arr411, arr412, arr413, arr414, arr415, arr416, arr417] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr510, arr511, arr512, arr513, arr514, arr515, arr516, arr517] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [-1, -1, -1, -1, -1, -1, -1, -1] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [-1, -1, -1, -1, -1, -1, -1, -1] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr610, arr611, arr612, arr613, arr614, arr615, arr616, arr617] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr710, arr711, arr712, arr713, arr714, arr715, arr716, arr717] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [1815, 1815, 1815, 1815, 1815, 1815, 1815, 1815] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [2274, 2274, 2274, 2274, 2274, 2274, 2274, 2274] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr810, arr811, arr812, arr813, arr814, arr815, arr816, arr817] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [1610, 1610, 1610, 1610, 1610, 1610, 1610, 1610] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [-2113, -2113, -2113, -2113, -2113, -2113, -2113, -2113] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    [arr910, arr911, arr912, arr913, arr914, arr915, arr916, arr917] = [4, 4, 4, 4, 4, 4, 4, 4] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * [poly40, poly41, poly42, poly43, poly44, poly45, poly46, poly47] +
        [2113, 2113, 2113, 2113, 2113, 2113, 2113, 2113] * [poly56, poly57, poly58, poly59, poly60, poly61, poly62, poly63] +
        [-2274, -2274, -2274, -2274, -2274, -2274, -2274, -2274] * [poly72, poly73, poly74, poly75, poly76, poly77, poly78, poly79] +
        [-1815, -1815, -1815, -1815, -1815, -1815, -1815, -1815] * [poly8, poly9, poly10, poly11, poly12, poly13, poly14, poly15] +
        [-1610, -1610, -1610, -1610, -1610, -1610, -1610, -1610] * [poly24, poly25, poly26, poly27, poly28, poly29, poly30, poly31]
    ) ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591]) /\

    true
    prove with [all cuts]
  &&
    [arr000, arr001, arr002, arr003, arr004, arr005, arr006, arr007] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr010, arr011, arr012, arr013, arr014, arr015, arr016, arr017] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr100, arr101, arr102, arr103, arr104, arr105, arr106, arr107] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr110, arr111, arr112, arr113, arr114, arr115, arr116, arr117] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr200, arr201, arr202, arr203, arr204, arr205, arr206, arr207] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr210, arr211, arr212, arr213, arr214, arr215, arr216, arr217] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr300, arr301, arr302, arr303, arr304, arr305, arr306, arr307] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr310, arr311, arr312, arr313, arr314, arr315, arr316, arr317] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr400, arr401, arr402, arr403, arr404, arr405, arr406, arr407] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr410, arr411, arr412, arr413, arr414, arr415, arr416, arr417] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr500, arr501, arr502, arr503, arr504, arr505, arr506, arr507] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr510, arr511, arr512, arr513, arr514, arr515, arr516, arr517] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr600, arr601, arr602, arr603, arr604, arr605, arr606, arr607] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr610, arr611, arr612, arr613, arr614, arr615, arr616, arr617] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr700, arr701, arr702, arr703, arr704, arr705, arr706, arr707] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr710, arr711, arr712, arr713, arr714, arr715, arr716, arr717] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr800, arr801, arr802, arr803, arr804, arr805, arr806, arr807] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr810, arr811, arr812, arr813, arr814, arr815, arr816, arr817] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr900, arr901, arr902, arr903, arr904, arr905, arr906, arr907] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\
    [arr910, arr911, arr912, arr913, arr914, arr915, arr916, arr917] <=s [21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16, 21565@16] /\

    [arr000, arr001, arr002, arr003, arr004, arr005, arr006, arr007] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr010, arr011, arr012, arr013, arr014, arr015, arr016, arr017] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr100, arr101, arr102, arr103, arr104, arr105, arr106, arr107] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr110, arr111, arr112, arr113, arr114, arr115, arr116, arr117] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr200, arr201, arr202, arr203, arr204, arr205, arr206, arr207] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr210, arr211, arr212, arr213, arr214, arr215, arr216, arr217] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr300, arr301, arr302, arr303, arr304, arr305, arr306, arr307] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr310, arr311, arr312, arr313, arr314, arr315, arr316, arr317] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr400, arr401, arr402, arr403, arr404, arr405, arr406, arr407] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr410, arr411, arr412, arr413, arr414, arr415, arr416, arr417] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr500, arr501, arr502, arr503, arr504, arr505, arr506, arr507] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr510, arr511, arr512, arr513, arr514, arr515, arr516, arr517] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr600, arr601, arr602, arr603, arr604, arr605, arr606, arr607] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr610, arr611, arr612, arr613, arr614, arr615, arr616, arr617] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr700, arr701, arr702, arr703, arr704, arr705, arr706, arr707] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr710, arr711, arr712, arr713, arr714, arr715, arr716, arr717] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr800, arr801, arr802, arr803, arr804, arr805, arr806, arr807] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr810, arr811, arr812, arr813, arr814, arr815, arr816, arr817] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr900, arr901, arr902, arr903, arr904, arr905, arr906, arr907] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16] /\
    [arr910, arr911, arr912, arr913, arr914, arr915, arr916, arr917] >=s [(-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16, (-21565)@16]
    prove with [all cuts]
}
