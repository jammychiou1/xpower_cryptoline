proc main(
    # input
    sint16 arr0000, sint16 arr0001, sint16 arr0002, sint16 arr0003, sint16 arr0004, sint16 arr0005, sint16 arr0006, sint16 arr0007,
    sint16 arr0010, sint16 arr0011, sint16 arr0012, sint16 arr0013, sint16 arr0014, sint16 arr0015, sint16 arr0016, sint16 arr0017,
    sint16 arr0020, sint16 arr0021, sint16 arr0022, sint16 arr0023, sint16 arr0024, sint16 arr0025, sint16 arr0026, sint16 arr0027,
    sint16 arr0030, sint16 arr0031, sint16 arr0032, sint16 arr0033, sint16 arr0034, sint16 arr0035, sint16 arr0036, sint16 arr0037,
    sint16 arr0040, sint16 arr0041, sint16 arr0042, sint16 arr0043, sint16 arr0044, sint16 arr0045, sint16 arr0046, sint16 arr0047,
    sint16 arr0050, sint16 arr0051, sint16 arr0052, sint16 arr0053, sint16 arr0054, sint16 arr0055, sint16 arr0056, sint16 arr0057,
    sint16 arr0060, sint16 arr0061, sint16 arr0062, sint16 arr0063, sint16 arr0064, sint16 arr0065, sint16 arr0066, sint16 arr0067,
    sint16 arr0070, sint16 arr0071, sint16 arr0072, sint16 arr0073, sint16 arr0074, sint16 arr0075, sint16 arr0076, sint16 arr0077,
    sint16 arr0080, sint16 arr0081, sint16 arr0082, sint16 arr0083, sint16 arr0084, sint16 arr0085, sint16 arr0086, sint16 arr0087,
    sint16 arr0100, sint16 arr0101, sint16 arr0102, sint16 arr0103, sint16 arr0104, sint16 arr0105, sint16 arr0106, sint16 arr0107,
    sint16 arr0110, sint16 arr0111, sint16 arr0112, sint16 arr0113, sint16 arr0114, sint16 arr0115, sint16 arr0116, sint16 arr0117,
    sint16 arr0120, sint16 arr0121, sint16 arr0122, sint16 arr0123, sint16 arr0124, sint16 arr0125, sint16 arr0126, sint16 arr0127,
    sint16 arr0130, sint16 arr0131, sint16 arr0132, sint16 arr0133, sint16 arr0134, sint16 arr0135, sint16 arr0136, sint16 arr0137,
    sint16 arr0140, sint16 arr0141, sint16 arr0142, sint16 arr0143, sint16 arr0144, sint16 arr0145, sint16 arr0146, sint16 arr0147,
    sint16 arr0150, sint16 arr0151, sint16 arr0152, sint16 arr0153, sint16 arr0154, sint16 arr0155, sint16 arr0156, sint16 arr0157,
    sint16 arr0160, sint16 arr0161, sint16 arr0162, sint16 arr0163, sint16 arr0164, sint16 arr0165, sint16 arr0166, sint16 arr0167,
    sint16 arr0170, sint16 arr0171, sint16 arr0172, sint16 arr0173, sint16 arr0174, sint16 arr0175, sint16 arr0176, sint16 arr0177,
    sint16 arr0180, sint16 arr0181, sint16 arr0182, sint16 arr0183, sint16 arr0184, sint16 arr0185, sint16 arr0186, sint16 arr0187,
    sint16 arr1000, sint16 arr1001, sint16 arr1002, sint16 arr1003, sint16 arr1004, sint16 arr1005, sint16 arr1006, sint16 arr1007,
    sint16 arr1010, sint16 arr1011, sint16 arr1012, sint16 arr1013, sint16 arr1014, sint16 arr1015, sint16 arr1016, sint16 arr1017,
    sint16 arr1020, sint16 arr1021, sint16 arr1022, sint16 arr1023, sint16 arr1024, sint16 arr1025, sint16 arr1026, sint16 arr1027,
    sint16 arr1030, sint16 arr1031, sint16 arr1032, sint16 arr1033, sint16 arr1034, sint16 arr1035, sint16 arr1036, sint16 arr1037,
    sint16 arr1040, sint16 arr1041, sint16 arr1042, sint16 arr1043, sint16 arr1044, sint16 arr1045, sint16 arr1046, sint16 arr1047,
    sint16 arr1050, sint16 arr1051, sint16 arr1052, sint16 arr1053, sint16 arr1054, sint16 arr1055, sint16 arr1056, sint16 arr1057,
    sint16 arr1060, sint16 arr1061, sint16 arr1062, sint16 arr1063, sint16 arr1064, sint16 arr1065, sint16 arr1066, sint16 arr1067,
    sint16 arr1070, sint16 arr1071, sint16 arr1072, sint16 arr1073, sint16 arr1074, sint16 arr1075, sint16 arr1076, sint16 arr1077,
    sint16 arr1080, sint16 arr1081, sint16 arr1082, sint16 arr1083, sint16 arr1084, sint16 arr1085, sint16 arr1086, sint16 arr1087,
    sint16 arr1100, sint16 arr1101, sint16 arr1102, sint16 arr1103, sint16 arr1104, sint16 arr1105, sint16 arr1106, sint16 arr1107,
    sint16 arr1110, sint16 arr1111, sint16 arr1112, sint16 arr1113, sint16 arr1114, sint16 arr1115, sint16 arr1116, sint16 arr1117,
    sint16 arr1120, sint16 arr1121, sint16 arr1122, sint16 arr1123, sint16 arr1124, sint16 arr1125, sint16 arr1126, sint16 arr1127,
    sint16 arr1130, sint16 arr1131, sint16 arr1132, sint16 arr1133, sint16 arr1134, sint16 arr1135, sint16 arr1136, sint16 arr1137,
    sint16 arr1140, sint16 arr1141, sint16 arr1142, sint16 arr1143, sint16 arr1144, sint16 arr1145, sint16 arr1146, sint16 arr1147,
    sint16 arr1150, sint16 arr1151, sint16 arr1152, sint16 arr1153, sint16 arr1154, sint16 arr1155, sint16 arr1156, sint16 arr1157,
    sint16 arr1160, sint16 arr1161, sint16 arr1162, sint16 arr1163, sint16 arr1164, sint16 arr1165, sint16 arr1166, sint16 arr1167,
    sint16 arr1170, sint16 arr1171, sint16 arr1172, sint16 arr1173, sint16 arr1174, sint16 arr1175, sint16 arr1176, sint16 arr1177,
    sint16 arr1180, sint16 arr1181, sint16 arr1182, sint16 arr1183, sint16 arr1184, sint16 arr1185, sint16 arr1186, sint16 arr1187,
    sint16 arr2000, sint16 arr2001, sint16 arr2002, sint16 arr2003, sint16 arr2004, sint16 arr2005, sint16 arr2006, sint16 arr2007,
    sint16 arr2010, sint16 arr2011, sint16 arr2012, sint16 arr2013, sint16 arr2014, sint16 arr2015, sint16 arr2016, sint16 arr2017,
    sint16 arr2020, sint16 arr2021, sint16 arr2022, sint16 arr2023, sint16 arr2024, sint16 arr2025, sint16 arr2026, sint16 arr2027,
    sint16 arr2030, sint16 arr2031, sint16 arr2032, sint16 arr2033, sint16 arr2034, sint16 arr2035, sint16 arr2036, sint16 arr2037,
    sint16 arr2040, sint16 arr2041, sint16 arr2042, sint16 arr2043, sint16 arr2044, sint16 arr2045, sint16 arr2046, sint16 arr2047,
    sint16 arr2050, sint16 arr2051, sint16 arr2052, sint16 arr2053, sint16 arr2054, sint16 arr2055, sint16 arr2056, sint16 arr2057,
    sint16 arr2060, sint16 arr2061, sint16 arr2062, sint16 arr2063, sint16 arr2064, sint16 arr2065, sint16 arr2066, sint16 arr2067,
    sint16 arr2070, sint16 arr2071, sint16 arr2072, sint16 arr2073, sint16 arr2074, sint16 arr2075, sint16 arr2076, sint16 arr2077,
    sint16 arr2080, sint16 arr2081, sint16 arr2082, sint16 arr2083, sint16 arr2084, sint16 arr2085, sint16 arr2086, sint16 arr2087,
    sint16 arr2100, sint16 arr2101, sint16 arr2102, sint16 arr2103, sint16 arr2104, sint16 arr2105, sint16 arr2106, sint16 arr2107,
    sint16 arr2110, sint16 arr2111, sint16 arr2112, sint16 arr2113, sint16 arr2114, sint16 arr2115, sint16 arr2116, sint16 arr2117,
    sint16 arr2120, sint16 arr2121, sint16 arr2122, sint16 arr2123, sint16 arr2124, sint16 arr2125, sint16 arr2126, sint16 arr2127,
    sint16 arr2130, sint16 arr2131, sint16 arr2132, sint16 arr2133, sint16 arr2134, sint16 arr2135, sint16 arr2136, sint16 arr2137,
    sint16 arr2140, sint16 arr2141, sint16 arr2142, sint16 arr2143, sint16 arr2144, sint16 arr2145, sint16 arr2146, sint16 arr2147,
    sint16 arr2150, sint16 arr2151, sint16 arr2152, sint16 arr2153, sint16 arr2154, sint16 arr2155, sint16 arr2156, sint16 arr2157,
    sint16 arr2160, sint16 arr2161, sint16 arr2162, sint16 arr2163, sint16 arr2164, sint16 arr2165, sint16 arr2166, sint16 arr2167,
    sint16 arr2170, sint16 arr2171, sint16 arr2172, sint16 arr2173, sint16 arr2174, sint16 arr2175, sint16 arr2176, sint16 arr2177,
    sint16 arr2180, sint16 arr2181, sint16 arr2182, sint16 arr2183, sint16 arr2184, sint16 arr2185, sint16 arr2186, sint16 arr2187,
    sint16 arr3000, sint16 arr3001, sint16 arr3002, sint16 arr3003, sint16 arr3004, sint16 arr3005, sint16 arr3006, sint16 arr3007,
    sint16 arr3010, sint16 arr3011, sint16 arr3012, sint16 arr3013, sint16 arr3014, sint16 arr3015, sint16 arr3016, sint16 arr3017,
    sint16 arr3020, sint16 arr3021, sint16 arr3022, sint16 arr3023, sint16 arr3024, sint16 arr3025, sint16 arr3026, sint16 arr3027,
    sint16 arr3030, sint16 arr3031, sint16 arr3032, sint16 arr3033, sint16 arr3034, sint16 arr3035, sint16 arr3036, sint16 arr3037,
    sint16 arr3040, sint16 arr3041, sint16 arr3042, sint16 arr3043, sint16 arr3044, sint16 arr3045, sint16 arr3046, sint16 arr3047,
    sint16 arr3050, sint16 arr3051, sint16 arr3052, sint16 arr3053, sint16 arr3054, sint16 arr3055, sint16 arr3056, sint16 arr3057,
    sint16 arr3060, sint16 arr3061, sint16 arr3062, sint16 arr3063, sint16 arr3064, sint16 arr3065, sint16 arr3066, sint16 arr3067,
    sint16 arr3070, sint16 arr3071, sint16 arr3072, sint16 arr3073, sint16 arr3074, sint16 arr3075, sint16 arr3076, sint16 arr3077,
    sint16 arr3080, sint16 arr3081, sint16 arr3082, sint16 arr3083, sint16 arr3084, sint16 arr3085, sint16 arr3086, sint16 arr3087,
    sint16 arr3100, sint16 arr3101, sint16 arr3102, sint16 arr3103, sint16 arr3104, sint16 arr3105, sint16 arr3106, sint16 arr3107,
    sint16 arr3110, sint16 arr3111, sint16 arr3112, sint16 arr3113, sint16 arr3114, sint16 arr3115, sint16 arr3116, sint16 arr3117,
    sint16 arr3120, sint16 arr3121, sint16 arr3122, sint16 arr3123, sint16 arr3124, sint16 arr3125, sint16 arr3126, sint16 arr3127,
    sint16 arr3130, sint16 arr3131, sint16 arr3132, sint16 arr3133, sint16 arr3134, sint16 arr3135, sint16 arr3136, sint16 arr3137,
    sint16 arr3140, sint16 arr3141, sint16 arr3142, sint16 arr3143, sint16 arr3144, sint16 arr3145, sint16 arr3146, sint16 arr3147,
    sint16 arr3150, sint16 arr3151, sint16 arr3152, sint16 arr3153, sint16 arr3154, sint16 arr3155, sint16 arr3156, sint16 arr3157,
    sint16 arr3160, sint16 arr3161, sint16 arr3162, sint16 arr3163, sint16 arr3164, sint16 arr3165, sint16 arr3166, sint16 arr3167,
    sint16 arr3170, sint16 arr3171, sint16 arr3172, sint16 arr3173, sint16 arr3174, sint16 arr3175, sint16 arr3176, sint16 arr3177,
    sint16 arr3180, sint16 arr3181, sint16 arr3182, sint16 arr3183, sint16 arr3184, sint16 arr3185, sint16 arr3186, sint16 arr3187,
    sint16 arr4000, sint16 arr4001, sint16 arr4002, sint16 arr4003, sint16 arr4004, sint16 arr4005, sint16 arr4006, sint16 arr4007,
    sint16 arr4010, sint16 arr4011, sint16 arr4012, sint16 arr4013, sint16 arr4014, sint16 arr4015, sint16 arr4016, sint16 arr4017,
    sint16 arr4020, sint16 arr4021, sint16 arr4022, sint16 arr4023, sint16 arr4024, sint16 arr4025, sint16 arr4026, sint16 arr4027,
    sint16 arr4030, sint16 arr4031, sint16 arr4032, sint16 arr4033, sint16 arr4034, sint16 arr4035, sint16 arr4036, sint16 arr4037,
    sint16 arr4040, sint16 arr4041, sint16 arr4042, sint16 arr4043, sint16 arr4044, sint16 arr4045, sint16 arr4046, sint16 arr4047,
    sint16 arr4050, sint16 arr4051, sint16 arr4052, sint16 arr4053, sint16 arr4054, sint16 arr4055, sint16 arr4056, sint16 arr4057,
    sint16 arr4060, sint16 arr4061, sint16 arr4062, sint16 arr4063, sint16 arr4064, sint16 arr4065, sint16 arr4066, sint16 arr4067,
    sint16 arr4070, sint16 arr4071, sint16 arr4072, sint16 arr4073, sint16 arr4074, sint16 arr4075, sint16 arr4076, sint16 arr4077,
    sint16 arr4080, sint16 arr4081, sint16 arr4082, sint16 arr4083, sint16 arr4084, sint16 arr4085, sint16 arr4086, sint16 arr4087,
    sint16 arr4100, sint16 arr4101, sint16 arr4102, sint16 arr4103, sint16 arr4104, sint16 arr4105, sint16 arr4106, sint16 arr4107,
    sint16 arr4110, sint16 arr4111, sint16 arr4112, sint16 arr4113, sint16 arr4114, sint16 arr4115, sint16 arr4116, sint16 arr4117,
    sint16 arr4120, sint16 arr4121, sint16 arr4122, sint16 arr4123, sint16 arr4124, sint16 arr4125, sint16 arr4126, sint16 arr4127,
    sint16 arr4130, sint16 arr4131, sint16 arr4132, sint16 arr4133, sint16 arr4134, sint16 arr4135, sint16 arr4136, sint16 arr4137,
    sint16 arr4140, sint16 arr4141, sint16 arr4142, sint16 arr4143, sint16 arr4144, sint16 arr4145, sint16 arr4146, sint16 arr4147,
    sint16 arr4150, sint16 arr4151, sint16 arr4152, sint16 arr4153, sint16 arr4154, sint16 arr4155, sint16 arr4156, sint16 arr4157,
    sint16 arr4160, sint16 arr4161, sint16 arr4162, sint16 arr4163, sint16 arr4164, sint16 arr4165, sint16 arr4166, sint16 arr4167,
    sint16 arr4170, sint16 arr4171, sint16 arr4172, sint16 arr4173, sint16 arr4174, sint16 arr4175, sint16 arr4176, sint16 arr4177,
    sint16 arr4180, sint16 arr4181, sint16 arr4182, sint16 arr4183, sint16 arr4184, sint16 arr4185, sint16 arr4186, sint16 arr4187,
    sint16 arr5000, sint16 arr5001, sint16 arr5002, sint16 arr5003, sint16 arr5004, sint16 arr5005, sint16 arr5006, sint16 arr5007,
    sint16 arr5010, sint16 arr5011, sint16 arr5012, sint16 arr5013, sint16 arr5014, sint16 arr5015, sint16 arr5016, sint16 arr5017,
    sint16 arr5020, sint16 arr5021, sint16 arr5022, sint16 arr5023, sint16 arr5024, sint16 arr5025, sint16 arr5026, sint16 arr5027,
    sint16 arr5030, sint16 arr5031, sint16 arr5032, sint16 arr5033, sint16 arr5034, sint16 arr5035, sint16 arr5036, sint16 arr5037,
    sint16 arr5040, sint16 arr5041, sint16 arr5042, sint16 arr5043, sint16 arr5044, sint16 arr5045, sint16 arr5046, sint16 arr5047,
    sint16 arr5050, sint16 arr5051, sint16 arr5052, sint16 arr5053, sint16 arr5054, sint16 arr5055, sint16 arr5056, sint16 arr5057,
    sint16 arr5060, sint16 arr5061, sint16 arr5062, sint16 arr5063, sint16 arr5064, sint16 arr5065, sint16 arr5066, sint16 arr5067,
    sint16 arr5070, sint16 arr5071, sint16 arr5072, sint16 arr5073, sint16 arr5074, sint16 arr5075, sint16 arr5076, sint16 arr5077,
    sint16 arr5080, sint16 arr5081, sint16 arr5082, sint16 arr5083, sint16 arr5084, sint16 arr5085, sint16 arr5086, sint16 arr5087,
    sint16 arr5100, sint16 arr5101, sint16 arr5102, sint16 arr5103, sint16 arr5104, sint16 arr5105, sint16 arr5106, sint16 arr5107,
    sint16 arr5110, sint16 arr5111, sint16 arr5112, sint16 arr5113, sint16 arr5114, sint16 arr5115, sint16 arr5116, sint16 arr5117,
    sint16 arr5120, sint16 arr5121, sint16 arr5122, sint16 arr5123, sint16 arr5124, sint16 arr5125, sint16 arr5126, sint16 arr5127,
    sint16 arr5130, sint16 arr5131, sint16 arr5132, sint16 arr5133, sint16 arr5134, sint16 arr5135, sint16 arr5136, sint16 arr5137,
    sint16 arr5140, sint16 arr5141, sint16 arr5142, sint16 arr5143, sint16 arr5144, sint16 arr5145, sint16 arr5146, sint16 arr5147,
    sint16 arr5150, sint16 arr5151, sint16 arr5152, sint16 arr5153, sint16 arr5154, sint16 arr5155, sint16 arr5156, sint16 arr5157,
    sint16 arr5160, sint16 arr5161, sint16 arr5162, sint16 arr5163, sint16 arr5164, sint16 arr5165, sint16 arr5166, sint16 arr5167,
    sint16 arr5170, sint16 arr5171, sint16 arr5172, sint16 arr5173, sint16 arr5174, sint16 arr5175, sint16 arr5176, sint16 arr5177,
    sint16 arr5180, sint16 arr5181, sint16 arr5182, sint16 arr5183, sint16 arr5184, sint16 arr5185, sint16 arr5186, sint16 arr5187,
    sint16 arr6000, sint16 arr6001, sint16 arr6002, sint16 arr6003, sint16 arr6004, sint16 arr6005, sint16 arr6006, sint16 arr6007,
    sint16 arr6010, sint16 arr6011, sint16 arr6012, sint16 arr6013, sint16 arr6014, sint16 arr6015, sint16 arr6016, sint16 arr6017,
    sint16 arr6020, sint16 arr6021, sint16 arr6022, sint16 arr6023, sint16 arr6024, sint16 arr6025, sint16 arr6026, sint16 arr6027,
    sint16 arr6030, sint16 arr6031, sint16 arr6032, sint16 arr6033, sint16 arr6034, sint16 arr6035, sint16 arr6036, sint16 arr6037,
    sint16 arr6040, sint16 arr6041, sint16 arr6042, sint16 arr6043, sint16 arr6044, sint16 arr6045, sint16 arr6046, sint16 arr6047,
    sint16 arr6050, sint16 arr6051, sint16 arr6052, sint16 arr6053, sint16 arr6054, sint16 arr6055, sint16 arr6056, sint16 arr6057,
    sint16 arr6060, sint16 arr6061, sint16 arr6062, sint16 arr6063, sint16 arr6064, sint16 arr6065, sint16 arr6066, sint16 arr6067,
    sint16 arr6070, sint16 arr6071, sint16 arr6072, sint16 arr6073, sint16 arr6074, sint16 arr6075, sint16 arr6076, sint16 arr6077,
    sint16 arr6080, sint16 arr6081, sint16 arr6082, sint16 arr6083, sint16 arr6084, sint16 arr6085, sint16 arr6086, sint16 arr6087,
    sint16 arr6100, sint16 arr6101, sint16 arr6102, sint16 arr6103, sint16 arr6104, sint16 arr6105, sint16 arr6106, sint16 arr6107,
    sint16 arr6110, sint16 arr6111, sint16 arr6112, sint16 arr6113, sint16 arr6114, sint16 arr6115, sint16 arr6116, sint16 arr6117,
    sint16 arr6120, sint16 arr6121, sint16 arr6122, sint16 arr6123, sint16 arr6124, sint16 arr6125, sint16 arr6126, sint16 arr6127,
    sint16 arr6130, sint16 arr6131, sint16 arr6132, sint16 arr6133, sint16 arr6134, sint16 arr6135, sint16 arr6136, sint16 arr6137,
    sint16 arr6140, sint16 arr6141, sint16 arr6142, sint16 arr6143, sint16 arr6144, sint16 arr6145, sint16 arr6146, sint16 arr6147,
    sint16 arr6150, sint16 arr6151, sint16 arr6152, sint16 arr6153, sint16 arr6154, sint16 arr6155, sint16 arr6156, sint16 arr6157,
    sint16 arr6160, sint16 arr6161, sint16 arr6162, sint16 arr6163, sint16 arr6164, sint16 arr6165, sint16 arr6166, sint16 arr6167,
    sint16 arr6170, sint16 arr6171, sint16 arr6172, sint16 arr6173, sint16 arr6174, sint16 arr6175, sint16 arr6176, sint16 arr6177,
    sint16 arr6180, sint16 arr6181, sint16 arr6182, sint16 arr6183, sint16 arr6184, sint16 arr6185, sint16 arr6186, sint16 arr6187,
    sint16 arr7000, sint16 arr7001, sint16 arr7002, sint16 arr7003, sint16 arr7004, sint16 arr7005, sint16 arr7006, sint16 arr7007,
    sint16 arr7010, sint16 arr7011, sint16 arr7012, sint16 arr7013, sint16 arr7014, sint16 arr7015, sint16 arr7016, sint16 arr7017,
    sint16 arr7020, sint16 arr7021, sint16 arr7022, sint16 arr7023, sint16 arr7024, sint16 arr7025, sint16 arr7026, sint16 arr7027,
    sint16 arr7030, sint16 arr7031, sint16 arr7032, sint16 arr7033, sint16 arr7034, sint16 arr7035, sint16 arr7036, sint16 arr7037,
    sint16 arr7040, sint16 arr7041, sint16 arr7042, sint16 arr7043, sint16 arr7044, sint16 arr7045, sint16 arr7046, sint16 arr7047,
    sint16 arr7050, sint16 arr7051, sint16 arr7052, sint16 arr7053, sint16 arr7054, sint16 arr7055, sint16 arr7056, sint16 arr7057,
    sint16 arr7060, sint16 arr7061, sint16 arr7062, sint16 arr7063, sint16 arr7064, sint16 arr7065, sint16 arr7066, sint16 arr7067,
    sint16 arr7070, sint16 arr7071, sint16 arr7072, sint16 arr7073, sint16 arr7074, sint16 arr7075, sint16 arr7076, sint16 arr7077,
    sint16 arr7080, sint16 arr7081, sint16 arr7082, sint16 arr7083, sint16 arr7084, sint16 arr7085, sint16 arr7086, sint16 arr7087,
    sint16 arr7100, sint16 arr7101, sint16 arr7102, sint16 arr7103, sint16 arr7104, sint16 arr7105, sint16 arr7106, sint16 arr7107,
    sint16 arr7110, sint16 arr7111, sint16 arr7112, sint16 arr7113, sint16 arr7114, sint16 arr7115, sint16 arr7116, sint16 arr7117,
    sint16 arr7120, sint16 arr7121, sint16 arr7122, sint16 arr7123, sint16 arr7124, sint16 arr7125, sint16 arr7126, sint16 arr7127,
    sint16 arr7130, sint16 arr7131, sint16 arr7132, sint16 arr7133, sint16 arr7134, sint16 arr7135, sint16 arr7136, sint16 arr7137,
    sint16 arr7140, sint16 arr7141, sint16 arr7142, sint16 arr7143, sint16 arr7144, sint16 arr7145, sint16 arr7146, sint16 arr7147,
    sint16 arr7150, sint16 arr7151, sint16 arr7152, sint16 arr7153, sint16 arr7154, sint16 arr7155, sint16 arr7156, sint16 arr7157,
    sint16 arr7160, sint16 arr7161, sint16 arr7162, sint16 arr7163, sint16 arr7164, sint16 arr7165, sint16 arr7166, sint16 arr7167,
    sint16 arr7170, sint16 arr7171, sint16 arr7172, sint16 arr7173, sint16 arr7174, sint16 arr7175, sint16 arr7176, sint16 arr7177,
    sint16 arr7180, sint16 arr7181, sint16 arr7182, sint16 arr7183, sint16 arr7184, sint16 arr7185, sint16 arr7186, sint16 arr7187,
    sint16 arr8000, sint16 arr8001, sint16 arr8002, sint16 arr8003, sint16 arr8004, sint16 arr8005, sint16 arr8006, sint16 arr8007,
    sint16 arr8010, sint16 arr8011, sint16 arr8012, sint16 arr8013, sint16 arr8014, sint16 arr8015, sint16 arr8016, sint16 arr8017,
    sint16 arr8020, sint16 arr8021, sint16 arr8022, sint16 arr8023, sint16 arr8024, sint16 arr8025, sint16 arr8026, sint16 arr8027,
    sint16 arr8030, sint16 arr8031, sint16 arr8032, sint16 arr8033, sint16 arr8034, sint16 arr8035, sint16 arr8036, sint16 arr8037,
    sint16 arr8040, sint16 arr8041, sint16 arr8042, sint16 arr8043, sint16 arr8044, sint16 arr8045, sint16 arr8046, sint16 arr8047,
    sint16 arr8050, sint16 arr8051, sint16 arr8052, sint16 arr8053, sint16 arr8054, sint16 arr8055, sint16 arr8056, sint16 arr8057,
    sint16 arr8060, sint16 arr8061, sint16 arr8062, sint16 arr8063, sint16 arr8064, sint16 arr8065, sint16 arr8066, sint16 arr8067,
    sint16 arr8070, sint16 arr8071, sint16 arr8072, sint16 arr8073, sint16 arr8074, sint16 arr8075, sint16 arr8076, sint16 arr8077,
    sint16 arr8080, sint16 arr8081, sint16 arr8082, sint16 arr8083, sint16 arr8084, sint16 arr8085, sint16 arr8086, sint16 arr8087,
    sint16 arr8100, sint16 arr8101, sint16 arr8102, sint16 arr8103, sint16 arr8104, sint16 arr8105, sint16 arr8106, sint16 arr8107,
    sint16 arr8110, sint16 arr8111, sint16 arr8112, sint16 arr8113, sint16 arr8114, sint16 arr8115, sint16 arr8116, sint16 arr8117,
    sint16 arr8120, sint16 arr8121, sint16 arr8122, sint16 arr8123, sint16 arr8124, sint16 arr8125, sint16 arr8126, sint16 arr8127,
    sint16 arr8130, sint16 arr8131, sint16 arr8132, sint16 arr8133, sint16 arr8134, sint16 arr8135, sint16 arr8136, sint16 arr8137,
    sint16 arr8140, sint16 arr8141, sint16 arr8142, sint16 arr8143, sint16 arr8144, sint16 arr8145, sint16 arr8146, sint16 arr8147,
    sint16 arr8150, sint16 arr8151, sint16 arr8152, sint16 arr8153, sint16 arr8154, sint16 arr8155, sint16 arr8156, sint16 arr8157,
    sint16 arr8160, sint16 arr8161, sint16 arr8162, sint16 arr8163, sint16 arr8164, sint16 arr8165, sint16 arr8166, sint16 arr8167,
    sint16 arr8170, sint16 arr8171, sint16 arr8172, sint16 arr8173, sint16 arr8174, sint16 arr8175, sint16 arr8176, sint16 arr8177,
    sint16 arr8180, sint16 arr8181, sint16 arr8182, sint16 arr8183, sint16 arr8184, sint16 arr8185, sint16 arr8186, sint16 arr8187,
    sint16 arr9000, sint16 arr9001, sint16 arr9002, sint16 arr9003, sint16 arr9004, sint16 arr9005, sint16 arr9006, sint16 arr9007,
    sint16 arr9010, sint16 arr9011, sint16 arr9012, sint16 arr9013, sint16 arr9014, sint16 arr9015, sint16 arr9016, sint16 arr9017,
    sint16 arr9020, sint16 arr9021, sint16 arr9022, sint16 arr9023, sint16 arr9024, sint16 arr9025, sint16 arr9026, sint16 arr9027,
    sint16 arr9030, sint16 arr9031, sint16 arr9032, sint16 arr9033, sint16 arr9034, sint16 arr9035, sint16 arr9036, sint16 arr9037,
    sint16 arr9040, sint16 arr9041, sint16 arr9042, sint16 arr9043, sint16 arr9044, sint16 arr9045, sint16 arr9046, sint16 arr9047,
    sint16 arr9050, sint16 arr9051, sint16 arr9052, sint16 arr9053, sint16 arr9054, sint16 arr9055, sint16 arr9056, sint16 arr9057,
    sint16 arr9060, sint16 arr9061, sint16 arr9062, sint16 arr9063, sint16 arr9064, sint16 arr9065, sint16 arr9066, sint16 arr9067,
    sint16 arr9070, sint16 arr9071, sint16 arr9072, sint16 arr9073, sint16 arr9074, sint16 arr9075, sint16 arr9076, sint16 arr9077,
    sint16 arr9080, sint16 arr9081, sint16 arr9082, sint16 arr9083, sint16 arr9084, sint16 arr9085, sint16 arr9086, sint16 arr9087,
    sint16 arr9100, sint16 arr9101, sint16 arr9102, sint16 arr9103, sint16 arr9104, sint16 arr9105, sint16 arr9106, sint16 arr9107,
    sint16 arr9110, sint16 arr9111, sint16 arr9112, sint16 arr9113, sint16 arr9114, sint16 arr9115, sint16 arr9116, sint16 arr9117,
    sint16 arr9120, sint16 arr9121, sint16 arr9122, sint16 arr9123, sint16 arr9124, sint16 arr9125, sint16 arr9126, sint16 arr9127,
    sint16 arr9130, sint16 arr9131, sint16 arr9132, sint16 arr9133, sint16 arr9134, sint16 arr9135, sint16 arr9136, sint16 arr9137,
    sint16 arr9140, sint16 arr9141, sint16 arr9142, sint16 arr9143, sint16 arr9144, sint16 arr9145, sint16 arr9146, sint16 arr9147,
    sint16 arr9150, sint16 arr9151, sint16 arr9152, sint16 arr9153, sint16 arr9154, sint16 arr9155, sint16 arr9156, sint16 arr9157,
    sint16 arr9160, sint16 arr9161, sint16 arr9162, sint16 arr9163, sint16 arr9164, sint16 arr9165, sint16 arr9166, sint16 arr9167,
    sint16 arr9170, sint16 arr9171, sint16 arr9172, sint16 arr9173, sint16 arr9174, sint16 arr9175, sint16 arr9176, sint16 arr9177,
    sint16 arr9180, sint16 arr9181, sint16 arr9182, sint16 arr9183, sint16 arr9184, sint16 arr9185, sint16 arr9186, sint16 arr9187,

    # ghost
    sint16 W9
) =
{
    W9 = -1606 /\
    [arr0000, arr0001, arr0002, arr0003, arr0004, arr0005, arr0006, arr0007] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0010, arr0011, arr0012, arr0013, arr0014, arr0015, arr0016, arr0017] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0020, arr0021, arr0022, arr0023, arr0024, arr0025, arr0026, arr0027] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0030, arr0031, arr0032, arr0033, arr0034, arr0035, arr0036, arr0037] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0040, arr0041, arr0042, arr0043, arr0044, arr0045, arr0046, arr0047] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0050, arr0051, arr0052, arr0053, arr0054, arr0055, arr0056, arr0057] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0060, arr0061, arr0062, arr0063, arr0064, arr0065, arr0066, arr0067] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0070, arr0071, arr0072, arr0073, arr0074, arr0075, arr0076, arr0077] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0080, arr0081, arr0082, arr0083, arr0084, arr0085, arr0086, arr0087] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0100, arr0101, arr0102, arr0103, arr0104, arr0105, arr0106, arr0107] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0110, arr0111, arr0112, arr0113, arr0114, arr0115, arr0116, arr0117] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0120, arr0121, arr0122, arr0123, arr0124, arr0125, arr0126, arr0127] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0130, arr0131, arr0132, arr0133, arr0134, arr0135, arr0136, arr0137] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0140, arr0141, arr0142, arr0143, arr0144, arr0145, arr0146, arr0147] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0150, arr0151, arr0152, arr0153, arr0154, arr0155, arr0156, arr0157] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0160, arr0161, arr0162, arr0163, arr0164, arr0165, arr0166, arr0167] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0170, arr0171, arr0172, arr0173, arr0174, arr0175, arr0176, arr0177] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr0180, arr0181, arr0182, arr0183, arr0184, arr0185, arr0186, arr0187] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1000, arr1001, arr1002, arr1003, arr1004, arr1005, arr1006, arr1007] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1010, arr1011, arr1012, arr1013, arr1014, arr1015, arr1016, arr1017] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1020, arr1021, arr1022, arr1023, arr1024, arr1025, arr1026, arr1027] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1030, arr1031, arr1032, arr1033, arr1034, arr1035, arr1036, arr1037] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1040, arr1041, arr1042, arr1043, arr1044, arr1045, arr1046, arr1047] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1050, arr1051, arr1052, arr1053, arr1054, arr1055, arr1056, arr1057] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1060, arr1061, arr1062, arr1063, arr1064, arr1065, arr1066, arr1067] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1070, arr1071, arr1072, arr1073, arr1074, arr1075, arr1076, arr1077] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1080, arr1081, arr1082, arr1083, arr1084, arr1085, arr1086, arr1087] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1100, arr1101, arr1102, arr1103, arr1104, arr1105, arr1106, arr1107] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1110, arr1111, arr1112, arr1113, arr1114, arr1115, arr1116, arr1117] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1120, arr1121, arr1122, arr1123, arr1124, arr1125, arr1126, arr1127] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1130, arr1131, arr1132, arr1133, arr1134, arr1135, arr1136, arr1137] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1140, arr1141, arr1142, arr1143, arr1144, arr1145, arr1146, arr1147] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1150, arr1151, arr1152, arr1153, arr1154, arr1155, arr1156, arr1157] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1160, arr1161, arr1162, arr1163, arr1164, arr1165, arr1166, arr1167] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1170, arr1171, arr1172, arr1173, arr1174, arr1175, arr1176, arr1177] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr1180, arr1181, arr1182, arr1183, arr1184, arr1185, arr1186, arr1187] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2000, arr2001, arr2002, arr2003, arr2004, arr2005, arr2006, arr2007] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2010, arr2011, arr2012, arr2013, arr2014, arr2015, arr2016, arr2017] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2020, arr2021, arr2022, arr2023, arr2024, arr2025, arr2026, arr2027] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2030, arr2031, arr2032, arr2033, arr2034, arr2035, arr2036, arr2037] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2040, arr2041, arr2042, arr2043, arr2044, arr2045, arr2046, arr2047] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2050, arr2051, arr2052, arr2053, arr2054, arr2055, arr2056, arr2057] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2060, arr2061, arr2062, arr2063, arr2064, arr2065, arr2066, arr2067] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2070, arr2071, arr2072, arr2073, arr2074, arr2075, arr2076, arr2077] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2080, arr2081, arr2082, arr2083, arr2084, arr2085, arr2086, arr2087] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2100, arr2101, arr2102, arr2103, arr2104, arr2105, arr2106, arr2107] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2110, arr2111, arr2112, arr2113, arr2114, arr2115, arr2116, arr2117] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2120, arr2121, arr2122, arr2123, arr2124, arr2125, arr2126, arr2127] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2130, arr2131, arr2132, arr2133, arr2134, arr2135, arr2136, arr2137] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2140, arr2141, arr2142, arr2143, arr2144, arr2145, arr2146, arr2147] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2150, arr2151, arr2152, arr2153, arr2154, arr2155, arr2156, arr2157] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2160, arr2161, arr2162, arr2163, arr2164, arr2165, arr2166, arr2167] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2170, arr2171, arr2172, arr2173, arr2174, arr2175, arr2176, arr2177] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr2180, arr2181, arr2182, arr2183, arr2184, arr2185, arr2186, arr2187] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3000, arr3001, arr3002, arr3003, arr3004, arr3005, arr3006, arr3007] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3010, arr3011, arr3012, arr3013, arr3014, arr3015, arr3016, arr3017] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3020, arr3021, arr3022, arr3023, arr3024, arr3025, arr3026, arr3027] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3030, arr3031, arr3032, arr3033, arr3034, arr3035, arr3036, arr3037] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3040, arr3041, arr3042, arr3043, arr3044, arr3045, arr3046, arr3047] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3050, arr3051, arr3052, arr3053, arr3054, arr3055, arr3056, arr3057] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3060, arr3061, arr3062, arr3063, arr3064, arr3065, arr3066, arr3067] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3070, arr3071, arr3072, arr3073, arr3074, arr3075, arr3076, arr3077] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3080, arr3081, arr3082, arr3083, arr3084, arr3085, arr3086, arr3087] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3100, arr3101, arr3102, arr3103, arr3104, arr3105, arr3106, arr3107] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3110, arr3111, arr3112, arr3113, arr3114, arr3115, arr3116, arr3117] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3120, arr3121, arr3122, arr3123, arr3124, arr3125, arr3126, arr3127] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3130, arr3131, arr3132, arr3133, arr3134, arr3135, arr3136, arr3137] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3140, arr3141, arr3142, arr3143, arr3144, arr3145, arr3146, arr3147] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3150, arr3151, arr3152, arr3153, arr3154, arr3155, arr3156, arr3157] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3160, arr3161, arr3162, arr3163, arr3164, arr3165, arr3166, arr3167] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3170, arr3171, arr3172, arr3173, arr3174, arr3175, arr3176, arr3177] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr3180, arr3181, arr3182, arr3183, arr3184, arr3185, arr3186, arr3187] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4000, arr4001, arr4002, arr4003, arr4004, arr4005, arr4006, arr4007] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4010, arr4011, arr4012, arr4013, arr4014, arr4015, arr4016, arr4017] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4020, arr4021, arr4022, arr4023, arr4024, arr4025, arr4026, arr4027] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4030, arr4031, arr4032, arr4033, arr4034, arr4035, arr4036, arr4037] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4040, arr4041, arr4042, arr4043, arr4044, arr4045, arr4046, arr4047] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4050, arr4051, arr4052, arr4053, arr4054, arr4055, arr4056, arr4057] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4060, arr4061, arr4062, arr4063, arr4064, arr4065, arr4066, arr4067] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4070, arr4071, arr4072, arr4073, arr4074, arr4075, arr4076, arr4077] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4080, arr4081, arr4082, arr4083, arr4084, arr4085, arr4086, arr4087] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4100, arr4101, arr4102, arr4103, arr4104, arr4105, arr4106, arr4107] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4110, arr4111, arr4112, arr4113, arr4114, arr4115, arr4116, arr4117] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4120, arr4121, arr4122, arr4123, arr4124, arr4125, arr4126, arr4127] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4130, arr4131, arr4132, arr4133, arr4134, arr4135, arr4136, arr4137] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4140, arr4141, arr4142, arr4143, arr4144, arr4145, arr4146, arr4147] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4150, arr4151, arr4152, arr4153, arr4154, arr4155, arr4156, arr4157] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4160, arr4161, arr4162, arr4163, arr4164, arr4165, arr4166, arr4167] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4170, arr4171, arr4172, arr4173, arr4174, arr4175, arr4176, arr4177] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr4180, arr4181, arr4182, arr4183, arr4184, arr4185, arr4186, arr4187] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5000, arr5001, arr5002, arr5003, arr5004, arr5005, arr5006, arr5007] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5010, arr5011, arr5012, arr5013, arr5014, arr5015, arr5016, arr5017] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5020, arr5021, arr5022, arr5023, arr5024, arr5025, arr5026, arr5027] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5030, arr5031, arr5032, arr5033, arr5034, arr5035, arr5036, arr5037] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5040, arr5041, arr5042, arr5043, arr5044, arr5045, arr5046, arr5047] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5050, arr5051, arr5052, arr5053, arr5054, arr5055, arr5056, arr5057] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5060, arr5061, arr5062, arr5063, arr5064, arr5065, arr5066, arr5067] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5070, arr5071, arr5072, arr5073, arr5074, arr5075, arr5076, arr5077] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5080, arr5081, arr5082, arr5083, arr5084, arr5085, arr5086, arr5087] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5100, arr5101, arr5102, arr5103, arr5104, arr5105, arr5106, arr5107] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5110, arr5111, arr5112, arr5113, arr5114, arr5115, arr5116, arr5117] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5120, arr5121, arr5122, arr5123, arr5124, arr5125, arr5126, arr5127] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5130, arr5131, arr5132, arr5133, arr5134, arr5135, arr5136, arr5137] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5140, arr5141, arr5142, arr5143, arr5144, arr5145, arr5146, arr5147] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5150, arr5151, arr5152, arr5153, arr5154, arr5155, arr5156, arr5157] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5160, arr5161, arr5162, arr5163, arr5164, arr5165, arr5166, arr5167] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5170, arr5171, arr5172, arr5173, arr5174, arr5175, arr5176, arr5177] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr5180, arr5181, arr5182, arr5183, arr5184, arr5185, arr5186, arr5187] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6000, arr6001, arr6002, arr6003, arr6004, arr6005, arr6006, arr6007] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6010, arr6011, arr6012, arr6013, arr6014, arr6015, arr6016, arr6017] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6020, arr6021, arr6022, arr6023, arr6024, arr6025, arr6026, arr6027] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6030, arr6031, arr6032, arr6033, arr6034, arr6035, arr6036, arr6037] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6040, arr6041, arr6042, arr6043, arr6044, arr6045, arr6046, arr6047] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6050, arr6051, arr6052, arr6053, arr6054, arr6055, arr6056, arr6057] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6060, arr6061, arr6062, arr6063, arr6064, arr6065, arr6066, arr6067] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6070, arr6071, arr6072, arr6073, arr6074, arr6075, arr6076, arr6077] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6080, arr6081, arr6082, arr6083, arr6084, arr6085, arr6086, arr6087] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6100, arr6101, arr6102, arr6103, arr6104, arr6105, arr6106, arr6107] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6110, arr6111, arr6112, arr6113, arr6114, arr6115, arr6116, arr6117] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6120, arr6121, arr6122, arr6123, arr6124, arr6125, arr6126, arr6127] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6130, arr6131, arr6132, arr6133, arr6134, arr6135, arr6136, arr6137] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6140, arr6141, arr6142, arr6143, arr6144, arr6145, arr6146, arr6147] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6150, arr6151, arr6152, arr6153, arr6154, arr6155, arr6156, arr6157] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6160, arr6161, arr6162, arr6163, arr6164, arr6165, arr6166, arr6167] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6170, arr6171, arr6172, arr6173, arr6174, arr6175, arr6176, arr6177] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr6180, arr6181, arr6182, arr6183, arr6184, arr6185, arr6186, arr6187] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7000, arr7001, arr7002, arr7003, arr7004, arr7005, arr7006, arr7007] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7010, arr7011, arr7012, arr7013, arr7014, arr7015, arr7016, arr7017] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7020, arr7021, arr7022, arr7023, arr7024, arr7025, arr7026, arr7027] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7030, arr7031, arr7032, arr7033, arr7034, arr7035, arr7036, arr7037] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7040, arr7041, arr7042, arr7043, arr7044, arr7045, arr7046, arr7047] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7050, arr7051, arr7052, arr7053, arr7054, arr7055, arr7056, arr7057] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7060, arr7061, arr7062, arr7063, arr7064, arr7065, arr7066, arr7067] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7070, arr7071, arr7072, arr7073, arr7074, arr7075, arr7076, arr7077] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7080, arr7081, arr7082, arr7083, arr7084, arr7085, arr7086, arr7087] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7100, arr7101, arr7102, arr7103, arr7104, arr7105, arr7106, arr7107] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7110, arr7111, arr7112, arr7113, arr7114, arr7115, arr7116, arr7117] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7120, arr7121, arr7122, arr7123, arr7124, arr7125, arr7126, arr7127] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7130, arr7131, arr7132, arr7133, arr7134, arr7135, arr7136, arr7137] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7140, arr7141, arr7142, arr7143, arr7144, arr7145, arr7146, arr7147] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7150, arr7151, arr7152, arr7153, arr7154, arr7155, arr7156, arr7157] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7160, arr7161, arr7162, arr7163, arr7164, arr7165, arr7166, arr7167] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7170, arr7171, arr7172, arr7173, arr7174, arr7175, arr7176, arr7177] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr7180, arr7181, arr7182, arr7183, arr7184, arr7185, arr7186, arr7187] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8000, arr8001, arr8002, arr8003, arr8004, arr8005, arr8006, arr8007] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8010, arr8011, arr8012, arr8013, arr8014, arr8015, arr8016, arr8017] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8020, arr8021, arr8022, arr8023, arr8024, arr8025, arr8026, arr8027] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8030, arr8031, arr8032, arr8033, arr8034, arr8035, arr8036, arr8037] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8040, arr8041, arr8042, arr8043, arr8044, arr8045, arr8046, arr8047] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8050, arr8051, arr8052, arr8053, arr8054, arr8055, arr8056, arr8057] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8060, arr8061, arr8062, arr8063, arr8064, arr8065, arr8066, arr8067] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8070, arr8071, arr8072, arr8073, arr8074, arr8075, arr8076, arr8077] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8080, arr8081, arr8082, arr8083, arr8084, arr8085, arr8086, arr8087] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8100, arr8101, arr8102, arr8103, arr8104, arr8105, arr8106, arr8107] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8110, arr8111, arr8112, arr8113, arr8114, arr8115, arr8116, arr8117] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8120, arr8121, arr8122, arr8123, arr8124, arr8125, arr8126, arr8127] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8130, arr8131, arr8132, arr8133, arr8134, arr8135, arr8136, arr8137] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8140, arr8141, arr8142, arr8143, arr8144, arr8145, arr8146, arr8147] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8150, arr8151, arr8152, arr8153, arr8154, arr8155, arr8156, arr8157] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8160, arr8161, arr8162, arr8163, arr8164, arr8165, arr8166, arr8167] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8170, arr8171, arr8172, arr8173, arr8174, arr8175, arr8176, arr8177] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr8180, arr8181, arr8182, arr8183, arr8184, arr8185, arr8186, arr8187] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9000, arr9001, arr9002, arr9003, arr9004, arr9005, arr9006, arr9007] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9010, arr9011, arr9012, arr9013, arr9014, arr9015, arr9016, arr9017] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9020, arr9021, arr9022, arr9023, arr9024, arr9025, arr9026, arr9027] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9030, arr9031, arr9032, arr9033, arr9034, arr9035, arr9036, arr9037] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9040, arr9041, arr9042, arr9043, arr9044, arr9045, arr9046, arr9047] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9050, arr9051, arr9052, arr9053, arr9054, arr9055, arr9056, arr9057] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9060, arr9061, arr9062, arr9063, arr9064, arr9065, arr9066, arr9067] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9070, arr9071, arr9072, arr9073, arr9074, arr9075, arr9076, arr9077] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9080, arr9081, arr9082, arr9083, arr9084, arr9085, arr9086, arr9087] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9100, arr9101, arr9102, arr9103, arr9104, arr9105, arr9106, arr9107] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9110, arr9111, arr9112, arr9113, arr9114, arr9115, arr9116, arr9117] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9120, arr9121, arr9122, arr9123, arr9124, arr9125, arr9126, arr9127] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9130, arr9131, arr9132, arr9133, arr9134, arr9135, arr9136, arr9137] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9140, arr9141, arr9142, arr9143, arr9144, arr9145, arr9146, arr9147] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9150, arr9151, arr9152, arr9153, arr9154, arr9155, arr9156, arr9157] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9160, arr9161, arr9162, arr9163, arr9164, arr9165, arr9166, arr9167] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9170, arr9171, arr9172, arr9173, arr9174, arr9175, arr9176, arr9177] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\
    [arr9180, arr9181, arr9182, arr9183, arr9184, arr9185, arr9186, arr9187] <= [3875, 3875, 3875, 3875, 3875, 3875, 3875, 3875] /\

    [arr0000, arr0001, arr0002, arr0003, arr0004, arr0005, arr0006, arr0007] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0010, arr0011, arr0012, arr0013, arr0014, arr0015, arr0016, arr0017] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0020, arr0021, arr0022, arr0023, arr0024, arr0025, arr0026, arr0027] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0030, arr0031, arr0032, arr0033, arr0034, arr0035, arr0036, arr0037] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0040, arr0041, arr0042, arr0043, arr0044, arr0045, arr0046, arr0047] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0050, arr0051, arr0052, arr0053, arr0054, arr0055, arr0056, arr0057] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0060, arr0061, arr0062, arr0063, arr0064, arr0065, arr0066, arr0067] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0070, arr0071, arr0072, arr0073, arr0074, arr0075, arr0076, arr0077] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0080, arr0081, arr0082, arr0083, arr0084, arr0085, arr0086, arr0087] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0100, arr0101, arr0102, arr0103, arr0104, arr0105, arr0106, arr0107] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0110, arr0111, arr0112, arr0113, arr0114, arr0115, arr0116, arr0117] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0120, arr0121, arr0122, arr0123, arr0124, arr0125, arr0126, arr0127] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0130, arr0131, arr0132, arr0133, arr0134, arr0135, arr0136, arr0137] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0140, arr0141, arr0142, arr0143, arr0144, arr0145, arr0146, arr0147] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0150, arr0151, arr0152, arr0153, arr0154, arr0155, arr0156, arr0157] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0160, arr0161, arr0162, arr0163, arr0164, arr0165, arr0166, arr0167] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0170, arr0171, arr0172, arr0173, arr0174, arr0175, arr0176, arr0177] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr0180, arr0181, arr0182, arr0183, arr0184, arr0185, arr0186, arr0187] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1000, arr1001, arr1002, arr1003, arr1004, arr1005, arr1006, arr1007] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1010, arr1011, arr1012, arr1013, arr1014, arr1015, arr1016, arr1017] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1020, arr1021, arr1022, arr1023, arr1024, arr1025, arr1026, arr1027] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1030, arr1031, arr1032, arr1033, arr1034, arr1035, arr1036, arr1037] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1040, arr1041, arr1042, arr1043, arr1044, arr1045, arr1046, arr1047] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1050, arr1051, arr1052, arr1053, arr1054, arr1055, arr1056, arr1057] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1060, arr1061, arr1062, arr1063, arr1064, arr1065, arr1066, arr1067] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1070, arr1071, arr1072, arr1073, arr1074, arr1075, arr1076, arr1077] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1080, arr1081, arr1082, arr1083, arr1084, arr1085, arr1086, arr1087] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1100, arr1101, arr1102, arr1103, arr1104, arr1105, arr1106, arr1107] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1110, arr1111, arr1112, arr1113, arr1114, arr1115, arr1116, arr1117] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1120, arr1121, arr1122, arr1123, arr1124, arr1125, arr1126, arr1127] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1130, arr1131, arr1132, arr1133, arr1134, arr1135, arr1136, arr1137] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1140, arr1141, arr1142, arr1143, arr1144, arr1145, arr1146, arr1147] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1150, arr1151, arr1152, arr1153, arr1154, arr1155, arr1156, arr1157] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1160, arr1161, arr1162, arr1163, arr1164, arr1165, arr1166, arr1167] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1170, arr1171, arr1172, arr1173, arr1174, arr1175, arr1176, arr1177] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr1180, arr1181, arr1182, arr1183, arr1184, arr1185, arr1186, arr1187] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2000, arr2001, arr2002, arr2003, arr2004, arr2005, arr2006, arr2007] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2010, arr2011, arr2012, arr2013, arr2014, arr2015, arr2016, arr2017] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2020, arr2021, arr2022, arr2023, arr2024, arr2025, arr2026, arr2027] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2030, arr2031, arr2032, arr2033, arr2034, arr2035, arr2036, arr2037] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2040, arr2041, arr2042, arr2043, arr2044, arr2045, arr2046, arr2047] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2050, arr2051, arr2052, arr2053, arr2054, arr2055, arr2056, arr2057] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2060, arr2061, arr2062, arr2063, arr2064, arr2065, arr2066, arr2067] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2070, arr2071, arr2072, arr2073, arr2074, arr2075, arr2076, arr2077] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2080, arr2081, arr2082, arr2083, arr2084, arr2085, arr2086, arr2087] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2100, arr2101, arr2102, arr2103, arr2104, arr2105, arr2106, arr2107] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2110, arr2111, arr2112, arr2113, arr2114, arr2115, arr2116, arr2117] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2120, arr2121, arr2122, arr2123, arr2124, arr2125, arr2126, arr2127] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2130, arr2131, arr2132, arr2133, arr2134, arr2135, arr2136, arr2137] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2140, arr2141, arr2142, arr2143, arr2144, arr2145, arr2146, arr2147] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2150, arr2151, arr2152, arr2153, arr2154, arr2155, arr2156, arr2157] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2160, arr2161, arr2162, arr2163, arr2164, arr2165, arr2166, arr2167] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2170, arr2171, arr2172, arr2173, arr2174, arr2175, arr2176, arr2177] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr2180, arr2181, arr2182, arr2183, arr2184, arr2185, arr2186, arr2187] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3000, arr3001, arr3002, arr3003, arr3004, arr3005, arr3006, arr3007] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3010, arr3011, arr3012, arr3013, arr3014, arr3015, arr3016, arr3017] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3020, arr3021, arr3022, arr3023, arr3024, arr3025, arr3026, arr3027] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3030, arr3031, arr3032, arr3033, arr3034, arr3035, arr3036, arr3037] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3040, arr3041, arr3042, arr3043, arr3044, arr3045, arr3046, arr3047] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3050, arr3051, arr3052, arr3053, arr3054, arr3055, arr3056, arr3057] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3060, arr3061, arr3062, arr3063, arr3064, arr3065, arr3066, arr3067] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3070, arr3071, arr3072, arr3073, arr3074, arr3075, arr3076, arr3077] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3080, arr3081, arr3082, arr3083, arr3084, arr3085, arr3086, arr3087] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3100, arr3101, arr3102, arr3103, arr3104, arr3105, arr3106, arr3107] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3110, arr3111, arr3112, arr3113, arr3114, arr3115, arr3116, arr3117] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3120, arr3121, arr3122, arr3123, arr3124, arr3125, arr3126, arr3127] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3130, arr3131, arr3132, arr3133, arr3134, arr3135, arr3136, arr3137] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3140, arr3141, arr3142, arr3143, arr3144, arr3145, arr3146, arr3147] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3150, arr3151, arr3152, arr3153, arr3154, arr3155, arr3156, arr3157] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3160, arr3161, arr3162, arr3163, arr3164, arr3165, arr3166, arr3167] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3170, arr3171, arr3172, arr3173, arr3174, arr3175, arr3176, arr3177] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr3180, arr3181, arr3182, arr3183, arr3184, arr3185, arr3186, arr3187] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4000, arr4001, arr4002, arr4003, arr4004, arr4005, arr4006, arr4007] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4010, arr4011, arr4012, arr4013, arr4014, arr4015, arr4016, arr4017] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4020, arr4021, arr4022, arr4023, arr4024, arr4025, arr4026, arr4027] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4030, arr4031, arr4032, arr4033, arr4034, arr4035, arr4036, arr4037] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4040, arr4041, arr4042, arr4043, arr4044, arr4045, arr4046, arr4047] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4050, arr4051, arr4052, arr4053, arr4054, arr4055, arr4056, arr4057] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4060, arr4061, arr4062, arr4063, arr4064, arr4065, arr4066, arr4067] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4070, arr4071, arr4072, arr4073, arr4074, arr4075, arr4076, arr4077] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4080, arr4081, arr4082, arr4083, arr4084, arr4085, arr4086, arr4087] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4100, arr4101, arr4102, arr4103, arr4104, arr4105, arr4106, arr4107] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4110, arr4111, arr4112, arr4113, arr4114, arr4115, arr4116, arr4117] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4120, arr4121, arr4122, arr4123, arr4124, arr4125, arr4126, arr4127] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4130, arr4131, arr4132, arr4133, arr4134, arr4135, arr4136, arr4137] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4140, arr4141, arr4142, arr4143, arr4144, arr4145, arr4146, arr4147] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4150, arr4151, arr4152, arr4153, arr4154, arr4155, arr4156, arr4157] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4160, arr4161, arr4162, arr4163, arr4164, arr4165, arr4166, arr4167] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4170, arr4171, arr4172, arr4173, arr4174, arr4175, arr4176, arr4177] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr4180, arr4181, arr4182, arr4183, arr4184, arr4185, arr4186, arr4187] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5000, arr5001, arr5002, arr5003, arr5004, arr5005, arr5006, arr5007] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5010, arr5011, arr5012, arr5013, arr5014, arr5015, arr5016, arr5017] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5020, arr5021, arr5022, arr5023, arr5024, arr5025, arr5026, arr5027] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5030, arr5031, arr5032, arr5033, arr5034, arr5035, arr5036, arr5037] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5040, arr5041, arr5042, arr5043, arr5044, arr5045, arr5046, arr5047] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5050, arr5051, arr5052, arr5053, arr5054, arr5055, arr5056, arr5057] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5060, arr5061, arr5062, arr5063, arr5064, arr5065, arr5066, arr5067] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5070, arr5071, arr5072, arr5073, arr5074, arr5075, arr5076, arr5077] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5080, arr5081, arr5082, arr5083, arr5084, arr5085, arr5086, arr5087] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5100, arr5101, arr5102, arr5103, arr5104, arr5105, arr5106, arr5107] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5110, arr5111, arr5112, arr5113, arr5114, arr5115, arr5116, arr5117] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5120, arr5121, arr5122, arr5123, arr5124, arr5125, arr5126, arr5127] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5130, arr5131, arr5132, arr5133, arr5134, arr5135, arr5136, arr5137] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5140, arr5141, arr5142, arr5143, arr5144, arr5145, arr5146, arr5147] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5150, arr5151, arr5152, arr5153, arr5154, arr5155, arr5156, arr5157] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5160, arr5161, arr5162, arr5163, arr5164, arr5165, arr5166, arr5167] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5170, arr5171, arr5172, arr5173, arr5174, arr5175, arr5176, arr5177] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr5180, arr5181, arr5182, arr5183, arr5184, arr5185, arr5186, arr5187] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6000, arr6001, arr6002, arr6003, arr6004, arr6005, arr6006, arr6007] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6010, arr6011, arr6012, arr6013, arr6014, arr6015, arr6016, arr6017] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6020, arr6021, arr6022, arr6023, arr6024, arr6025, arr6026, arr6027] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6030, arr6031, arr6032, arr6033, arr6034, arr6035, arr6036, arr6037] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6040, arr6041, arr6042, arr6043, arr6044, arr6045, arr6046, arr6047] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6050, arr6051, arr6052, arr6053, arr6054, arr6055, arr6056, arr6057] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6060, arr6061, arr6062, arr6063, arr6064, arr6065, arr6066, arr6067] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6070, arr6071, arr6072, arr6073, arr6074, arr6075, arr6076, arr6077] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6080, arr6081, arr6082, arr6083, arr6084, arr6085, arr6086, arr6087] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6100, arr6101, arr6102, arr6103, arr6104, arr6105, arr6106, arr6107] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6110, arr6111, arr6112, arr6113, arr6114, arr6115, arr6116, arr6117] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6120, arr6121, arr6122, arr6123, arr6124, arr6125, arr6126, arr6127] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6130, arr6131, arr6132, arr6133, arr6134, arr6135, arr6136, arr6137] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6140, arr6141, arr6142, arr6143, arr6144, arr6145, arr6146, arr6147] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6150, arr6151, arr6152, arr6153, arr6154, arr6155, arr6156, arr6157] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6160, arr6161, arr6162, arr6163, arr6164, arr6165, arr6166, arr6167] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6170, arr6171, arr6172, arr6173, arr6174, arr6175, arr6176, arr6177] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr6180, arr6181, arr6182, arr6183, arr6184, arr6185, arr6186, arr6187] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7000, arr7001, arr7002, arr7003, arr7004, arr7005, arr7006, arr7007] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7010, arr7011, arr7012, arr7013, arr7014, arr7015, arr7016, arr7017] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7020, arr7021, arr7022, arr7023, arr7024, arr7025, arr7026, arr7027] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7030, arr7031, arr7032, arr7033, arr7034, arr7035, arr7036, arr7037] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7040, arr7041, arr7042, arr7043, arr7044, arr7045, arr7046, arr7047] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7050, arr7051, arr7052, arr7053, arr7054, arr7055, arr7056, arr7057] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7060, arr7061, arr7062, arr7063, arr7064, arr7065, arr7066, arr7067] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7070, arr7071, arr7072, arr7073, arr7074, arr7075, arr7076, arr7077] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7080, arr7081, arr7082, arr7083, arr7084, arr7085, arr7086, arr7087] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7100, arr7101, arr7102, arr7103, arr7104, arr7105, arr7106, arr7107] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7110, arr7111, arr7112, arr7113, arr7114, arr7115, arr7116, arr7117] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7120, arr7121, arr7122, arr7123, arr7124, arr7125, arr7126, arr7127] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7130, arr7131, arr7132, arr7133, arr7134, arr7135, arr7136, arr7137] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7140, arr7141, arr7142, arr7143, arr7144, arr7145, arr7146, arr7147] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7150, arr7151, arr7152, arr7153, arr7154, arr7155, arr7156, arr7157] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7160, arr7161, arr7162, arr7163, arr7164, arr7165, arr7166, arr7167] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7170, arr7171, arr7172, arr7173, arr7174, arr7175, arr7176, arr7177] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr7180, arr7181, arr7182, arr7183, arr7184, arr7185, arr7186, arr7187] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8000, arr8001, arr8002, arr8003, arr8004, arr8005, arr8006, arr8007] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8010, arr8011, arr8012, arr8013, arr8014, arr8015, arr8016, arr8017] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8020, arr8021, arr8022, arr8023, arr8024, arr8025, arr8026, arr8027] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8030, arr8031, arr8032, arr8033, arr8034, arr8035, arr8036, arr8037] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8040, arr8041, arr8042, arr8043, arr8044, arr8045, arr8046, arr8047] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8050, arr8051, arr8052, arr8053, arr8054, arr8055, arr8056, arr8057] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8060, arr8061, arr8062, arr8063, arr8064, arr8065, arr8066, arr8067] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8070, arr8071, arr8072, arr8073, arr8074, arr8075, arr8076, arr8077] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8080, arr8081, arr8082, arr8083, arr8084, arr8085, arr8086, arr8087] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8100, arr8101, arr8102, arr8103, arr8104, arr8105, arr8106, arr8107] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8110, arr8111, arr8112, arr8113, arr8114, arr8115, arr8116, arr8117] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8120, arr8121, arr8122, arr8123, arr8124, arr8125, arr8126, arr8127] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8130, arr8131, arr8132, arr8133, arr8134, arr8135, arr8136, arr8137] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8140, arr8141, arr8142, arr8143, arr8144, arr8145, arr8146, arr8147] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8150, arr8151, arr8152, arr8153, arr8154, arr8155, arr8156, arr8157] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8160, arr8161, arr8162, arr8163, arr8164, arr8165, arr8166, arr8167] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8170, arr8171, arr8172, arr8173, arr8174, arr8175, arr8176, arr8177] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr8180, arr8181, arr8182, arr8183, arr8184, arr8185, arr8186, arr8187] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9000, arr9001, arr9002, arr9003, arr9004, arr9005, arr9006, arr9007] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9010, arr9011, arr9012, arr9013, arr9014, arr9015, arr9016, arr9017] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9020, arr9021, arr9022, arr9023, arr9024, arr9025, arr9026, arr9027] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9030, arr9031, arr9032, arr9033, arr9034, arr9035, arr9036, arr9037] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9040, arr9041, arr9042, arr9043, arr9044, arr9045, arr9046, arr9047] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9050, arr9051, arr9052, arr9053, arr9054, arr9055, arr9056, arr9057] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9060, arr9061, arr9062, arr9063, arr9064, arr9065, arr9066, arr9067] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9070, arr9071, arr9072, arr9073, arr9074, arr9075, arr9076, arr9077] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9080, arr9081, arr9082, arr9083, arr9084, arr9085, arr9086, arr9087] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9100, arr9101, arr9102, arr9103, arr9104, arr9105, arr9106, arr9107] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9110, arr9111, arr9112, arr9113, arr9114, arr9115, arr9116, arr9117] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9120, arr9121, arr9122, arr9123, arr9124, arr9125, arr9126, arr9127] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9130, arr9131, arr9132, arr9133, arr9134, arr9135, arr9136, arr9137] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9140, arr9141, arr9142, arr9143, arr9144, arr9145, arr9146, arr9147] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9150, arr9151, arr9152, arr9153, arr9154, arr9155, arr9156, arr9157] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9160, arr9161, arr9162, arr9163, arr9164, arr9165, arr9166, arr9167] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9170, arr9171, arr9172, arr9173, arr9174, arr9175, arr9176, arr9177] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875] /\
    [arr9180, arr9181, arr9182, arr9183, arr9184, arr9185, arr9186, arr9187] >= [-3875, -3875, -3875, -3875, -3875, -3875, -3875, -3875]
  &&
    [arr0000, arr0001, arr0002, arr0003, arr0004, arr0005, arr0006, arr0007] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0010, arr0011, arr0012, arr0013, arr0014, arr0015, arr0016, arr0017] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0020, arr0021, arr0022, arr0023, arr0024, arr0025, arr0026, arr0027] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0030, arr0031, arr0032, arr0033, arr0034, arr0035, arr0036, arr0037] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0040, arr0041, arr0042, arr0043, arr0044, arr0045, arr0046, arr0047] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0050, arr0051, arr0052, arr0053, arr0054, arr0055, arr0056, arr0057] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0060, arr0061, arr0062, arr0063, arr0064, arr0065, arr0066, arr0067] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0070, arr0071, arr0072, arr0073, arr0074, arr0075, arr0076, arr0077] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0080, arr0081, arr0082, arr0083, arr0084, arr0085, arr0086, arr0087] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0100, arr0101, arr0102, arr0103, arr0104, arr0105, arr0106, arr0107] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0110, arr0111, arr0112, arr0113, arr0114, arr0115, arr0116, arr0117] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0120, arr0121, arr0122, arr0123, arr0124, arr0125, arr0126, arr0127] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0130, arr0131, arr0132, arr0133, arr0134, arr0135, arr0136, arr0137] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0140, arr0141, arr0142, arr0143, arr0144, arr0145, arr0146, arr0147] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0150, arr0151, arr0152, arr0153, arr0154, arr0155, arr0156, arr0157] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0160, arr0161, arr0162, arr0163, arr0164, arr0165, arr0166, arr0167] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0170, arr0171, arr0172, arr0173, arr0174, arr0175, arr0176, arr0177] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr0180, arr0181, arr0182, arr0183, arr0184, arr0185, arr0186, arr0187] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1000, arr1001, arr1002, arr1003, arr1004, arr1005, arr1006, arr1007] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1010, arr1011, arr1012, arr1013, arr1014, arr1015, arr1016, arr1017] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1020, arr1021, arr1022, arr1023, arr1024, arr1025, arr1026, arr1027] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1030, arr1031, arr1032, arr1033, arr1034, arr1035, arr1036, arr1037] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1040, arr1041, arr1042, arr1043, arr1044, arr1045, arr1046, arr1047] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1050, arr1051, arr1052, arr1053, arr1054, arr1055, arr1056, arr1057] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1060, arr1061, arr1062, arr1063, arr1064, arr1065, arr1066, arr1067] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1070, arr1071, arr1072, arr1073, arr1074, arr1075, arr1076, arr1077] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1080, arr1081, arr1082, arr1083, arr1084, arr1085, arr1086, arr1087] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1100, arr1101, arr1102, arr1103, arr1104, arr1105, arr1106, arr1107] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1110, arr1111, arr1112, arr1113, arr1114, arr1115, arr1116, arr1117] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1120, arr1121, arr1122, arr1123, arr1124, arr1125, arr1126, arr1127] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1130, arr1131, arr1132, arr1133, arr1134, arr1135, arr1136, arr1137] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1140, arr1141, arr1142, arr1143, arr1144, arr1145, arr1146, arr1147] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1150, arr1151, arr1152, arr1153, arr1154, arr1155, arr1156, arr1157] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1160, arr1161, arr1162, arr1163, arr1164, arr1165, arr1166, arr1167] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1170, arr1171, arr1172, arr1173, arr1174, arr1175, arr1176, arr1177] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr1180, arr1181, arr1182, arr1183, arr1184, arr1185, arr1186, arr1187] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2000, arr2001, arr2002, arr2003, arr2004, arr2005, arr2006, arr2007] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2010, arr2011, arr2012, arr2013, arr2014, arr2015, arr2016, arr2017] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2020, arr2021, arr2022, arr2023, arr2024, arr2025, arr2026, arr2027] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2030, arr2031, arr2032, arr2033, arr2034, arr2035, arr2036, arr2037] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2040, arr2041, arr2042, arr2043, arr2044, arr2045, arr2046, arr2047] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2050, arr2051, arr2052, arr2053, arr2054, arr2055, arr2056, arr2057] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2060, arr2061, arr2062, arr2063, arr2064, arr2065, arr2066, arr2067] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2070, arr2071, arr2072, arr2073, arr2074, arr2075, arr2076, arr2077] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2080, arr2081, arr2082, arr2083, arr2084, arr2085, arr2086, arr2087] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2100, arr2101, arr2102, arr2103, arr2104, arr2105, arr2106, arr2107] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2110, arr2111, arr2112, arr2113, arr2114, arr2115, arr2116, arr2117] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2120, arr2121, arr2122, arr2123, arr2124, arr2125, arr2126, arr2127] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2130, arr2131, arr2132, arr2133, arr2134, arr2135, arr2136, arr2137] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2140, arr2141, arr2142, arr2143, arr2144, arr2145, arr2146, arr2147] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2150, arr2151, arr2152, arr2153, arr2154, arr2155, arr2156, arr2157] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2160, arr2161, arr2162, arr2163, arr2164, arr2165, arr2166, arr2167] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2170, arr2171, arr2172, arr2173, arr2174, arr2175, arr2176, arr2177] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr2180, arr2181, arr2182, arr2183, arr2184, arr2185, arr2186, arr2187] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3000, arr3001, arr3002, arr3003, arr3004, arr3005, arr3006, arr3007] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3010, arr3011, arr3012, arr3013, arr3014, arr3015, arr3016, arr3017] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3020, arr3021, arr3022, arr3023, arr3024, arr3025, arr3026, arr3027] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3030, arr3031, arr3032, arr3033, arr3034, arr3035, arr3036, arr3037] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3040, arr3041, arr3042, arr3043, arr3044, arr3045, arr3046, arr3047] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3050, arr3051, arr3052, arr3053, arr3054, arr3055, arr3056, arr3057] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3060, arr3061, arr3062, arr3063, arr3064, arr3065, arr3066, arr3067] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3070, arr3071, arr3072, arr3073, arr3074, arr3075, arr3076, arr3077] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3080, arr3081, arr3082, arr3083, arr3084, arr3085, arr3086, arr3087] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3100, arr3101, arr3102, arr3103, arr3104, arr3105, arr3106, arr3107] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3110, arr3111, arr3112, arr3113, arr3114, arr3115, arr3116, arr3117] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3120, arr3121, arr3122, arr3123, arr3124, arr3125, arr3126, arr3127] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3130, arr3131, arr3132, arr3133, arr3134, arr3135, arr3136, arr3137] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3140, arr3141, arr3142, arr3143, arr3144, arr3145, arr3146, arr3147] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3150, arr3151, arr3152, arr3153, arr3154, arr3155, arr3156, arr3157] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3160, arr3161, arr3162, arr3163, arr3164, arr3165, arr3166, arr3167] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3170, arr3171, arr3172, arr3173, arr3174, arr3175, arr3176, arr3177] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr3180, arr3181, arr3182, arr3183, arr3184, arr3185, arr3186, arr3187] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4000, arr4001, arr4002, arr4003, arr4004, arr4005, arr4006, arr4007] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4010, arr4011, arr4012, arr4013, arr4014, arr4015, arr4016, arr4017] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4020, arr4021, arr4022, arr4023, arr4024, arr4025, arr4026, arr4027] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4030, arr4031, arr4032, arr4033, arr4034, arr4035, arr4036, arr4037] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4040, arr4041, arr4042, arr4043, arr4044, arr4045, arr4046, arr4047] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4050, arr4051, arr4052, arr4053, arr4054, arr4055, arr4056, arr4057] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4060, arr4061, arr4062, arr4063, arr4064, arr4065, arr4066, arr4067] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4070, arr4071, arr4072, arr4073, arr4074, arr4075, arr4076, arr4077] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4080, arr4081, arr4082, arr4083, arr4084, arr4085, arr4086, arr4087] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4100, arr4101, arr4102, arr4103, arr4104, arr4105, arr4106, arr4107] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4110, arr4111, arr4112, arr4113, arr4114, arr4115, arr4116, arr4117] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4120, arr4121, arr4122, arr4123, arr4124, arr4125, arr4126, arr4127] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4130, arr4131, arr4132, arr4133, arr4134, arr4135, arr4136, arr4137] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4140, arr4141, arr4142, arr4143, arr4144, arr4145, arr4146, arr4147] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4150, arr4151, arr4152, arr4153, arr4154, arr4155, arr4156, arr4157] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4160, arr4161, arr4162, arr4163, arr4164, arr4165, arr4166, arr4167] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4170, arr4171, arr4172, arr4173, arr4174, arr4175, arr4176, arr4177] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr4180, arr4181, arr4182, arr4183, arr4184, arr4185, arr4186, arr4187] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5000, arr5001, arr5002, arr5003, arr5004, arr5005, arr5006, arr5007] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5010, arr5011, arr5012, arr5013, arr5014, arr5015, arr5016, arr5017] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5020, arr5021, arr5022, arr5023, arr5024, arr5025, arr5026, arr5027] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5030, arr5031, arr5032, arr5033, arr5034, arr5035, arr5036, arr5037] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5040, arr5041, arr5042, arr5043, arr5044, arr5045, arr5046, arr5047] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5050, arr5051, arr5052, arr5053, arr5054, arr5055, arr5056, arr5057] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5060, arr5061, arr5062, arr5063, arr5064, arr5065, arr5066, arr5067] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5070, arr5071, arr5072, arr5073, arr5074, arr5075, arr5076, arr5077] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5080, arr5081, arr5082, arr5083, arr5084, arr5085, arr5086, arr5087] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5100, arr5101, arr5102, arr5103, arr5104, arr5105, arr5106, arr5107] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5110, arr5111, arr5112, arr5113, arr5114, arr5115, arr5116, arr5117] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5120, arr5121, arr5122, arr5123, arr5124, arr5125, arr5126, arr5127] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5130, arr5131, arr5132, arr5133, arr5134, arr5135, arr5136, arr5137] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5140, arr5141, arr5142, arr5143, arr5144, arr5145, arr5146, arr5147] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5150, arr5151, arr5152, arr5153, arr5154, arr5155, arr5156, arr5157] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5160, arr5161, arr5162, arr5163, arr5164, arr5165, arr5166, arr5167] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5170, arr5171, arr5172, arr5173, arr5174, arr5175, arr5176, arr5177] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr5180, arr5181, arr5182, arr5183, arr5184, arr5185, arr5186, arr5187] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6000, arr6001, arr6002, arr6003, arr6004, arr6005, arr6006, arr6007] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6010, arr6011, arr6012, arr6013, arr6014, arr6015, arr6016, arr6017] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6020, arr6021, arr6022, arr6023, arr6024, arr6025, arr6026, arr6027] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6030, arr6031, arr6032, arr6033, arr6034, arr6035, arr6036, arr6037] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6040, arr6041, arr6042, arr6043, arr6044, arr6045, arr6046, arr6047] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6050, arr6051, arr6052, arr6053, arr6054, arr6055, arr6056, arr6057] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6060, arr6061, arr6062, arr6063, arr6064, arr6065, arr6066, arr6067] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6070, arr6071, arr6072, arr6073, arr6074, arr6075, arr6076, arr6077] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6080, arr6081, arr6082, arr6083, arr6084, arr6085, arr6086, arr6087] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6100, arr6101, arr6102, arr6103, arr6104, arr6105, arr6106, arr6107] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6110, arr6111, arr6112, arr6113, arr6114, arr6115, arr6116, arr6117] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6120, arr6121, arr6122, arr6123, arr6124, arr6125, arr6126, arr6127] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6130, arr6131, arr6132, arr6133, arr6134, arr6135, arr6136, arr6137] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6140, arr6141, arr6142, arr6143, arr6144, arr6145, arr6146, arr6147] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6150, arr6151, arr6152, arr6153, arr6154, arr6155, arr6156, arr6157] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6160, arr6161, arr6162, arr6163, arr6164, arr6165, arr6166, arr6167] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6170, arr6171, arr6172, arr6173, arr6174, arr6175, arr6176, arr6177] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr6180, arr6181, arr6182, arr6183, arr6184, arr6185, arr6186, arr6187] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7000, arr7001, arr7002, arr7003, arr7004, arr7005, arr7006, arr7007] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7010, arr7011, arr7012, arr7013, arr7014, arr7015, arr7016, arr7017] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7020, arr7021, arr7022, arr7023, arr7024, arr7025, arr7026, arr7027] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7030, arr7031, arr7032, arr7033, arr7034, arr7035, arr7036, arr7037] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7040, arr7041, arr7042, arr7043, arr7044, arr7045, arr7046, arr7047] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7050, arr7051, arr7052, arr7053, arr7054, arr7055, arr7056, arr7057] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7060, arr7061, arr7062, arr7063, arr7064, arr7065, arr7066, arr7067] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7070, arr7071, arr7072, arr7073, arr7074, arr7075, arr7076, arr7077] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7080, arr7081, arr7082, arr7083, arr7084, arr7085, arr7086, arr7087] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7100, arr7101, arr7102, arr7103, arr7104, arr7105, arr7106, arr7107] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7110, arr7111, arr7112, arr7113, arr7114, arr7115, arr7116, arr7117] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7120, arr7121, arr7122, arr7123, arr7124, arr7125, arr7126, arr7127] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7130, arr7131, arr7132, arr7133, arr7134, arr7135, arr7136, arr7137] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7140, arr7141, arr7142, arr7143, arr7144, arr7145, arr7146, arr7147] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7150, arr7151, arr7152, arr7153, arr7154, arr7155, arr7156, arr7157] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7160, arr7161, arr7162, arr7163, arr7164, arr7165, arr7166, arr7167] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7170, arr7171, arr7172, arr7173, arr7174, arr7175, arr7176, arr7177] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr7180, arr7181, arr7182, arr7183, arr7184, arr7185, arr7186, arr7187] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8000, arr8001, arr8002, arr8003, arr8004, arr8005, arr8006, arr8007] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8010, arr8011, arr8012, arr8013, arr8014, arr8015, arr8016, arr8017] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8020, arr8021, arr8022, arr8023, arr8024, arr8025, arr8026, arr8027] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8030, arr8031, arr8032, arr8033, arr8034, arr8035, arr8036, arr8037] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8040, arr8041, arr8042, arr8043, arr8044, arr8045, arr8046, arr8047] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8050, arr8051, arr8052, arr8053, arr8054, arr8055, arr8056, arr8057] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8060, arr8061, arr8062, arr8063, arr8064, arr8065, arr8066, arr8067] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8070, arr8071, arr8072, arr8073, arr8074, arr8075, arr8076, arr8077] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8080, arr8081, arr8082, arr8083, arr8084, arr8085, arr8086, arr8087] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8100, arr8101, arr8102, arr8103, arr8104, arr8105, arr8106, arr8107] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8110, arr8111, arr8112, arr8113, arr8114, arr8115, arr8116, arr8117] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8120, arr8121, arr8122, arr8123, arr8124, arr8125, arr8126, arr8127] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8130, arr8131, arr8132, arr8133, arr8134, arr8135, arr8136, arr8137] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8140, arr8141, arr8142, arr8143, arr8144, arr8145, arr8146, arr8147] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8150, arr8151, arr8152, arr8153, arr8154, arr8155, arr8156, arr8157] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8160, arr8161, arr8162, arr8163, arr8164, arr8165, arr8166, arr8167] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8170, arr8171, arr8172, arr8173, arr8174, arr8175, arr8176, arr8177] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr8180, arr8181, arr8182, arr8183, arr8184, arr8185, arr8186, arr8187] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9000, arr9001, arr9002, arr9003, arr9004, arr9005, arr9006, arr9007] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9010, arr9011, arr9012, arr9013, arr9014, arr9015, arr9016, arr9017] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9020, arr9021, arr9022, arr9023, arr9024, arr9025, arr9026, arr9027] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9030, arr9031, arr9032, arr9033, arr9034, arr9035, arr9036, arr9037] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9040, arr9041, arr9042, arr9043, arr9044, arr9045, arr9046, arr9047] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9050, arr9051, arr9052, arr9053, arr9054, arr9055, arr9056, arr9057] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9060, arr9061, arr9062, arr9063, arr9064, arr9065, arr9066, arr9067] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9070, arr9071, arr9072, arr9073, arr9074, arr9075, arr9076, arr9077] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9080, arr9081, arr9082, arr9083, arr9084, arr9085, arr9086, arr9087] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9100, arr9101, arr9102, arr9103, arr9104, arr9105, arr9106, arr9107] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9110, arr9111, arr9112, arr9113, arr9114, arr9115, arr9116, arr9117] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9120, arr9121, arr9122, arr9123, arr9124, arr9125, arr9126, arr9127] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9130, arr9131, arr9132, arr9133, arr9134, arr9135, arr9136, arr9137] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9140, arr9141, arr9142, arr9143, arr9144, arr9145, arr9146, arr9147] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9150, arr9151, arr9152, arr9153, arr9154, arr9155, arr9156, arr9157] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9160, arr9161, arr9162, arr9163, arr9164, arr9165, arr9166, arr9167] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9170, arr9171, arr9172, arr9173, arr9174, arr9175, arr9176, arr9177] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\
    [arr9180, arr9181, arr9182, arr9183, arr9184, arr9185, arr9186, arr9187] <=s [3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16, 3875@16] /\

    [arr0000, arr0001, arr0002, arr0003, arr0004, arr0005, arr0006, arr0007] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0010, arr0011, arr0012, arr0013, arr0014, arr0015, arr0016, arr0017] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0020, arr0021, arr0022, arr0023, arr0024, arr0025, arr0026, arr0027] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0030, arr0031, arr0032, arr0033, arr0034, arr0035, arr0036, arr0037] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0040, arr0041, arr0042, arr0043, arr0044, arr0045, arr0046, arr0047] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0050, arr0051, arr0052, arr0053, arr0054, arr0055, arr0056, arr0057] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0060, arr0061, arr0062, arr0063, arr0064, arr0065, arr0066, arr0067] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0070, arr0071, arr0072, arr0073, arr0074, arr0075, arr0076, arr0077] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0080, arr0081, arr0082, arr0083, arr0084, arr0085, arr0086, arr0087] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0100, arr0101, arr0102, arr0103, arr0104, arr0105, arr0106, arr0107] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0110, arr0111, arr0112, arr0113, arr0114, arr0115, arr0116, arr0117] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0120, arr0121, arr0122, arr0123, arr0124, arr0125, arr0126, arr0127] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0130, arr0131, arr0132, arr0133, arr0134, arr0135, arr0136, arr0137] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0140, arr0141, arr0142, arr0143, arr0144, arr0145, arr0146, arr0147] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0150, arr0151, arr0152, arr0153, arr0154, arr0155, arr0156, arr0157] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0160, arr0161, arr0162, arr0163, arr0164, arr0165, arr0166, arr0167] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0170, arr0171, arr0172, arr0173, arr0174, arr0175, arr0176, arr0177] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr0180, arr0181, arr0182, arr0183, arr0184, arr0185, arr0186, arr0187] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1000, arr1001, arr1002, arr1003, arr1004, arr1005, arr1006, arr1007] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1010, arr1011, arr1012, arr1013, arr1014, arr1015, arr1016, arr1017] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1020, arr1021, arr1022, arr1023, arr1024, arr1025, arr1026, arr1027] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1030, arr1031, arr1032, arr1033, arr1034, arr1035, arr1036, arr1037] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1040, arr1041, arr1042, arr1043, arr1044, arr1045, arr1046, arr1047] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1050, arr1051, arr1052, arr1053, arr1054, arr1055, arr1056, arr1057] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1060, arr1061, arr1062, arr1063, arr1064, arr1065, arr1066, arr1067] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1070, arr1071, arr1072, arr1073, arr1074, arr1075, arr1076, arr1077] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1080, arr1081, arr1082, arr1083, arr1084, arr1085, arr1086, arr1087] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1100, arr1101, arr1102, arr1103, arr1104, arr1105, arr1106, arr1107] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1110, arr1111, arr1112, arr1113, arr1114, arr1115, arr1116, arr1117] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1120, arr1121, arr1122, arr1123, arr1124, arr1125, arr1126, arr1127] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1130, arr1131, arr1132, arr1133, arr1134, arr1135, arr1136, arr1137] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1140, arr1141, arr1142, arr1143, arr1144, arr1145, arr1146, arr1147] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1150, arr1151, arr1152, arr1153, arr1154, arr1155, arr1156, arr1157] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1160, arr1161, arr1162, arr1163, arr1164, arr1165, arr1166, arr1167] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1170, arr1171, arr1172, arr1173, arr1174, arr1175, arr1176, arr1177] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr1180, arr1181, arr1182, arr1183, arr1184, arr1185, arr1186, arr1187] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2000, arr2001, arr2002, arr2003, arr2004, arr2005, arr2006, arr2007] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2010, arr2011, arr2012, arr2013, arr2014, arr2015, arr2016, arr2017] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2020, arr2021, arr2022, arr2023, arr2024, arr2025, arr2026, arr2027] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2030, arr2031, arr2032, arr2033, arr2034, arr2035, arr2036, arr2037] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2040, arr2041, arr2042, arr2043, arr2044, arr2045, arr2046, arr2047] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2050, arr2051, arr2052, arr2053, arr2054, arr2055, arr2056, arr2057] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2060, arr2061, arr2062, arr2063, arr2064, arr2065, arr2066, arr2067] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2070, arr2071, arr2072, arr2073, arr2074, arr2075, arr2076, arr2077] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2080, arr2081, arr2082, arr2083, arr2084, arr2085, arr2086, arr2087] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2100, arr2101, arr2102, arr2103, arr2104, arr2105, arr2106, arr2107] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2110, arr2111, arr2112, arr2113, arr2114, arr2115, arr2116, arr2117] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2120, arr2121, arr2122, arr2123, arr2124, arr2125, arr2126, arr2127] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2130, arr2131, arr2132, arr2133, arr2134, arr2135, arr2136, arr2137] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2140, arr2141, arr2142, arr2143, arr2144, arr2145, arr2146, arr2147] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2150, arr2151, arr2152, arr2153, arr2154, arr2155, arr2156, arr2157] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2160, arr2161, arr2162, arr2163, arr2164, arr2165, arr2166, arr2167] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2170, arr2171, arr2172, arr2173, arr2174, arr2175, arr2176, arr2177] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr2180, arr2181, arr2182, arr2183, arr2184, arr2185, arr2186, arr2187] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3000, arr3001, arr3002, arr3003, arr3004, arr3005, arr3006, arr3007] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3010, arr3011, arr3012, arr3013, arr3014, arr3015, arr3016, arr3017] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3020, arr3021, arr3022, arr3023, arr3024, arr3025, arr3026, arr3027] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3030, arr3031, arr3032, arr3033, arr3034, arr3035, arr3036, arr3037] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3040, arr3041, arr3042, arr3043, arr3044, arr3045, arr3046, arr3047] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3050, arr3051, arr3052, arr3053, arr3054, arr3055, arr3056, arr3057] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3060, arr3061, arr3062, arr3063, arr3064, arr3065, arr3066, arr3067] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3070, arr3071, arr3072, arr3073, arr3074, arr3075, arr3076, arr3077] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3080, arr3081, arr3082, arr3083, arr3084, arr3085, arr3086, arr3087] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3100, arr3101, arr3102, arr3103, arr3104, arr3105, arr3106, arr3107] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3110, arr3111, arr3112, arr3113, arr3114, arr3115, arr3116, arr3117] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3120, arr3121, arr3122, arr3123, arr3124, arr3125, arr3126, arr3127] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3130, arr3131, arr3132, arr3133, arr3134, arr3135, arr3136, arr3137] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3140, arr3141, arr3142, arr3143, arr3144, arr3145, arr3146, arr3147] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3150, arr3151, arr3152, arr3153, arr3154, arr3155, arr3156, arr3157] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3160, arr3161, arr3162, arr3163, arr3164, arr3165, arr3166, arr3167] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3170, arr3171, arr3172, arr3173, arr3174, arr3175, arr3176, arr3177] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr3180, arr3181, arr3182, arr3183, arr3184, arr3185, arr3186, arr3187] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4000, arr4001, arr4002, arr4003, arr4004, arr4005, arr4006, arr4007] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4010, arr4011, arr4012, arr4013, arr4014, arr4015, arr4016, arr4017] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4020, arr4021, arr4022, arr4023, arr4024, arr4025, arr4026, arr4027] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4030, arr4031, arr4032, arr4033, arr4034, arr4035, arr4036, arr4037] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4040, arr4041, arr4042, arr4043, arr4044, arr4045, arr4046, arr4047] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4050, arr4051, arr4052, arr4053, arr4054, arr4055, arr4056, arr4057] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4060, arr4061, arr4062, arr4063, arr4064, arr4065, arr4066, arr4067] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4070, arr4071, arr4072, arr4073, arr4074, arr4075, arr4076, arr4077] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4080, arr4081, arr4082, arr4083, arr4084, arr4085, arr4086, arr4087] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4100, arr4101, arr4102, arr4103, arr4104, arr4105, arr4106, arr4107] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4110, arr4111, arr4112, arr4113, arr4114, arr4115, arr4116, arr4117] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4120, arr4121, arr4122, arr4123, arr4124, arr4125, arr4126, arr4127] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4130, arr4131, arr4132, arr4133, arr4134, arr4135, arr4136, arr4137] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4140, arr4141, arr4142, arr4143, arr4144, arr4145, arr4146, arr4147] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4150, arr4151, arr4152, arr4153, arr4154, arr4155, arr4156, arr4157] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4160, arr4161, arr4162, arr4163, arr4164, arr4165, arr4166, arr4167] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4170, arr4171, arr4172, arr4173, arr4174, arr4175, arr4176, arr4177] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr4180, arr4181, arr4182, arr4183, arr4184, arr4185, arr4186, arr4187] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5000, arr5001, arr5002, arr5003, arr5004, arr5005, arr5006, arr5007] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5010, arr5011, arr5012, arr5013, arr5014, arr5015, arr5016, arr5017] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5020, arr5021, arr5022, arr5023, arr5024, arr5025, arr5026, arr5027] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5030, arr5031, arr5032, arr5033, arr5034, arr5035, arr5036, arr5037] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5040, arr5041, arr5042, arr5043, arr5044, arr5045, arr5046, arr5047] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5050, arr5051, arr5052, arr5053, arr5054, arr5055, arr5056, arr5057] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5060, arr5061, arr5062, arr5063, arr5064, arr5065, arr5066, arr5067] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5070, arr5071, arr5072, arr5073, arr5074, arr5075, arr5076, arr5077] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5080, arr5081, arr5082, arr5083, arr5084, arr5085, arr5086, arr5087] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5100, arr5101, arr5102, arr5103, arr5104, arr5105, arr5106, arr5107] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5110, arr5111, arr5112, arr5113, arr5114, arr5115, arr5116, arr5117] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5120, arr5121, arr5122, arr5123, arr5124, arr5125, arr5126, arr5127] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5130, arr5131, arr5132, arr5133, arr5134, arr5135, arr5136, arr5137] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5140, arr5141, arr5142, arr5143, arr5144, arr5145, arr5146, arr5147] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5150, arr5151, arr5152, arr5153, arr5154, arr5155, arr5156, arr5157] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5160, arr5161, arr5162, arr5163, arr5164, arr5165, arr5166, arr5167] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5170, arr5171, arr5172, arr5173, arr5174, arr5175, arr5176, arr5177] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr5180, arr5181, arr5182, arr5183, arr5184, arr5185, arr5186, arr5187] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6000, arr6001, arr6002, arr6003, arr6004, arr6005, arr6006, arr6007] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6010, arr6011, arr6012, arr6013, arr6014, arr6015, arr6016, arr6017] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6020, arr6021, arr6022, arr6023, arr6024, arr6025, arr6026, arr6027] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6030, arr6031, arr6032, arr6033, arr6034, arr6035, arr6036, arr6037] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6040, arr6041, arr6042, arr6043, arr6044, arr6045, arr6046, arr6047] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6050, arr6051, arr6052, arr6053, arr6054, arr6055, arr6056, arr6057] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6060, arr6061, arr6062, arr6063, arr6064, arr6065, arr6066, arr6067] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6070, arr6071, arr6072, arr6073, arr6074, arr6075, arr6076, arr6077] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6080, arr6081, arr6082, arr6083, arr6084, arr6085, arr6086, arr6087] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6100, arr6101, arr6102, arr6103, arr6104, arr6105, arr6106, arr6107] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6110, arr6111, arr6112, arr6113, arr6114, arr6115, arr6116, arr6117] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6120, arr6121, arr6122, arr6123, arr6124, arr6125, arr6126, arr6127] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6130, arr6131, arr6132, arr6133, arr6134, arr6135, arr6136, arr6137] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6140, arr6141, arr6142, arr6143, arr6144, arr6145, arr6146, arr6147] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6150, arr6151, arr6152, arr6153, arr6154, arr6155, arr6156, arr6157] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6160, arr6161, arr6162, arr6163, arr6164, arr6165, arr6166, arr6167] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6170, arr6171, arr6172, arr6173, arr6174, arr6175, arr6176, arr6177] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr6180, arr6181, arr6182, arr6183, arr6184, arr6185, arr6186, arr6187] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7000, arr7001, arr7002, arr7003, arr7004, arr7005, arr7006, arr7007] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7010, arr7011, arr7012, arr7013, arr7014, arr7015, arr7016, arr7017] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7020, arr7021, arr7022, arr7023, arr7024, arr7025, arr7026, arr7027] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7030, arr7031, arr7032, arr7033, arr7034, arr7035, arr7036, arr7037] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7040, arr7041, arr7042, arr7043, arr7044, arr7045, arr7046, arr7047] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7050, arr7051, arr7052, arr7053, arr7054, arr7055, arr7056, arr7057] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7060, arr7061, arr7062, arr7063, arr7064, arr7065, arr7066, arr7067] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7070, arr7071, arr7072, arr7073, arr7074, arr7075, arr7076, arr7077] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7080, arr7081, arr7082, arr7083, arr7084, arr7085, arr7086, arr7087] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7100, arr7101, arr7102, arr7103, arr7104, arr7105, arr7106, arr7107] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7110, arr7111, arr7112, arr7113, arr7114, arr7115, arr7116, arr7117] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7120, arr7121, arr7122, arr7123, arr7124, arr7125, arr7126, arr7127] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7130, arr7131, arr7132, arr7133, arr7134, arr7135, arr7136, arr7137] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7140, arr7141, arr7142, arr7143, arr7144, arr7145, arr7146, arr7147] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7150, arr7151, arr7152, arr7153, arr7154, arr7155, arr7156, arr7157] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7160, arr7161, arr7162, arr7163, arr7164, arr7165, arr7166, arr7167] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7170, arr7171, arr7172, arr7173, arr7174, arr7175, arr7176, arr7177] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr7180, arr7181, arr7182, arr7183, arr7184, arr7185, arr7186, arr7187] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8000, arr8001, arr8002, arr8003, arr8004, arr8005, arr8006, arr8007] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8010, arr8011, arr8012, arr8013, arr8014, arr8015, arr8016, arr8017] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8020, arr8021, arr8022, arr8023, arr8024, arr8025, arr8026, arr8027] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8030, arr8031, arr8032, arr8033, arr8034, arr8035, arr8036, arr8037] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8040, arr8041, arr8042, arr8043, arr8044, arr8045, arr8046, arr8047] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8050, arr8051, arr8052, arr8053, arr8054, arr8055, arr8056, arr8057] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8060, arr8061, arr8062, arr8063, arr8064, arr8065, arr8066, arr8067] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8070, arr8071, arr8072, arr8073, arr8074, arr8075, arr8076, arr8077] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8080, arr8081, arr8082, arr8083, arr8084, arr8085, arr8086, arr8087] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8100, arr8101, arr8102, arr8103, arr8104, arr8105, arr8106, arr8107] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8110, arr8111, arr8112, arr8113, arr8114, arr8115, arr8116, arr8117] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8120, arr8121, arr8122, arr8123, arr8124, arr8125, arr8126, arr8127] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8130, arr8131, arr8132, arr8133, arr8134, arr8135, arr8136, arr8137] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8140, arr8141, arr8142, arr8143, arr8144, arr8145, arr8146, arr8147] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8150, arr8151, arr8152, arr8153, arr8154, arr8155, arr8156, arr8157] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8160, arr8161, arr8162, arr8163, arr8164, arr8165, arr8166, arr8167] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8170, arr8171, arr8172, arr8173, arr8174, arr8175, arr8176, arr8177] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr8180, arr8181, arr8182, arr8183, arr8184, arr8185, arr8186, arr8187] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9000, arr9001, arr9002, arr9003, arr9004, arr9005, arr9006, arr9007] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9010, arr9011, arr9012, arr9013, arr9014, arr9015, arr9016, arr9017] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9020, arr9021, arr9022, arr9023, arr9024, arr9025, arr9026, arr9027] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9030, arr9031, arr9032, arr9033, arr9034, arr9035, arr9036, arr9037] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9040, arr9041, arr9042, arr9043, arr9044, arr9045, arr9046, arr9047] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9050, arr9051, arr9052, arr9053, arr9054, arr9055, arr9056, arr9057] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9060, arr9061, arr9062, arr9063, arr9064, arr9065, arr9066, arr9067] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9070, arr9071, arr9072, arr9073, arr9074, arr9075, arr9076, arr9077] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9080, arr9081, arr9082, arr9083, arr9084, arr9085, arr9086, arr9087] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9100, arr9101, arr9102, arr9103, arr9104, arr9105, arr9106, arr9107] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9110, arr9111, arr9112, arr9113, arr9114, arr9115, arr9116, arr9117] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9120, arr9121, arr9122, arr9123, arr9124, arr9125, arr9126, arr9127] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9130, arr9131, arr9132, arr9133, arr9134, arr9135, arr9136, arr9137] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9140, arr9141, arr9142, arr9143, arr9144, arr9145, arr9146, arr9147] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9150, arr9151, arr9152, arr9153, arr9154, arr9155, arr9156, arr9157] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9160, arr9161, arr9162, arr9163, arr9164, arr9165, arr9166, arr9167] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9170, arr9171, arr9172, arr9173, arr9174, arr9175, arr9176, arr9177] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16] /\
    [arr9180, arr9181, arr9182, arr9183, arr9184, arr9185, arr9186, arr9187] >=s [(-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16, (-3875)@16]
}

# setup

mov [L0x55555526f0, L0x55555526f2, L0x55555526f4, L0x55555526f6, L0x55555526f8, L0x55555526fa, L0x55555526fc, L0x55555526fe] [4591@sint16, 29@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16];
mov [L0x5555552700, L0x5555552702, L0x5555552704, L0x5555552706, L0x5555552708, L0x555555270a, L0x555555270c, L0x555555270e] [1005@sint16, 918@sint16, (-818)@sint16, (-1736)@sint16, 7173@sint16, 6552@sint16, (-5838)@sint16, (-12391)@sint16];
mov [L0x5555552710, L0x5555552712, L0x5555552714, L0x5555552716, L0x5555552718, L0x555555271a, L0x555555271c, L0x555555271e] [(-2274)@sint16, (-16231)@sint16, 1610@sint16, 11491@sint16, (-2113)@sint16, (-15081)@sint16, (-1815)@sint16, (-12954)@sint16];
mov [L0x5555552720, L0x5555552722, L0x5555552724, L0x5555552726, L0x5555552728, L0x555555272a, L0x555555272c, L0x555555272e] [(-2274)@sint16, (-16231)@sint16, 1610@sint16, 11491@sint16, (-2113)@sint16, (-15081)@sint16, (-1815)@sint16, (-12954)@sint16];
mov [L0x5555552730, L0x5555552732, L0x5555552734, L0x5555552736, L0x5555552738, L0x555555273a, L0x555555273c, L0x555555273e] [2113@sint16, 15081@sint16, (-2274)@sint16, (-16231)@sint16, 1815@sint16, 12954@sint16, 1610@sint16, 11491@sint16];
mov [L0x5555552740, L0x5555552742, L0x5555552744, L0x5555552746, L0x5555552748, L0x555555274a, L0x555555274c, L0x555555274e] [(-2113)@sint16, (-15081)@sint16, 2274@sint16, 16231@sint16, (-1815)@sint16, (-12954)@sint16, (-1610)@sint16, (-11491)@sint16];
mov [L0x5555552750, L0x5555552752, L0x5555552754, L0x5555552756, L0x5555552758, L0x555555275a, L0x555555275c, L0x555555275e] [1@sint16, 7@sint16, 1@sint16, 7@sint16, 1@sint16, 7@sint16, 1@sint16, 7@sint16];
mov [L0x5555552760, L0x5555552762, L0x5555552764, L0x5555552766, L0x5555552768, L0x555555276a, L0x555555276c, L0x555555276e] [1@sint16, 7@sint16, 1@sint16, 7@sint16, 1@sint16, 7@sint16, 1@sint16, 7@sint16];
mov [L0x5555552770, L0x5555552772, L0x5555552774, L0x5555552776, L0x5555552778, L0x555555277a, L0x555555277c, L0x555555277e] [(-1610)@sint16, (-11491)@sint16, (-1815)@sint16, (-12954)@sint16, 2274@sint16, 16231@sint16, (-2113)@sint16, (-15081)@sint16];
mov [L0x5555552780, L0x5555552782, L0x5555552784, L0x5555552786, L0x5555552788, L0x555555278a, L0x555555278c, L0x555555278e] [1610@sint16, 11491@sint16, 1815@sint16, 12954@sint16, (-2274)@sint16, (-16231)@sint16, 2113@sint16, 15081@sint16];
mov [L0x5555552790, L0x5555552792, L0x5555552794, L0x5555552796, L0x5555552798, L0x555555279a, L0x555555279c, L0x555555279e] [(-1815)@sint16, (-12954)@sint16, (-2113)@sint16, (-15081)@sint16, 1610@sint16, 11491@sint16, (-2274)@sint16, (-16231)@sint16];
mov [L0x55555527a0, L0x55555527a2, L0x55555527a4, L0x55555527a6, L0x55555527a8, L0x55555527aa, L0x55555527ac, L0x55555527ae] [(-1815)@sint16, (-12954)@sint16, (-2113)@sint16, (-15081)@sint16, 1610@sint16, 11491@sint16, (-2274)@sint16, (-16231)@sint16];
mov [L0x55555527b0, L0x55555527b2, L0x55555527b4, L0x55555527b6, L0x55555527b8, L0x55555527ba, L0x55555527bc, L0x55555527be] [2274@sint16, 16231@sint16, 1610@sint16, 11491@sint16, 2113@sint16, 15081@sint16, (-1815)@sint16, (-12954)@sint16];
mov [L0x55555527c0, L0x55555527c2, L0x55555527c4, L0x55555527c6, L0x55555527c8, L0x55555527ca, L0x55555527cc, L0x55555527ce] [(-2274)@sint16, (-16231)@sint16, (-1610)@sint16, (-11491)@sint16, (-2113)@sint16, (-15081)@sint16, 1815@sint16, 12954@sint16];
mov [L0x55555527d0, L0x55555527d2, L0x55555527d4, L0x55555527d6, L0x55555527d8, L0x55555527da, L0x55555527dc, L0x55555527de] [(-2113)@sint16, (-15081)@sint16, (-2274)@sint16, (-16231)@sint16, (-1815)@sint16, (-12954)@sint16, 1610@sint16, 11491@sint16];
mov [L0x55555527e0, L0x55555527e2, L0x55555527e4, L0x55555527e6, L0x55555527e8, L0x55555527ea, L0x55555527ec, L0x55555527ee] [(-2113)@sint16, (-15081)@sint16, (-2274)@sint16, (-16231)@sint16, (-1815)@sint16, (-12954)@sint16, 1610@sint16, 11491@sint16];
mov [L0x55555527f0, L0x55555527f2, L0x55555527f4, L0x55555527f6, L0x55555527f8, L0x55555527fa, L0x55555527fc, L0x55555527fe] [(-1)@sint16, (-7)@sint16, 1@sint16, 7@sint16, (-1)@sint16, (-7)@sint16, 1@sint16, 7@sint16];
mov [L0x5555552800, L0x5555552802, L0x5555552804, L0x5555552806, L0x5555552808, L0x555555280a, L0x555555280c, L0x555555280e] [1@sint16, 7@sint16, (-1)@sint16, (-7)@sint16, 1@sint16, 7@sint16, (-1)@sint16, (-7)@sint16];
mov [L0x5555552810, L0x5555552812, L0x5555552814, L0x5555552816, L0x5555552818, L0x555555281a, L0x555555281c, L0x555555281e] [1610@sint16, 11491@sint16, (-1815)@sint16, (-12954)@sint16, (-2274)@sint16, (-16231)@sint16, (-2113)@sint16, (-15081)@sint16];
mov [L0x5555552820, L0x5555552822, L0x5555552824, L0x5555552826, L0x5555552828, L0x555555282a, L0x555555282c, L0x555555282e] [1610@sint16, 11491@sint16, (-1815)@sint16, (-12954)@sint16, (-2274)@sint16, (-16231)@sint16, (-2113)@sint16, (-15081)@sint16];
mov [L0x5555552830, L0x5555552832, L0x5555552834, L0x5555552836, L0x5555552838, L0x555555283a, L0x555555283c, L0x555555283e] [4591@sint16, 29235@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16];
mov [L0x5555552840, L0x5555552842, L0x5555552844, L0x5555552846, L0x5555552848, L0x555555284a, L0x555555284c, L0x555555284e] [(-621)@sint16, 1891@sint16, (-803)@sint16, 0@sint16, (-4432)@sint16, 13497@sint16, (-5731)@sint16, (-17729)@sint16];
mov [L0x5555552850, L0x5555552852, L0x5555552854, L0x5555552856, L0x5555552858, L0x555555285a, L0x555555285c, L0x555555285e] [4591@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16];
mov [L0x5555552860, L0x5555552862, L0x5555552864, L0x5555552866, L0x5555552868, L0x555555286a, L0x555555286c, L0x555555286e] [(-28264)@sint16, (-16381)@sint16, (-28264)@sint16, (-16381)@sint16, (-2295)@sint16, (-2295)@sint16, 7@sint16, 1@sint16];
mov [L0x5555552870, L0x5555552872, L0x5555552874, L0x5555552876, L0x5555552878, L0x555555287a, L0x555555287c, L0x555555287e] [(-28264)@sint16, (-16381)@sint16, 557@sint16, 12983@sint16, (-2295)@sint16, 1819@sint16, 12241@sint16, 1715@sint16];
mov [L0x5555552880, L0x5555552882, L0x5555552884, L0x5555552886, L0x5555552888, L0x555555288a, L0x555555288c, L0x555555288e] [(-28264)@sint16, (-16381)@sint16, (-6267)@sint16, 13496@sint16, (-2295)@sint16, 1891@sint16, (-11463)@sint16, (-1606)@sint16];
mov [L0x5555552890, L0x5555552892, L0x5555552894, L0x5555552896, L0x5555552898, L0x555555289a, L0x555555289c, L0x555555289e] [(-28264)@sint16, (-16381)@sint16, 8365@sint16, 15274@sint16, (-2295)@sint16, 2140@sint16, 2213@sint16, 310@sint16];
mov [L0x55555528a0, L0x55555528a2, L0x55555528a4, L0x55555528a6, L0x55555528a8, L0x55555528aa, L0x55555528ac, L0x55555528ae] [(-28264)@sint16, (-16381)@sint16, 23468@sint16, (-7252)@sint16, (-2295)@sint16, (-1016)@sint16, (-6467)@sint16, (-906)@sint16];
mov [L0x55555528b0, L0x55555528b2, L0x55555528b4, L0x55555528b6, L0x55555528b8, L0x55555528ba, L0x55555528bc, L0x55555528be] [(-28264)@sint16, (-16381)@sint16, (-17144)@sint16, (-3234)@sint16, (-2295)@sint16, (-453)@sint16, (-14503)@sint16, (-2032)@sint16];
mov [L0x55555528c0, L0x55555528c2, L0x55555528c4, L0x55555528c6, L0x55555528c8, L0x55555528ca, L0x55555528cc, L0x55555528ce] [(-28264)@sint16, (-16381)@sint16, 19899@sint16, 1106@sint16, (-2295)@sint16, 155@sint16, (-2220)@sint16, (-311)@sint16];
mov [L0x55555528d0, L0x55555528d2, L0x55555528d4, L0x55555528d6, L0x55555528d8, L0x55555528da, L0x55555528dc, L0x55555528de] [(-28264)@sint16, (-16381)@sint16, (-24025)@sint16, (-5732)@sint16, (-2295)@sint16, (-803)@sint16, (-5774)@sint16, (-809)@sint16];
mov [L0x55555528e0, L0x55555528e2, L0x55555528e4, L0x55555528e6, L0x55555528e8, L0x55555528ea, L0x55555528ec, L0x55555528ee] [(-28264)@sint16, (-16381)@sint16, 23411@sint16, (-10264)@sint16, (-2295)@sint16, (-1438)@sint16, (-6802)@sint16, (-953)@sint16];
mov [L0x55555528f0, L0x55555528f2, L0x55555528f4, L0x55555528f6, L0x55555528f8, L0x55555528fa, L0x55555528fc, L0x55555528fe] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-11491)@sint16, (-1610)@sint16];
mov [L0x5555552900, L0x5555552902, L0x5555552904, L0x5555552906, L0x5555552908, L0x555555290a, L0x555555290c, L0x555555290e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 6616@sint16, 927@sint16];
mov [L0x5555552910, L0x5555552912, L0x5555552914, L0x5555552916, L0x5555552918, L0x555555291a, L0x555555291c, L0x555555291e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-9122)@sint16, (-1278)@sint16];
mov [L0x5555552920, L0x5555552922, L0x5555552924, L0x5555552926, L0x5555552928, L0x555555292a, L0x555555292c, L0x555555292e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 2077@sint16, 291@sint16];
mov [L0x5555552930, L0x5555552932, L0x5555552934, L0x5555552936, L0x5555552938, L0x555555293a, L0x555555293c, L0x555555293e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 6681@sint16, 936@sint16];
mov [L0x5555552940, L0x5555552942, L0x5555552944, L0x5555552946, L0x5555552948, L0x555555294a, L0x555555294c, L0x555555294e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-13982)@sint16, (-1959)@sint16];
mov [L0x5555552950, L0x5555552952, L0x5555552954, L0x5555552956, L0x5555552958, L0x555555295a, L0x555555295c, L0x555555295e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 9414@sint16, 1319@sint16];
mov [L0x5555552960, L0x5555552962, L0x5555552964, L0x5555552966, L0x5555552968, L0x555555296a, L0x555555296c, L0x555555296e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-13297)@sint16, (-1863)@sint16];
mov [L0x5555552970, L0x5555552972, L0x5555552974, L0x5555552976, L0x5555552978, L0x555555297a, L0x555555297c, L0x555555297e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-9664)@sint16, (-1354)@sint16];
mov [L0x5555552980, L0x5555552982, L0x5555552984, L0x5555552986, L0x5555552988, L0x555555298a, L0x555555298c, L0x555555298e] [(-28264)@sint16, (-16381)@sint16, 19114@sint16, 8843@sint16, (-2295)@sint16, 1239@sint16, 11491@sint16, 1610@sint16];
mov [L0x5555552990, L0x5555552992, L0x5555552994, L0x5555552996, L0x5555552998, L0x555555299a, L0x555555299c, L0x555555299e] [(-28264)@sint16, (-16381)@sint16, 3297@sint16, (-6281)@sint16, (-2295)@sint16, (-880)@sint16, 13982@sint16, 1959@sint16];
mov [L0x55555529a0, L0x55555529a2, L0x55555529a4, L0x55555529a6, L0x55555529a8, L0x55555529aa, L0x55555529ac, L0x55555529ae] [(-28264)@sint16, (-16381)@sint16, 3212@sint16, (-10799)@sint16, (-2295)@sint16, (-1513)@sint16, (-6616)@sint16, (-927)@sint16];
mov [L0x55555529b0, L0x55555529b2, L0x55555529b4, L0x55555529b6, L0x55555529b8, L0x55555529ba, L0x55555529bc, L0x55555529be] [(-28264)@sint16, (-16381)@sint16, 19300@sint16, 2248@sint16, (-2295)@sint16, 315@sint16, (-9414)@sint16, (-1319)@sint16];
mov [L0x55555529c0, L0x55555529c2, L0x55555529c4, L0x55555529c6, L0x55555529c8, L0x55555529ca, L0x55555529cc, L0x55555529ce] [(-28264)@sint16, (-16381)@sint16, 23054@sint16, (-12705)@sint16, (-2295)@sint16, (-1780)@sint16, 9122@sint16, 1278@sint16];
mov [L0x55555529d0, L0x55555529d2, L0x55555529d4, L0x55555529d6, L0x55555529d8, L0x55555529da, L0x55555529dc, L0x55555529de] [(-28264)@sint16, (-16381)@sint16, (-15845)@sint16, 16137@sint16, (-2295)@sint16, 2261@sint16, 13297@sint16, 1863@sint16];
mov [L0x55555529e0, L0x55555529e2, L0x55555529e4, L0x55555529e6, L0x55555529e8, L0x55555529ea, L0x55555529ec, L0x55555529ee] [(-28264)@sint16, (-16381)@sint16, 27122@sint16, (-11092)@sint16, (-2295)@sint16, (-1554)@sint16, (-2077)@sint16, (-291)@sint16];
mov [L0x55555529f0, L0x55555529f2, L0x55555529f4, L0x55555529f6, L0x55555529f8, L0x55555529fa, L0x55555529fc, L0x55555529fe] [(-28264)@sint16, (-16381)@sint16, (-26351)@sint16, (-13783)@sint16, (-2295)@sint16, (-1931)@sint16, 9664@sint16, 1354@sint16];
mov [L0x5555552a00, L0x5555552a02, L0x5555552a04, L0x5555552a06, L0x5555552a08, L0x5555552a0a, L0x5555552a0c, L0x5555552a0e] [(-28264)@sint16, (-16381)@sint16, 12633@sint16, (-5339)@sint16, (-2295)@sint16, (-748)@sint16, (-6681)@sint16, (-936)@sint16];
mov [L0x5555552a10, L0x5555552a12, L0x5555552a14, L0x5555552a16, L0x5555552a18, L0x5555552a1a, L0x5555552a1c, L0x5555552a1e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 16231@sint16, 2274@sint16];
mov [L0x5555552a20, L0x5555552a22, L0x5555552a24, L0x5555552a26, L0x5555552a28, L0x5555552a2a, L0x5555552a2c, L0x5555552a2e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-15695)@sint16, (-2199)@sint16];
mov [L0x5555552a30, L0x5555552a32, L0x5555552a34, L0x5555552a36, L0x5555552a38, L0x5555552a3a, L0x5555552a3c, L0x5555552a3e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 7958@sint16, 1115@sint16];
mov [L0x5555552a40, L0x5555552a42, L0x5555552a44, L0x5555552a46, L0x5555552a48, L0x5555552a4a, L0x5555552a4c, L0x5555552a4e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-1427)@sint16, (-200)@sint16];
mov [L0x5555552a50, L0x5555552a52, L0x5555552a54, L0x5555552a56, L0x5555552a58, L0x5555552a5a, L0x5555552a5c, L0x5555552a5e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-1213)@sint16, (-170)@sint16];
mov [L0x5555552a60, L0x5555552a62, L0x5555552a64, L0x5555552a66, L0x5555552a68, L0x5555552a6a, L0x5555552a6c, L0x5555552a6e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 15353@sint16, 2151@sint16];
mov [L0x5555552a70, L0x5555552a72, L0x5555552a74, L0x5555552a76, L0x5555552a78, L0x5555552a7a, L0x5555552a7c, L0x5555552a7e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-14803)@sint16, (-2074)@sint16];
mov [L0x5555552a80, L0x5555552a82, L0x5555552a84, L0x5555552a86, L0x5555552a88, L0x5555552a8a, L0x5555552a8c, L0x5555552a8e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-15859)@sint16, (-2222)@sint16];
mov [L0x5555552a90, L0x5555552a92, L0x5555552a94, L0x5555552a96, L0x5555552a98, L0x5555552a9a, L0x5555552a9c, L0x5555552a9e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 9457@sint16, 1325@sint16];
mov [L0x5555552aa0, L0x5555552aa2, L0x5555552aa4, L0x5555552aa6, L0x5555552aa8, L0x5555552aaa, L0x5555552aac, L0x5555552aae] [(-28264)@sint16, (-16381)@sint16, (-17858)@sint16, (-8116)@sint16, (-2295)@sint16, (-1137)@sint16, (-12954)@sint16, (-1815)@sint16];
mov [L0x5555552ab0, L0x5555552ab2, L0x5555552ab4, L0x5555552ab6, L0x5555552ab8, L0x5555552aba, L0x5555552abc, L0x5555552abe] [(-28264)@sint16, (-16381)@sint16, (-20799)@sint16, 606@sint16, (-2295)@sint16, 85@sint16, (-193)@sint16, (-27)@sint16];
mov [L0x5555552ac0, L0x5555552ac2, L0x5555552ac4, L0x5555552ac6, L0x5555552ac8, L0x5555552aca, L0x5555552acc, L0x5555552ace] [(-28264)@sint16, (-16381)@sint16, 29106@sint16, 11655@sint16, (-2295)@sint16, 1633@sint16, (-2819)@sint16, (-395)@sint16];
mov [L0x5555552ad0, L0x5555552ad2, L0x5555552ad4, L0x5555552ad6, L0x5555552ad8, L0x5555552ada, L0x5555552adc, L0x5555552ade] [(-28264)@sint16, (-16381)@sint16, (-16759)@sint16, 713@sint16, (-2295)@sint16, 100@sint16, 14582@sint16, 2043@sint16];
mov [L0x5555552ae0, L0x5555552ae2, L0x5555552ae4, L0x5555552ae6, L0x5555552ae8, L0x5555552aea, L0x5555552aec, L0x5555552aee] [(-28264)@sint16, (-16381)@sint16, (-19728)@sint16, 7929@sint16, (-2295)@sint16, 1111@sint16, 5796@sint16, 812@sint16];
mov [L0x5555552af0, L0x5555552af2, L0x5555552af4, L0x5555552af6, L0x5555552af8, L0x5555552afa, L0x5555552afc, L0x5555552afe] [(-28264)@sint16, (-16381)@sint16, (-8151)@sint16, 12404@sint16, (-2295)@sint16, 1738@sint16, 10756@sint16, 1507@sint16];
mov [L0x5555552b00, L0x5555552b02, L0x5555552b04, L0x5555552b06, L0x5555552b08, L0x5555552b0a, L0x5555552b0c, L0x5555552b0e] [(-28264)@sint16, (-16381)@sint16, (-30919)@sint16, 7401@sint16, (-2295)@sint16, 1037@sint16, (-1627)@sint16, (-228)@sint16];
mov [L0x5555552b10, L0x5555552b12, L0x5555552b14, L0x5555552b16, L0x5555552b18, L0x5555552b1a, L0x5555552b1c, L0x5555552b1e] [(-28264)@sint16, (-16381)@sint16, (-25010)@sint16, (-8537)@sint16, (-2295)@sint16, (-1196)@sint16, (-5603)@sint16, (-785)@sint16];
mov [L0x5555552b20, L0x5555552b22, L0x5555552b24, L0x5555552b26, L0x5555552b28, L0x5555552b2a, L0x5555552b2c, L0x5555552b2e] [(-28264)@sint16, (-16381)@sint16, (-20956)@sint16, 8707@sint16, (-2295)@sint16, 1220@sint16, (-7937)@sint16, (-1112)@sint16];
mov [L0x5555552b30, L0x5555552b32, L0x5555552b34, L0x5555552b36, L0x5555552b38, L0x5555552b3a, L0x5555552b3c, L0x5555552b3e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-7)@sint16, (-1)@sint16];
mov [L0x5555552b40, L0x5555552b42, L0x5555552b44, L0x5555552b46, L0x5555552b48, L0x5555552b4a, L0x5555552b4c, L0x5555552b4e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 11463@sint16, 1606@sint16];
mov [L0x5555552b50, L0x5555552b52, L0x5555552b54, L0x5555552b56, L0x5555552b58, L0x5555552b5a, L0x5555552b5c, L0x5555552b5e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 6467@sint16, 906@sint16];
mov [L0x5555552b60, L0x5555552b62, L0x5555552b64, L0x5555552b66, L0x5555552b68, L0x5555552b6a, L0x5555552b6c, L0x5555552b6e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 2220@sint16, 311@sint16];
mov [L0x5555552b70, L0x5555552b72, L0x5555552b74, L0x5555552b76, L0x5555552b78, L0x5555552b7a, L0x5555552b7c, L0x5555552b7e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 6802@sint16, 953@sint16];
mov [L0x5555552b80, L0x5555552b82, L0x5555552b84, L0x5555552b86, L0x5555552b88, L0x5555552b8a, L0x5555552b8c, L0x5555552b8e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-12241)@sint16, (-1715)@sint16];
mov [L0x5555552b90, L0x5555552b92, L0x5555552b94, L0x5555552b96, L0x5555552b98, L0x5555552b9a, L0x5555552b9c, L0x5555552b9e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-2213)@sint16, (-310)@sint16];
mov [L0x5555552ba0, L0x5555552ba2, L0x5555552ba4, L0x5555552ba6, L0x5555552ba8, L0x5555552baa, L0x5555552bac, L0x5555552bae] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 14503@sint16, 2032@sint16];
mov [L0x5555552bb0, L0x5555552bb2, L0x5555552bb4, L0x5555552bb6, L0x5555552bb8, L0x5555552bba, L0x5555552bbc, L0x5555552bbe] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 5774@sint16, 809@sint16];
mov [L0x5555552bc0, L0x5555552bc2, L0x5555552bc4, L0x5555552bc6, L0x5555552bc8, L0x5555552bca, L0x5555552bcc, L0x5555552bce] [(-28264)@sint16, (-16381)@sint16, (-15031)@sint16, 9906@sint16, (-2295)@sint16, 1388@sint16, (-16231)@sint16, (-2274)@sint16];
mov [L0x5555552bd0, L0x5555552bd2, L0x5555552bd4, L0x5555552bd6, L0x5555552bd8, L0x5555552bda, L0x5555552bdc, L0x5555552bde] [(-28264)@sint16, (-16381)@sint16, (-27408)@sint16, (-3969)@sint16, (-2295)@sint16, (-556)@sint16, (-15353)@sint16, (-2151)@sint16];
mov [L0x5555552be0, L0x5555552be2, L0x5555552be4, L0x5555552be6, L0x5555552be8, L0x5555552bea, L0x5555552bec, L0x5555552bee] [(-28264)@sint16, (-16381)@sint16, (-29249)@sint16, 13582@sint16, (-2295)@sint16, 1903@sint16, 15695@sint16, 2199@sint16];
mov [L0x5555552bf0, L0x5555552bf2, L0x5555552bf4, L0x5555552bf6, L0x5555552bf8, L0x5555552bfa, L0x5555552bfc, L0x5555552bfe] [(-28264)@sint16, (-16381)@sint16, 21726@sint16, (-814)@sint16, (-2295)@sint16, (-114)@sint16, 14803@sint16, 2074@sint16];
mov [L0x5555552c00, L0x5555552c02, L0x5555552c04, L0x5555552c06, L0x5555552c08, L0x5555552c0a, L0x5555552c0c, L0x5555552c0e] [(-28264)@sint16, (-16381)@sint16, 4140@sint16, (-11006)@sint16, (-2295)@sint16, (-1542)@sint16, (-7958)@sint16, (-1115)@sint16];
mov [L0x5555552c10, L0x5555552c12, L0x5555552c14, L0x5555552c16, L0x5555552c18, L0x5555552c1a, L0x5555552c1c, L0x5555552c1e] [(-28264)@sint16, (-16381)@sint16, (-12990)@sint16, 2897@sint16, (-2295)@sint16, 406@sint16, 15859@sint16, 2222@sint16];
mov [L0x5555552c20, L0x5555552c22, L0x5555552c24, L0x5555552c26, L0x5555552c28, L0x5555552c2a, L0x5555552c2c, L0x5555552c2e] [(-28264)@sint16, (-16381)@sint16, (-6695)@sint16, (-9094)@sint16, (-2295)@sint16, (-1274)@sint16, 1427@sint16, 200@sint16];
mov [L0x5555552c30, L0x5555552c32, L0x5555552c34, L0x5555552c36, L0x5555552c38, L0x5555552c3a, L0x5555552c3c, L0x5555552c3e] [(-28264)@sint16, (-16381)@sint16, 23268@sint16, 14974@sint16, (-2295)@sint16, 2098@sint16, (-9457)@sint16, (-1325)@sint16];
mov [L0x5555552c40, L0x5555552c42, L0x5555552c44, L0x5555552c46, L0x5555552c48, L0x5555552c4a, L0x5555552c4c, L0x5555552c4e] [(-28264)@sint16, (-16381)@sint16, (-23297)@sint16, 16287@sint16, (-2295)@sint16, 2282@sint16, 1213@sint16, 170@sint16];
mov [L0x5555552c50, L0x5555552c52, L0x5555552c54, L0x5555552c56, L0x5555552c58, L0x5555552c5a, L0x5555552c5c, L0x5555552c5e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 12954@sint16, 1815@sint16];
mov [L0x5555552c60, L0x5555552c62, L0x5555552c64, L0x5555552c66, L0x5555552c68, L0x5555552c6a, L0x5555552c6c, L0x5555552c6e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 2819@sint16, 395@sint16];
mov [L0x5555552c70, L0x5555552c72, L0x5555552c74, L0x5555552c76, L0x5555552c78, L0x5555552c7a, L0x5555552c7c, L0x5555552c7e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-5796)@sint16, (-812)@sint16];
mov [L0x5555552c80, L0x5555552c82, L0x5555552c84, L0x5555552c86, L0x5555552c88, L0x5555552c8a, L0x5555552c8c, L0x5555552c8e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 1627@sint16, 228@sint16];
mov [L0x5555552c90, L0x5555552c92, L0x5555552c94, L0x5555552c96, L0x5555552c98, L0x5555552c9a, L0x5555552c9c, L0x5555552c9e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 7937@sint16, 1112@sint16];
mov [L0x5555552ca0, L0x5555552ca2, L0x5555552ca4, L0x5555552ca6, L0x5555552ca8, L0x5555552caa, L0x5555552cac, L0x5555552cae] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 193@sint16, 27@sint16];
mov [L0x5555552cb0, L0x5555552cb2, L0x5555552cb4, L0x5555552cb6, L0x5555552cb8, L0x5555552cba, L0x5555552cbc, L0x5555552cbe] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-14582)@sint16, (-2043)@sint16];
mov [L0x5555552cc0, L0x5555552cc2, L0x5555552cc4, L0x5555552cc6, L0x5555552cc8, L0x5555552cca, L0x5555552ccc, L0x5555552cce] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-10756)@sint16, (-1507)@sint16];
mov [L0x5555552cd0, L0x5555552cd2, L0x5555552cd4, L0x5555552cd6, L0x5555552cd8, L0x5555552cda, L0x5555552cdc, L0x5555552cde] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 5603@sint16, 785@sint16];
mov [L0x5555552ce0, L0x5555552ce2, L0x5555552ce4, L0x5555552ce6, L0x5555552ce8, L0x5555552cea, L0x5555552cec, L0x5555552cee] [(-28264)@sint16, (-16381)@sint16, (-23496)@sint16, 5745@sint16, (-2295)@sint16, 805@sint16, (-15081)@sint16, (-2113)@sint16];
mov [L0x5555552cf0, L0x5555552cf2, L0x5555552cf4, L0x5555552cf6, L0x5555552cf8, L0x5555552cfa, L0x5555552cfc, L0x5555552cfe] [(-28264)@sint16, (-16381)@sint16, (-21184)@sint16, (-3341)@sint16, (-2295)@sint16, (-468)@sint16, (-10678)@sint16, (-1496)@sint16];
mov [L0x5555552d00, L0x5555552d02, L0x5555552d04, L0x5555552d06, L0x5555552d08, L0x5555552d0a, L0x5555552d0c, L0x5555552d0e] [(-28264)@sint16, (-16381)@sint16, 3198@sint16, 4832@sint16, (-2295)@sint16, 677@sint16, 5203@sint16, 729@sint16];
mov [L0x5555552d10, L0x5555552d12, L0x5555552d14, L0x5555552d16, L0x5555552d18, L0x5555552d1a, L0x5555552d1c, L0x5555552d1e] [(-28264)@sint16, (-16381)@sint16, (-32632)@sint16, 15345@sint16, (-2295)@sint16, 2150@sint16, 10585@sint16, 1483@sint16];
mov [L0x5555552d20, L0x5555552d22, L0x5555552d24, L0x5555552d26, L0x5555552d28, L0x5555552d2a, L0x5555552d2c, L0x5555552d2e] [(-28264)@sint16, (-16381)@sint16, (-30934)@sint16, (-9736)@sint16, (-2295)@sint16, (-1364)@sint16, (-492)@sint16, (-69)@sint16];
mov [L0x5555552d30, L0x5555552d32, L0x5555552d34, L0x5555552d36, L0x5555552d38, L0x5555552d3a, L0x5555552d3c, L0x5555552d3e] [(-28264)@sint16, (-16381)@sint16, (-11406)@sint16, 4560@sint16, (-2295)@sint16, 639@sint16, 7359@sint16, 1031@sint16];
mov [L0x5555552d40, L0x5555552d42, L0x5555552d44, L0x5555552d46, L0x5555552d48, L0x5555552d4a, L0x5555552d4c, L0x5555552d4e] [(-28264)@sint16, (-16381)@sint16, (-9407)@sint16, 11676@sint16, (-2295)@sint16, 1636@sint16, 4497@sint16, 630@sint16];
mov [L0x5555552d50, L0x5555552d52, L0x5555552d54, L0x5555552d56, L0x5555552d58, L0x5555552d5a, L0x5555552d5c, L0x5555552d5e] [(-28264)@sint16, (-16381)@sint16, (-13418)@sint16, 13075@sint16, (-2295)@sint16, 1832@sint16, 11170@sint16, 1565@sint16];
mov [L0x5555552d60, L0x5555552d62, L0x5555552d64, L0x5555552d66, L0x5555552d68, L0x5555552d6a, L0x5555552d6c, L0x5555552d6e] [(-28264)@sint16, (-16381)@sint16, 8208@sint16, (-9393)@sint16, (-2295)@sint16, (-1316)@sint16, (-12562)@sint16, (-1760)@sint16];
mov [L0x5555552d70, L0x5555552d72, L0x5555552d74, L0x5555552d76, L0x5555552d78, L0x5555552d7a, L0x5555552d7c, L0x5555552d7e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 15081@sint16, 2113@sint16];
mov [L0x5555552d80, L0x5555552d82, L0x5555552d84, L0x5555552d86, L0x5555552d88, L0x5555552d8a, L0x5555552d8c, L0x5555552d8e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-5203)@sint16, (-729)@sint16];
mov [L0x5555552d90, L0x5555552d92, L0x5555552d94, L0x5555552d96, L0x5555552d98, L0x5555552d9a, L0x5555552d9c, L0x5555552d9e] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 492@sint16, 69@sint16];
mov [L0x5555552da0, L0x5555552da2, L0x5555552da4, L0x5555552da6, L0x5555552da8, L0x5555552daa, L0x5555552dac, L0x5555552dae] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-4497)@sint16, (-630)@sint16];
mov [L0x5555552db0, L0x5555552db2, L0x5555552db4, L0x5555552db6, L0x5555552db8, L0x5555552dba, L0x5555552dbc, L0x5555552dbe] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 12562@sint16, 1760@sint16];
mov [L0x5555552dc0, L0x5555552dc2, L0x5555552dc4, L0x5555552dc6, L0x5555552dc8, L0x5555552dca, L0x5555552dcc, L0x5555552dce] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 10678@sint16, 1496@sint16];
mov [L0x5555552dd0, L0x5555552dd2, L0x5555552dd4, L0x5555552dd6, L0x5555552dd8, L0x5555552dda, L0x5555552ddc, L0x5555552dde] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-10585)@sint16, (-1483)@sint16];
mov [L0x5555552de0, L0x5555552de2, L0x5555552de4, L0x5555552de6, L0x5555552de8, L0x5555552dea, L0x5555552dec, L0x5555552dee] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-7359)@sint16, (-1031)@sint16];
mov [L0x5555552df0, L0x5555552df2, L0x5555552df4, L0x5555552df6, L0x5555552df8, L0x5555552dfa, L0x5555552dfc, L0x5555552dfe] [9007@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, (-11170)@sint16, (-1565)@sint16];
mov [L0x5555552e00, L0x5555552e02, L0x5555552e04, L0x5555552e06, L0x5555552e08, L0x5555552e0a, L0x5555552e0c, L0x5555552e0e] [1@sint16, 7@sint16, (-478)@sint16, (-3412)@sint16, (-478)@sint16, (-3412)@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e10, L0x5555552e12, L0x5555552e14, L0x5555552e16, L0x5555552e18, L0x5555552e1a, L0x5555552e1c, L0x5555552e1e] [(-1610)@sint16, (-11491)@sint16, 1175@sint16, 8386@sint16, 0@sint16, 0@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e20, L0x5555552e22, L0x5555552e24, L0x5555552e26, L0x5555552e28, L0x5555552e2a, L0x5555552e2c, L0x5555552e2e] [1610@sint16, 11491@sint16, (-129)@sint16, (-921)@sint16, 1708@sint16, 12191@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e30, L0x5555552e32, L0x5555552e34, L0x5555552e36, L0x5555552e38, L0x5555552e3a, L0x5555552e3c, L0x5555552e3e] [2274@sint16, 16231@sint16, 2190@sint16, 15631@sint16, 0@sint16, 0@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e40, L0x5555552e42, L0x5555552e44, L0x5555552e46, L0x5555552e48, L0x5555552e4a, L0x5555552e4c, L0x5555552e4e] [(-1815)@sint16, (-12954)@sint16, (-6)@sint16, (-43)@sint16, (-129)@sint16, (-921)@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e50, L0x5555552e52, L0x5555552e54, L0x5555552e56, L0x5555552e58, L0x5555552e5a, L0x5555552e5c, L0x5555552e5e] [(-1)@sint16, (-7)@sint16, 956@sint16, 6823@sint16, 0@sint16, 0@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e60, L0x5555552e62, L0x5555552e64, L0x5555552e66, L0x5555552e68, L0x5555552e6a, L0x5555552e6c, L0x5555552e6e] [(-2274)@sint16, (-16231)@sint16, 1708@sint16, 12191@sint16, (-1095)@sint16, (-7815)@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e70, L0x5555552e72, L0x5555552e74, L0x5555552e76, L0x5555552e78, L0x5555552e7a, L0x5555552e7c, L0x5555552e7e] [1815@sint16, 12954@sint16, 258@sint16, 1841@sint16, 0@sint16, 0@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e80, L0x5555552e82, L0x5555552e84, L0x5555552e86, L0x5555552e88, L0x5555552e8a, L0x5555552e8c, L0x5555552e8e] [(-2113)@sint16, (-15081)@sint16, (-1095)@sint16, (-7815)@sint16, (-6)@sint16, (-43)@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552e90, L0x5555552e92, L0x5555552e94, L0x5555552e96, L0x5555552e98, L0x5555552e9a, L0x5555552e9c, L0x5555552e9e] [2113@sint16, 15081@sint16, 12@sint16, 86@sint16, 0@sint16, 0@sint16, 4591@sint16, 15631@sint16];
mov [L0x5555552ea0, L0x5555552ea2, L0x5555552ea4, L0x5555552ea6, L0x5555552ea8, L0x5555552eaa, L0x5555552eac, L0x5555552eae] [4591@sint16, 7@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16];
mov [L0x5555552eb0, L0x5555552eb2, L0x5555552eb4, L0x5555552eb6, L0x5555552eb8, L0x5555552eba, L0x5555552ebc, L0x5555552ebe] [(-27)@sint16, (-193)@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16, 0@sint16];
mov [L0x5555552ec0, L0x5555552ec2, L0x5555552ec4, L0x5555552ec6, L0x5555552ec8, L0x5555552eca, L0x5555552ecc, L0x5555552ece] [4591@sint16, 4591@sint16, 4591@sint16, 4591@sint16, 4591@sint16, 4591@sint16, 4591@sint16, 4591@sint16];
mov [L0x5555552ed0, L0x5555552ed2, L0x5555552ed4, L0x5555552ed6, L0x5555552ed8, L0x5555552eda, L0x5555552edc, L0x5555552ede] [2295@sint16, 2295@sint16, 2295@sint16, 2295@sint16, 2295@sint16, 2295@sint16, 2295@sint16, 2295@sint16];
mov [L0x5555552ee0, L0x5555552ee2, L0x5555552ee4, L0x5555552ee6, L0x5555552ee8, L0x5555552eea, L0x5555552eec, L0x5555552eee] [(-2295)@sint16, (-2295)@sint16, (-2295)@sint16, (-2295)@sint16, (-2295)@sint16, (-2295)@sint16, (-2295)@sint16, (-2295)@sint16];

mov [L0x7fffffda30, L0x7fffffda32, L0x7fffffda34, L0x7fffffda36, L0x7fffffda38, L0x7fffffda3a, L0x7fffffda3c, L0x7fffffda3e] [arr0000, arr0001, arr0002, arr0003, arr0004, arr0005, arr0006, arr0007];
mov [L0x7fffffda40, L0x7fffffda42, L0x7fffffda44, L0x7fffffda46, L0x7fffffda48, L0x7fffffda4a, L0x7fffffda4c, L0x7fffffda4e] [arr0010, arr0011, arr0012, arr0013, arr0014, arr0015, arr0016, arr0017];
mov [L0x7fffffda50, L0x7fffffda52, L0x7fffffda54, L0x7fffffda56, L0x7fffffda58, L0x7fffffda5a, L0x7fffffda5c, L0x7fffffda5e] [arr0020, arr0021, arr0022, arr0023, arr0024, arr0025, arr0026, arr0027];
mov [L0x7fffffda60, L0x7fffffda62, L0x7fffffda64, L0x7fffffda66, L0x7fffffda68, L0x7fffffda6a, L0x7fffffda6c, L0x7fffffda6e] [arr0030, arr0031, arr0032, arr0033, arr0034, arr0035, arr0036, arr0037];
mov [L0x7fffffda70, L0x7fffffda72, L0x7fffffda74, L0x7fffffda76, L0x7fffffda78, L0x7fffffda7a, L0x7fffffda7c, L0x7fffffda7e] [arr0040, arr0041, arr0042, arr0043, arr0044, arr0045, arr0046, arr0047];
mov [L0x7fffffda80, L0x7fffffda82, L0x7fffffda84, L0x7fffffda86, L0x7fffffda88, L0x7fffffda8a, L0x7fffffda8c, L0x7fffffda8e] [arr0050, arr0051, arr0052, arr0053, arr0054, arr0055, arr0056, arr0057];
mov [L0x7fffffda90, L0x7fffffda92, L0x7fffffda94, L0x7fffffda96, L0x7fffffda98, L0x7fffffda9a, L0x7fffffda9c, L0x7fffffda9e] [arr0060, arr0061, arr0062, arr0063, arr0064, arr0065, arr0066, arr0067];
mov [L0x7fffffdaa0, L0x7fffffdaa2, L0x7fffffdaa4, L0x7fffffdaa6, L0x7fffffdaa8, L0x7fffffdaaa, L0x7fffffdaac, L0x7fffffdaae] [arr0070, arr0071, arr0072, arr0073, arr0074, arr0075, arr0076, arr0077];
mov [L0x7fffffdab0, L0x7fffffdab2, L0x7fffffdab4, L0x7fffffdab6, L0x7fffffdab8, L0x7fffffdaba, L0x7fffffdabc, L0x7fffffdabe] [arr0080, arr0081, arr0082, arr0083, arr0084, arr0085, arr0086, arr0087];
mov [L0x7fffffdac0, L0x7fffffdac2, L0x7fffffdac4, L0x7fffffdac6, L0x7fffffdac8, L0x7fffffdaca, L0x7fffffdacc, L0x7fffffdace] [arr0100, arr0101, arr0102, arr0103, arr0104, arr0105, arr0106, arr0107];
mov [L0x7fffffdad0, L0x7fffffdad2, L0x7fffffdad4, L0x7fffffdad6, L0x7fffffdad8, L0x7fffffdada, L0x7fffffdadc, L0x7fffffdade] [arr0110, arr0111, arr0112, arr0113, arr0114, arr0115, arr0116, arr0117];
mov [L0x7fffffdae0, L0x7fffffdae2, L0x7fffffdae4, L0x7fffffdae6, L0x7fffffdae8, L0x7fffffdaea, L0x7fffffdaec, L0x7fffffdaee] [arr0120, arr0121, arr0122, arr0123, arr0124, arr0125, arr0126, arr0127];
mov [L0x7fffffdaf0, L0x7fffffdaf2, L0x7fffffdaf4, L0x7fffffdaf6, L0x7fffffdaf8, L0x7fffffdafa, L0x7fffffdafc, L0x7fffffdafe] [arr0130, arr0131, arr0132, arr0133, arr0134, arr0135, arr0136, arr0137];
mov [L0x7fffffdb00, L0x7fffffdb02, L0x7fffffdb04, L0x7fffffdb06, L0x7fffffdb08, L0x7fffffdb0a, L0x7fffffdb0c, L0x7fffffdb0e] [arr0140, arr0141, arr0142, arr0143, arr0144, arr0145, arr0146, arr0147];
mov [L0x7fffffdb10, L0x7fffffdb12, L0x7fffffdb14, L0x7fffffdb16, L0x7fffffdb18, L0x7fffffdb1a, L0x7fffffdb1c, L0x7fffffdb1e] [arr0150, arr0151, arr0152, arr0153, arr0154, arr0155, arr0156, arr0157];
mov [L0x7fffffdb20, L0x7fffffdb22, L0x7fffffdb24, L0x7fffffdb26, L0x7fffffdb28, L0x7fffffdb2a, L0x7fffffdb2c, L0x7fffffdb2e] [arr0160, arr0161, arr0162, arr0163, arr0164, arr0165, arr0166, arr0167];
mov [L0x7fffffdb30, L0x7fffffdb32, L0x7fffffdb34, L0x7fffffdb36, L0x7fffffdb38, L0x7fffffdb3a, L0x7fffffdb3c, L0x7fffffdb3e] [arr0170, arr0171, arr0172, arr0173, arr0174, arr0175, arr0176, arr0177];
mov [L0x7fffffdb40, L0x7fffffdb42, L0x7fffffdb44, L0x7fffffdb46, L0x7fffffdb48, L0x7fffffdb4a, L0x7fffffdb4c, L0x7fffffdb4e] [arr0180, arr0181, arr0182, arr0183, arr0184, arr0185, arr0186, arr0187];
mov [L0x7fffffdb50, L0x7fffffdb52, L0x7fffffdb54, L0x7fffffdb56, L0x7fffffdb58, L0x7fffffdb5a, L0x7fffffdb5c, L0x7fffffdb5e] [arr1000, arr1001, arr1002, arr1003, arr1004, arr1005, arr1006, arr1007];
mov [L0x7fffffdb60, L0x7fffffdb62, L0x7fffffdb64, L0x7fffffdb66, L0x7fffffdb68, L0x7fffffdb6a, L0x7fffffdb6c, L0x7fffffdb6e] [arr1010, arr1011, arr1012, arr1013, arr1014, arr1015, arr1016, arr1017];
mov [L0x7fffffdb70, L0x7fffffdb72, L0x7fffffdb74, L0x7fffffdb76, L0x7fffffdb78, L0x7fffffdb7a, L0x7fffffdb7c, L0x7fffffdb7e] [arr1020, arr1021, arr1022, arr1023, arr1024, arr1025, arr1026, arr1027];
mov [L0x7fffffdb80, L0x7fffffdb82, L0x7fffffdb84, L0x7fffffdb86, L0x7fffffdb88, L0x7fffffdb8a, L0x7fffffdb8c, L0x7fffffdb8e] [arr1030, arr1031, arr1032, arr1033, arr1034, arr1035, arr1036, arr1037];
mov [L0x7fffffdb90, L0x7fffffdb92, L0x7fffffdb94, L0x7fffffdb96, L0x7fffffdb98, L0x7fffffdb9a, L0x7fffffdb9c, L0x7fffffdb9e] [arr1040, arr1041, arr1042, arr1043, arr1044, arr1045, arr1046, arr1047];
mov [L0x7fffffdba0, L0x7fffffdba2, L0x7fffffdba4, L0x7fffffdba6, L0x7fffffdba8, L0x7fffffdbaa, L0x7fffffdbac, L0x7fffffdbae] [arr1050, arr1051, arr1052, arr1053, arr1054, arr1055, arr1056, arr1057];
mov [L0x7fffffdbb0, L0x7fffffdbb2, L0x7fffffdbb4, L0x7fffffdbb6, L0x7fffffdbb8, L0x7fffffdbba, L0x7fffffdbbc, L0x7fffffdbbe] [arr1060, arr1061, arr1062, arr1063, arr1064, arr1065, arr1066, arr1067];
mov [L0x7fffffdbc0, L0x7fffffdbc2, L0x7fffffdbc4, L0x7fffffdbc6, L0x7fffffdbc8, L0x7fffffdbca, L0x7fffffdbcc, L0x7fffffdbce] [arr1070, arr1071, arr1072, arr1073, arr1074, arr1075, arr1076, arr1077];
mov [L0x7fffffdbd0, L0x7fffffdbd2, L0x7fffffdbd4, L0x7fffffdbd6, L0x7fffffdbd8, L0x7fffffdbda, L0x7fffffdbdc, L0x7fffffdbde] [arr1080, arr1081, arr1082, arr1083, arr1084, arr1085, arr1086, arr1087];
mov [L0x7fffffdbe0, L0x7fffffdbe2, L0x7fffffdbe4, L0x7fffffdbe6, L0x7fffffdbe8, L0x7fffffdbea, L0x7fffffdbec, L0x7fffffdbee] [arr1100, arr1101, arr1102, arr1103, arr1104, arr1105, arr1106, arr1107];
mov [L0x7fffffdbf0, L0x7fffffdbf2, L0x7fffffdbf4, L0x7fffffdbf6, L0x7fffffdbf8, L0x7fffffdbfa, L0x7fffffdbfc, L0x7fffffdbfe] [arr1110, arr1111, arr1112, arr1113, arr1114, arr1115, arr1116, arr1117];
mov [L0x7fffffdc00, L0x7fffffdc02, L0x7fffffdc04, L0x7fffffdc06, L0x7fffffdc08, L0x7fffffdc0a, L0x7fffffdc0c, L0x7fffffdc0e] [arr1120, arr1121, arr1122, arr1123, arr1124, arr1125, arr1126, arr1127];
mov [L0x7fffffdc10, L0x7fffffdc12, L0x7fffffdc14, L0x7fffffdc16, L0x7fffffdc18, L0x7fffffdc1a, L0x7fffffdc1c, L0x7fffffdc1e] [arr1130, arr1131, arr1132, arr1133, arr1134, arr1135, arr1136, arr1137];
mov [L0x7fffffdc20, L0x7fffffdc22, L0x7fffffdc24, L0x7fffffdc26, L0x7fffffdc28, L0x7fffffdc2a, L0x7fffffdc2c, L0x7fffffdc2e] [arr1140, arr1141, arr1142, arr1143, arr1144, arr1145, arr1146, arr1147];
mov [L0x7fffffdc30, L0x7fffffdc32, L0x7fffffdc34, L0x7fffffdc36, L0x7fffffdc38, L0x7fffffdc3a, L0x7fffffdc3c, L0x7fffffdc3e] [arr1150, arr1151, arr1152, arr1153, arr1154, arr1155, arr1156, arr1157];
mov [L0x7fffffdc40, L0x7fffffdc42, L0x7fffffdc44, L0x7fffffdc46, L0x7fffffdc48, L0x7fffffdc4a, L0x7fffffdc4c, L0x7fffffdc4e] [arr1160, arr1161, arr1162, arr1163, arr1164, arr1165, arr1166, arr1167];
mov [L0x7fffffdc50, L0x7fffffdc52, L0x7fffffdc54, L0x7fffffdc56, L0x7fffffdc58, L0x7fffffdc5a, L0x7fffffdc5c, L0x7fffffdc5e] [arr1170, arr1171, arr1172, arr1173, arr1174, arr1175, arr1176, arr1177];
mov [L0x7fffffdc60, L0x7fffffdc62, L0x7fffffdc64, L0x7fffffdc66, L0x7fffffdc68, L0x7fffffdc6a, L0x7fffffdc6c, L0x7fffffdc6e] [arr1180, arr1181, arr1182, arr1183, arr1184, arr1185, arr1186, arr1187];
mov [L0x7fffffdc70, L0x7fffffdc72, L0x7fffffdc74, L0x7fffffdc76, L0x7fffffdc78, L0x7fffffdc7a, L0x7fffffdc7c, L0x7fffffdc7e] [arr2000, arr2001, arr2002, arr2003, arr2004, arr2005, arr2006, arr2007];
mov [L0x7fffffdc80, L0x7fffffdc82, L0x7fffffdc84, L0x7fffffdc86, L0x7fffffdc88, L0x7fffffdc8a, L0x7fffffdc8c, L0x7fffffdc8e] [arr2010, arr2011, arr2012, arr2013, arr2014, arr2015, arr2016, arr2017];
mov [L0x7fffffdc90, L0x7fffffdc92, L0x7fffffdc94, L0x7fffffdc96, L0x7fffffdc98, L0x7fffffdc9a, L0x7fffffdc9c, L0x7fffffdc9e] [arr2020, arr2021, arr2022, arr2023, arr2024, arr2025, arr2026, arr2027];
mov [L0x7fffffdca0, L0x7fffffdca2, L0x7fffffdca4, L0x7fffffdca6, L0x7fffffdca8, L0x7fffffdcaa, L0x7fffffdcac, L0x7fffffdcae] [arr2030, arr2031, arr2032, arr2033, arr2034, arr2035, arr2036, arr2037];
mov [L0x7fffffdcb0, L0x7fffffdcb2, L0x7fffffdcb4, L0x7fffffdcb6, L0x7fffffdcb8, L0x7fffffdcba, L0x7fffffdcbc, L0x7fffffdcbe] [arr2040, arr2041, arr2042, arr2043, arr2044, arr2045, arr2046, arr2047];
mov [L0x7fffffdcc0, L0x7fffffdcc2, L0x7fffffdcc4, L0x7fffffdcc6, L0x7fffffdcc8, L0x7fffffdcca, L0x7fffffdccc, L0x7fffffdcce] [arr2050, arr2051, arr2052, arr2053, arr2054, arr2055, arr2056, arr2057];
mov [L0x7fffffdcd0, L0x7fffffdcd2, L0x7fffffdcd4, L0x7fffffdcd6, L0x7fffffdcd8, L0x7fffffdcda, L0x7fffffdcdc, L0x7fffffdcde] [arr2060, arr2061, arr2062, arr2063, arr2064, arr2065, arr2066, arr2067];
mov [L0x7fffffdce0, L0x7fffffdce2, L0x7fffffdce4, L0x7fffffdce6, L0x7fffffdce8, L0x7fffffdcea, L0x7fffffdcec, L0x7fffffdcee] [arr2070, arr2071, arr2072, arr2073, arr2074, arr2075, arr2076, arr2077];
mov [L0x7fffffdcf0, L0x7fffffdcf2, L0x7fffffdcf4, L0x7fffffdcf6, L0x7fffffdcf8, L0x7fffffdcfa, L0x7fffffdcfc, L0x7fffffdcfe] [arr2080, arr2081, arr2082, arr2083, arr2084, arr2085, arr2086, arr2087];
mov [L0x7fffffdd00, L0x7fffffdd02, L0x7fffffdd04, L0x7fffffdd06, L0x7fffffdd08, L0x7fffffdd0a, L0x7fffffdd0c, L0x7fffffdd0e] [arr2100, arr2101, arr2102, arr2103, arr2104, arr2105, arr2106, arr2107];
mov [L0x7fffffdd10, L0x7fffffdd12, L0x7fffffdd14, L0x7fffffdd16, L0x7fffffdd18, L0x7fffffdd1a, L0x7fffffdd1c, L0x7fffffdd1e] [arr2110, arr2111, arr2112, arr2113, arr2114, arr2115, arr2116, arr2117];
mov [L0x7fffffdd20, L0x7fffffdd22, L0x7fffffdd24, L0x7fffffdd26, L0x7fffffdd28, L0x7fffffdd2a, L0x7fffffdd2c, L0x7fffffdd2e] [arr2120, arr2121, arr2122, arr2123, arr2124, arr2125, arr2126, arr2127];
mov [L0x7fffffdd30, L0x7fffffdd32, L0x7fffffdd34, L0x7fffffdd36, L0x7fffffdd38, L0x7fffffdd3a, L0x7fffffdd3c, L0x7fffffdd3e] [arr2130, arr2131, arr2132, arr2133, arr2134, arr2135, arr2136, arr2137];
mov [L0x7fffffdd40, L0x7fffffdd42, L0x7fffffdd44, L0x7fffffdd46, L0x7fffffdd48, L0x7fffffdd4a, L0x7fffffdd4c, L0x7fffffdd4e] [arr2140, arr2141, arr2142, arr2143, arr2144, arr2145, arr2146, arr2147];
mov [L0x7fffffdd50, L0x7fffffdd52, L0x7fffffdd54, L0x7fffffdd56, L0x7fffffdd58, L0x7fffffdd5a, L0x7fffffdd5c, L0x7fffffdd5e] [arr2150, arr2151, arr2152, arr2153, arr2154, arr2155, arr2156, arr2157];
mov [L0x7fffffdd60, L0x7fffffdd62, L0x7fffffdd64, L0x7fffffdd66, L0x7fffffdd68, L0x7fffffdd6a, L0x7fffffdd6c, L0x7fffffdd6e] [arr2160, arr2161, arr2162, arr2163, arr2164, arr2165, arr2166, arr2167];
mov [L0x7fffffdd70, L0x7fffffdd72, L0x7fffffdd74, L0x7fffffdd76, L0x7fffffdd78, L0x7fffffdd7a, L0x7fffffdd7c, L0x7fffffdd7e] [arr2170, arr2171, arr2172, arr2173, arr2174, arr2175, arr2176, arr2177];
mov [L0x7fffffdd80, L0x7fffffdd82, L0x7fffffdd84, L0x7fffffdd86, L0x7fffffdd88, L0x7fffffdd8a, L0x7fffffdd8c, L0x7fffffdd8e] [arr2180, arr2181, arr2182, arr2183, arr2184, arr2185, arr2186, arr2187];
mov [L0x7fffffdd90, L0x7fffffdd92, L0x7fffffdd94, L0x7fffffdd96, L0x7fffffdd98, L0x7fffffdd9a, L0x7fffffdd9c, L0x7fffffdd9e] [arr3000, arr3001, arr3002, arr3003, arr3004, arr3005, arr3006, arr3007];
mov [L0x7fffffdda0, L0x7fffffdda2, L0x7fffffdda4, L0x7fffffdda6, L0x7fffffdda8, L0x7fffffddaa, L0x7fffffddac, L0x7fffffddae] [arr3010, arr3011, arr3012, arr3013, arr3014, arr3015, arr3016, arr3017];
mov [L0x7fffffddb0, L0x7fffffddb2, L0x7fffffddb4, L0x7fffffddb6, L0x7fffffddb8, L0x7fffffddba, L0x7fffffddbc, L0x7fffffddbe] [arr3020, arr3021, arr3022, arr3023, arr3024, arr3025, arr3026, arr3027];
mov [L0x7fffffddc0, L0x7fffffddc2, L0x7fffffddc4, L0x7fffffddc6, L0x7fffffddc8, L0x7fffffddca, L0x7fffffddcc, L0x7fffffddce] [arr3030, arr3031, arr3032, arr3033, arr3034, arr3035, arr3036, arr3037];
mov [L0x7fffffddd0, L0x7fffffddd2, L0x7fffffddd4, L0x7fffffddd6, L0x7fffffddd8, L0x7fffffddda, L0x7fffffdddc, L0x7fffffddde] [arr3040, arr3041, arr3042, arr3043, arr3044, arr3045, arr3046, arr3047];
mov [L0x7fffffdde0, L0x7fffffdde2, L0x7fffffdde4, L0x7fffffdde6, L0x7fffffdde8, L0x7fffffddea, L0x7fffffddec, L0x7fffffddee] [arr3050, arr3051, arr3052, arr3053, arr3054, arr3055, arr3056, arr3057];
mov [L0x7fffffddf0, L0x7fffffddf2, L0x7fffffddf4, L0x7fffffddf6, L0x7fffffddf8, L0x7fffffddfa, L0x7fffffddfc, L0x7fffffddfe] [arr3060, arr3061, arr3062, arr3063, arr3064, arr3065, arr3066, arr3067];
mov [L0x7fffffde00, L0x7fffffde02, L0x7fffffde04, L0x7fffffde06, L0x7fffffde08, L0x7fffffde0a, L0x7fffffde0c, L0x7fffffde0e] [arr3070, arr3071, arr3072, arr3073, arr3074, arr3075, arr3076, arr3077];
mov [L0x7fffffde10, L0x7fffffde12, L0x7fffffde14, L0x7fffffde16, L0x7fffffde18, L0x7fffffde1a, L0x7fffffde1c, L0x7fffffde1e] [arr3080, arr3081, arr3082, arr3083, arr3084, arr3085, arr3086, arr3087];
mov [L0x7fffffde20, L0x7fffffde22, L0x7fffffde24, L0x7fffffde26, L0x7fffffde28, L0x7fffffde2a, L0x7fffffde2c, L0x7fffffde2e] [arr3100, arr3101, arr3102, arr3103, arr3104, arr3105, arr3106, arr3107];
mov [L0x7fffffde30, L0x7fffffde32, L0x7fffffde34, L0x7fffffde36, L0x7fffffde38, L0x7fffffde3a, L0x7fffffde3c, L0x7fffffde3e] [arr3110, arr3111, arr3112, arr3113, arr3114, arr3115, arr3116, arr3117];
mov [L0x7fffffde40, L0x7fffffde42, L0x7fffffde44, L0x7fffffde46, L0x7fffffde48, L0x7fffffde4a, L0x7fffffde4c, L0x7fffffde4e] [arr3120, arr3121, arr3122, arr3123, arr3124, arr3125, arr3126, arr3127];
mov [L0x7fffffde50, L0x7fffffde52, L0x7fffffde54, L0x7fffffde56, L0x7fffffde58, L0x7fffffde5a, L0x7fffffde5c, L0x7fffffde5e] [arr3130, arr3131, arr3132, arr3133, arr3134, arr3135, arr3136, arr3137];
mov [L0x7fffffde60, L0x7fffffde62, L0x7fffffde64, L0x7fffffde66, L0x7fffffde68, L0x7fffffde6a, L0x7fffffde6c, L0x7fffffde6e] [arr3140, arr3141, arr3142, arr3143, arr3144, arr3145, arr3146, arr3147];
mov [L0x7fffffde70, L0x7fffffde72, L0x7fffffde74, L0x7fffffde76, L0x7fffffde78, L0x7fffffde7a, L0x7fffffde7c, L0x7fffffde7e] [arr3150, arr3151, arr3152, arr3153, arr3154, arr3155, arr3156, arr3157];
mov [L0x7fffffde80, L0x7fffffde82, L0x7fffffde84, L0x7fffffde86, L0x7fffffde88, L0x7fffffde8a, L0x7fffffde8c, L0x7fffffde8e] [arr3160, arr3161, arr3162, arr3163, arr3164, arr3165, arr3166, arr3167];
mov [L0x7fffffde90, L0x7fffffde92, L0x7fffffde94, L0x7fffffde96, L0x7fffffde98, L0x7fffffde9a, L0x7fffffde9c, L0x7fffffde9e] [arr3170, arr3171, arr3172, arr3173, arr3174, arr3175, arr3176, arr3177];
mov [L0x7fffffdea0, L0x7fffffdea2, L0x7fffffdea4, L0x7fffffdea6, L0x7fffffdea8, L0x7fffffdeaa, L0x7fffffdeac, L0x7fffffdeae] [arr3180, arr3181, arr3182, arr3183, arr3184, arr3185, arr3186, arr3187];
mov [L0x7fffffdeb0, L0x7fffffdeb2, L0x7fffffdeb4, L0x7fffffdeb6, L0x7fffffdeb8, L0x7fffffdeba, L0x7fffffdebc, L0x7fffffdebe] [arr4000, arr4001, arr4002, arr4003, arr4004, arr4005, arr4006, arr4007];
mov [L0x7fffffdec0, L0x7fffffdec2, L0x7fffffdec4, L0x7fffffdec6, L0x7fffffdec8, L0x7fffffdeca, L0x7fffffdecc, L0x7fffffdece] [arr4010, arr4011, arr4012, arr4013, arr4014, arr4015, arr4016, arr4017];
mov [L0x7fffffded0, L0x7fffffded2, L0x7fffffded4, L0x7fffffded6, L0x7fffffded8, L0x7fffffdeda, L0x7fffffdedc, L0x7fffffdede] [arr4020, arr4021, arr4022, arr4023, arr4024, arr4025, arr4026, arr4027];
mov [L0x7fffffdee0, L0x7fffffdee2, L0x7fffffdee4, L0x7fffffdee6, L0x7fffffdee8, L0x7fffffdeea, L0x7fffffdeec, L0x7fffffdeee] [arr4030, arr4031, arr4032, arr4033, arr4034, arr4035, arr4036, arr4037];
mov [L0x7fffffdef0, L0x7fffffdef2, L0x7fffffdef4, L0x7fffffdef6, L0x7fffffdef8, L0x7fffffdefa, L0x7fffffdefc, L0x7fffffdefe] [arr4040, arr4041, arr4042, arr4043, arr4044, arr4045, arr4046, arr4047];
mov [L0x7fffffdf00, L0x7fffffdf02, L0x7fffffdf04, L0x7fffffdf06, L0x7fffffdf08, L0x7fffffdf0a, L0x7fffffdf0c, L0x7fffffdf0e] [arr4050, arr4051, arr4052, arr4053, arr4054, arr4055, arr4056, arr4057];
mov [L0x7fffffdf10, L0x7fffffdf12, L0x7fffffdf14, L0x7fffffdf16, L0x7fffffdf18, L0x7fffffdf1a, L0x7fffffdf1c, L0x7fffffdf1e] [arr4060, arr4061, arr4062, arr4063, arr4064, arr4065, arr4066, arr4067];
mov [L0x7fffffdf20, L0x7fffffdf22, L0x7fffffdf24, L0x7fffffdf26, L0x7fffffdf28, L0x7fffffdf2a, L0x7fffffdf2c, L0x7fffffdf2e] [arr4070, arr4071, arr4072, arr4073, arr4074, arr4075, arr4076, arr4077];
mov [L0x7fffffdf30, L0x7fffffdf32, L0x7fffffdf34, L0x7fffffdf36, L0x7fffffdf38, L0x7fffffdf3a, L0x7fffffdf3c, L0x7fffffdf3e] [arr4080, arr4081, arr4082, arr4083, arr4084, arr4085, arr4086, arr4087];
mov [L0x7fffffdf40, L0x7fffffdf42, L0x7fffffdf44, L0x7fffffdf46, L0x7fffffdf48, L0x7fffffdf4a, L0x7fffffdf4c, L0x7fffffdf4e] [arr4100, arr4101, arr4102, arr4103, arr4104, arr4105, arr4106, arr4107];
mov [L0x7fffffdf50, L0x7fffffdf52, L0x7fffffdf54, L0x7fffffdf56, L0x7fffffdf58, L0x7fffffdf5a, L0x7fffffdf5c, L0x7fffffdf5e] [arr4110, arr4111, arr4112, arr4113, arr4114, arr4115, arr4116, arr4117];
mov [L0x7fffffdf60, L0x7fffffdf62, L0x7fffffdf64, L0x7fffffdf66, L0x7fffffdf68, L0x7fffffdf6a, L0x7fffffdf6c, L0x7fffffdf6e] [arr4120, arr4121, arr4122, arr4123, arr4124, arr4125, arr4126, arr4127];
mov [L0x7fffffdf70, L0x7fffffdf72, L0x7fffffdf74, L0x7fffffdf76, L0x7fffffdf78, L0x7fffffdf7a, L0x7fffffdf7c, L0x7fffffdf7e] [arr4130, arr4131, arr4132, arr4133, arr4134, arr4135, arr4136, arr4137];
mov [L0x7fffffdf80, L0x7fffffdf82, L0x7fffffdf84, L0x7fffffdf86, L0x7fffffdf88, L0x7fffffdf8a, L0x7fffffdf8c, L0x7fffffdf8e] [arr4140, arr4141, arr4142, arr4143, arr4144, arr4145, arr4146, arr4147];
mov [L0x7fffffdf90, L0x7fffffdf92, L0x7fffffdf94, L0x7fffffdf96, L0x7fffffdf98, L0x7fffffdf9a, L0x7fffffdf9c, L0x7fffffdf9e] [arr4150, arr4151, arr4152, arr4153, arr4154, arr4155, arr4156, arr4157];
mov [L0x7fffffdfa0, L0x7fffffdfa2, L0x7fffffdfa4, L0x7fffffdfa6, L0x7fffffdfa8, L0x7fffffdfaa, L0x7fffffdfac, L0x7fffffdfae] [arr4160, arr4161, arr4162, arr4163, arr4164, arr4165, arr4166, arr4167];
mov [L0x7fffffdfb0, L0x7fffffdfb2, L0x7fffffdfb4, L0x7fffffdfb6, L0x7fffffdfb8, L0x7fffffdfba, L0x7fffffdfbc, L0x7fffffdfbe] [arr4170, arr4171, arr4172, arr4173, arr4174, arr4175, arr4176, arr4177];
mov [L0x7fffffdfc0, L0x7fffffdfc2, L0x7fffffdfc4, L0x7fffffdfc6, L0x7fffffdfc8, L0x7fffffdfca, L0x7fffffdfcc, L0x7fffffdfce] [arr4180, arr4181, arr4182, arr4183, arr4184, arr4185, arr4186, arr4187];
mov [L0x7fffffdfd0, L0x7fffffdfd2, L0x7fffffdfd4, L0x7fffffdfd6, L0x7fffffdfd8, L0x7fffffdfda, L0x7fffffdfdc, L0x7fffffdfde] [arr5000, arr5001, arr5002, arr5003, arr5004, arr5005, arr5006, arr5007];
mov [L0x7fffffdfe0, L0x7fffffdfe2, L0x7fffffdfe4, L0x7fffffdfe6, L0x7fffffdfe8, L0x7fffffdfea, L0x7fffffdfec, L0x7fffffdfee] [arr5010, arr5011, arr5012, arr5013, arr5014, arr5015, arr5016, arr5017];
mov [L0x7fffffdff0, L0x7fffffdff2, L0x7fffffdff4, L0x7fffffdff6, L0x7fffffdff8, L0x7fffffdffa, L0x7fffffdffc, L0x7fffffdffe] [arr5020, arr5021, arr5022, arr5023, arr5024, arr5025, arr5026, arr5027];
mov [L0x7fffffe000, L0x7fffffe002, L0x7fffffe004, L0x7fffffe006, L0x7fffffe008, L0x7fffffe00a, L0x7fffffe00c, L0x7fffffe00e] [arr5030, arr5031, arr5032, arr5033, arr5034, arr5035, arr5036, arr5037];
mov [L0x7fffffe010, L0x7fffffe012, L0x7fffffe014, L0x7fffffe016, L0x7fffffe018, L0x7fffffe01a, L0x7fffffe01c, L0x7fffffe01e] [arr5040, arr5041, arr5042, arr5043, arr5044, arr5045, arr5046, arr5047];
mov [L0x7fffffe020, L0x7fffffe022, L0x7fffffe024, L0x7fffffe026, L0x7fffffe028, L0x7fffffe02a, L0x7fffffe02c, L0x7fffffe02e] [arr5050, arr5051, arr5052, arr5053, arr5054, arr5055, arr5056, arr5057];
mov [L0x7fffffe030, L0x7fffffe032, L0x7fffffe034, L0x7fffffe036, L0x7fffffe038, L0x7fffffe03a, L0x7fffffe03c, L0x7fffffe03e] [arr5060, arr5061, arr5062, arr5063, arr5064, arr5065, arr5066, arr5067];
mov [L0x7fffffe040, L0x7fffffe042, L0x7fffffe044, L0x7fffffe046, L0x7fffffe048, L0x7fffffe04a, L0x7fffffe04c, L0x7fffffe04e] [arr5070, arr5071, arr5072, arr5073, arr5074, arr5075, arr5076, arr5077];
mov [L0x7fffffe050, L0x7fffffe052, L0x7fffffe054, L0x7fffffe056, L0x7fffffe058, L0x7fffffe05a, L0x7fffffe05c, L0x7fffffe05e] [arr5080, arr5081, arr5082, arr5083, arr5084, arr5085, arr5086, arr5087];
mov [L0x7fffffe060, L0x7fffffe062, L0x7fffffe064, L0x7fffffe066, L0x7fffffe068, L0x7fffffe06a, L0x7fffffe06c, L0x7fffffe06e] [arr5100, arr5101, arr5102, arr5103, arr5104, arr5105, arr5106, arr5107];
mov [L0x7fffffe070, L0x7fffffe072, L0x7fffffe074, L0x7fffffe076, L0x7fffffe078, L0x7fffffe07a, L0x7fffffe07c, L0x7fffffe07e] [arr5110, arr5111, arr5112, arr5113, arr5114, arr5115, arr5116, arr5117];
mov [L0x7fffffe080, L0x7fffffe082, L0x7fffffe084, L0x7fffffe086, L0x7fffffe088, L0x7fffffe08a, L0x7fffffe08c, L0x7fffffe08e] [arr5120, arr5121, arr5122, arr5123, arr5124, arr5125, arr5126, arr5127];
mov [L0x7fffffe090, L0x7fffffe092, L0x7fffffe094, L0x7fffffe096, L0x7fffffe098, L0x7fffffe09a, L0x7fffffe09c, L0x7fffffe09e] [arr5130, arr5131, arr5132, arr5133, arr5134, arr5135, arr5136, arr5137];
mov [L0x7fffffe0a0, L0x7fffffe0a2, L0x7fffffe0a4, L0x7fffffe0a6, L0x7fffffe0a8, L0x7fffffe0aa, L0x7fffffe0ac, L0x7fffffe0ae] [arr5140, arr5141, arr5142, arr5143, arr5144, arr5145, arr5146, arr5147];
mov [L0x7fffffe0b0, L0x7fffffe0b2, L0x7fffffe0b4, L0x7fffffe0b6, L0x7fffffe0b8, L0x7fffffe0ba, L0x7fffffe0bc, L0x7fffffe0be] [arr5150, arr5151, arr5152, arr5153, arr5154, arr5155, arr5156, arr5157];
mov [L0x7fffffe0c0, L0x7fffffe0c2, L0x7fffffe0c4, L0x7fffffe0c6, L0x7fffffe0c8, L0x7fffffe0ca, L0x7fffffe0cc, L0x7fffffe0ce] [arr5160, arr5161, arr5162, arr5163, arr5164, arr5165, arr5166, arr5167];
mov [L0x7fffffe0d0, L0x7fffffe0d2, L0x7fffffe0d4, L0x7fffffe0d6, L0x7fffffe0d8, L0x7fffffe0da, L0x7fffffe0dc, L0x7fffffe0de] [arr5170, arr5171, arr5172, arr5173, arr5174, arr5175, arr5176, arr5177];
mov [L0x7fffffe0e0, L0x7fffffe0e2, L0x7fffffe0e4, L0x7fffffe0e6, L0x7fffffe0e8, L0x7fffffe0ea, L0x7fffffe0ec, L0x7fffffe0ee] [arr5180, arr5181, arr5182, arr5183, arr5184, arr5185, arr5186, arr5187];
mov [L0x7fffffe0f0, L0x7fffffe0f2, L0x7fffffe0f4, L0x7fffffe0f6, L0x7fffffe0f8, L0x7fffffe0fa, L0x7fffffe0fc, L0x7fffffe0fe] [arr6000, arr6001, arr6002, arr6003, arr6004, arr6005, arr6006, arr6007];
mov [L0x7fffffe100, L0x7fffffe102, L0x7fffffe104, L0x7fffffe106, L0x7fffffe108, L0x7fffffe10a, L0x7fffffe10c, L0x7fffffe10e] [arr6010, arr6011, arr6012, arr6013, arr6014, arr6015, arr6016, arr6017];
mov [L0x7fffffe110, L0x7fffffe112, L0x7fffffe114, L0x7fffffe116, L0x7fffffe118, L0x7fffffe11a, L0x7fffffe11c, L0x7fffffe11e] [arr6020, arr6021, arr6022, arr6023, arr6024, arr6025, arr6026, arr6027];
mov [L0x7fffffe120, L0x7fffffe122, L0x7fffffe124, L0x7fffffe126, L0x7fffffe128, L0x7fffffe12a, L0x7fffffe12c, L0x7fffffe12e] [arr6030, arr6031, arr6032, arr6033, arr6034, arr6035, arr6036, arr6037];
mov [L0x7fffffe130, L0x7fffffe132, L0x7fffffe134, L0x7fffffe136, L0x7fffffe138, L0x7fffffe13a, L0x7fffffe13c, L0x7fffffe13e] [arr6040, arr6041, arr6042, arr6043, arr6044, arr6045, arr6046, arr6047];
mov [L0x7fffffe140, L0x7fffffe142, L0x7fffffe144, L0x7fffffe146, L0x7fffffe148, L0x7fffffe14a, L0x7fffffe14c, L0x7fffffe14e] [arr6050, arr6051, arr6052, arr6053, arr6054, arr6055, arr6056, arr6057];
mov [L0x7fffffe150, L0x7fffffe152, L0x7fffffe154, L0x7fffffe156, L0x7fffffe158, L0x7fffffe15a, L0x7fffffe15c, L0x7fffffe15e] [arr6060, arr6061, arr6062, arr6063, arr6064, arr6065, arr6066, arr6067];
mov [L0x7fffffe160, L0x7fffffe162, L0x7fffffe164, L0x7fffffe166, L0x7fffffe168, L0x7fffffe16a, L0x7fffffe16c, L0x7fffffe16e] [arr6070, arr6071, arr6072, arr6073, arr6074, arr6075, arr6076, arr6077];
mov [L0x7fffffe170, L0x7fffffe172, L0x7fffffe174, L0x7fffffe176, L0x7fffffe178, L0x7fffffe17a, L0x7fffffe17c, L0x7fffffe17e] [arr6080, arr6081, arr6082, arr6083, arr6084, arr6085, arr6086, arr6087];
mov [L0x7fffffe180, L0x7fffffe182, L0x7fffffe184, L0x7fffffe186, L0x7fffffe188, L0x7fffffe18a, L0x7fffffe18c, L0x7fffffe18e] [arr6100, arr6101, arr6102, arr6103, arr6104, arr6105, arr6106, arr6107];
mov [L0x7fffffe190, L0x7fffffe192, L0x7fffffe194, L0x7fffffe196, L0x7fffffe198, L0x7fffffe19a, L0x7fffffe19c, L0x7fffffe19e] [arr6110, arr6111, arr6112, arr6113, arr6114, arr6115, arr6116, arr6117];
mov [L0x7fffffe1a0, L0x7fffffe1a2, L0x7fffffe1a4, L0x7fffffe1a6, L0x7fffffe1a8, L0x7fffffe1aa, L0x7fffffe1ac, L0x7fffffe1ae] [arr6120, arr6121, arr6122, arr6123, arr6124, arr6125, arr6126, arr6127];
mov [L0x7fffffe1b0, L0x7fffffe1b2, L0x7fffffe1b4, L0x7fffffe1b6, L0x7fffffe1b8, L0x7fffffe1ba, L0x7fffffe1bc, L0x7fffffe1be] [arr6130, arr6131, arr6132, arr6133, arr6134, arr6135, arr6136, arr6137];
mov [L0x7fffffe1c0, L0x7fffffe1c2, L0x7fffffe1c4, L0x7fffffe1c6, L0x7fffffe1c8, L0x7fffffe1ca, L0x7fffffe1cc, L0x7fffffe1ce] [arr6140, arr6141, arr6142, arr6143, arr6144, arr6145, arr6146, arr6147];
mov [L0x7fffffe1d0, L0x7fffffe1d2, L0x7fffffe1d4, L0x7fffffe1d6, L0x7fffffe1d8, L0x7fffffe1da, L0x7fffffe1dc, L0x7fffffe1de] [arr6150, arr6151, arr6152, arr6153, arr6154, arr6155, arr6156, arr6157];
mov [L0x7fffffe1e0, L0x7fffffe1e2, L0x7fffffe1e4, L0x7fffffe1e6, L0x7fffffe1e8, L0x7fffffe1ea, L0x7fffffe1ec, L0x7fffffe1ee] [arr6160, arr6161, arr6162, arr6163, arr6164, arr6165, arr6166, arr6167];
mov [L0x7fffffe1f0, L0x7fffffe1f2, L0x7fffffe1f4, L0x7fffffe1f6, L0x7fffffe1f8, L0x7fffffe1fa, L0x7fffffe1fc, L0x7fffffe1fe] [arr6170, arr6171, arr6172, arr6173, arr6174, arr6175, arr6176, arr6177];
mov [L0x7fffffe200, L0x7fffffe202, L0x7fffffe204, L0x7fffffe206, L0x7fffffe208, L0x7fffffe20a, L0x7fffffe20c, L0x7fffffe20e] [arr6180, arr6181, arr6182, arr6183, arr6184, arr6185, arr6186, arr6187];
mov [L0x7fffffe210, L0x7fffffe212, L0x7fffffe214, L0x7fffffe216, L0x7fffffe218, L0x7fffffe21a, L0x7fffffe21c, L0x7fffffe21e] [arr7000, arr7001, arr7002, arr7003, arr7004, arr7005, arr7006, arr7007];
mov [L0x7fffffe220, L0x7fffffe222, L0x7fffffe224, L0x7fffffe226, L0x7fffffe228, L0x7fffffe22a, L0x7fffffe22c, L0x7fffffe22e] [arr7010, arr7011, arr7012, arr7013, arr7014, arr7015, arr7016, arr7017];
mov [L0x7fffffe230, L0x7fffffe232, L0x7fffffe234, L0x7fffffe236, L0x7fffffe238, L0x7fffffe23a, L0x7fffffe23c, L0x7fffffe23e] [arr7020, arr7021, arr7022, arr7023, arr7024, arr7025, arr7026, arr7027];
mov [L0x7fffffe240, L0x7fffffe242, L0x7fffffe244, L0x7fffffe246, L0x7fffffe248, L0x7fffffe24a, L0x7fffffe24c, L0x7fffffe24e] [arr7030, arr7031, arr7032, arr7033, arr7034, arr7035, arr7036, arr7037];
mov [L0x7fffffe250, L0x7fffffe252, L0x7fffffe254, L0x7fffffe256, L0x7fffffe258, L0x7fffffe25a, L0x7fffffe25c, L0x7fffffe25e] [arr7040, arr7041, arr7042, arr7043, arr7044, arr7045, arr7046, arr7047];
mov [L0x7fffffe260, L0x7fffffe262, L0x7fffffe264, L0x7fffffe266, L0x7fffffe268, L0x7fffffe26a, L0x7fffffe26c, L0x7fffffe26e] [arr7050, arr7051, arr7052, arr7053, arr7054, arr7055, arr7056, arr7057];
mov [L0x7fffffe270, L0x7fffffe272, L0x7fffffe274, L0x7fffffe276, L0x7fffffe278, L0x7fffffe27a, L0x7fffffe27c, L0x7fffffe27e] [arr7060, arr7061, arr7062, arr7063, arr7064, arr7065, arr7066, arr7067];
mov [L0x7fffffe280, L0x7fffffe282, L0x7fffffe284, L0x7fffffe286, L0x7fffffe288, L0x7fffffe28a, L0x7fffffe28c, L0x7fffffe28e] [arr7070, arr7071, arr7072, arr7073, arr7074, arr7075, arr7076, arr7077];
mov [L0x7fffffe290, L0x7fffffe292, L0x7fffffe294, L0x7fffffe296, L0x7fffffe298, L0x7fffffe29a, L0x7fffffe29c, L0x7fffffe29e] [arr7080, arr7081, arr7082, arr7083, arr7084, arr7085, arr7086, arr7087];
mov [L0x7fffffe2a0, L0x7fffffe2a2, L0x7fffffe2a4, L0x7fffffe2a6, L0x7fffffe2a8, L0x7fffffe2aa, L0x7fffffe2ac, L0x7fffffe2ae] [arr7100, arr7101, arr7102, arr7103, arr7104, arr7105, arr7106, arr7107];
mov [L0x7fffffe2b0, L0x7fffffe2b2, L0x7fffffe2b4, L0x7fffffe2b6, L0x7fffffe2b8, L0x7fffffe2ba, L0x7fffffe2bc, L0x7fffffe2be] [arr7110, arr7111, arr7112, arr7113, arr7114, arr7115, arr7116, arr7117];
mov [L0x7fffffe2c0, L0x7fffffe2c2, L0x7fffffe2c4, L0x7fffffe2c6, L0x7fffffe2c8, L0x7fffffe2ca, L0x7fffffe2cc, L0x7fffffe2ce] [arr7120, arr7121, arr7122, arr7123, arr7124, arr7125, arr7126, arr7127];
mov [L0x7fffffe2d0, L0x7fffffe2d2, L0x7fffffe2d4, L0x7fffffe2d6, L0x7fffffe2d8, L0x7fffffe2da, L0x7fffffe2dc, L0x7fffffe2de] [arr7130, arr7131, arr7132, arr7133, arr7134, arr7135, arr7136, arr7137];
mov [L0x7fffffe2e0, L0x7fffffe2e2, L0x7fffffe2e4, L0x7fffffe2e6, L0x7fffffe2e8, L0x7fffffe2ea, L0x7fffffe2ec, L0x7fffffe2ee] [arr7140, arr7141, arr7142, arr7143, arr7144, arr7145, arr7146, arr7147];
mov [L0x7fffffe2f0, L0x7fffffe2f2, L0x7fffffe2f4, L0x7fffffe2f6, L0x7fffffe2f8, L0x7fffffe2fa, L0x7fffffe2fc, L0x7fffffe2fe] [arr7150, arr7151, arr7152, arr7153, arr7154, arr7155, arr7156, arr7157];
mov [L0x7fffffe300, L0x7fffffe302, L0x7fffffe304, L0x7fffffe306, L0x7fffffe308, L0x7fffffe30a, L0x7fffffe30c, L0x7fffffe30e] [arr7160, arr7161, arr7162, arr7163, arr7164, arr7165, arr7166, arr7167];
mov [L0x7fffffe310, L0x7fffffe312, L0x7fffffe314, L0x7fffffe316, L0x7fffffe318, L0x7fffffe31a, L0x7fffffe31c, L0x7fffffe31e] [arr7170, arr7171, arr7172, arr7173, arr7174, arr7175, arr7176, arr7177];
mov [L0x7fffffe320, L0x7fffffe322, L0x7fffffe324, L0x7fffffe326, L0x7fffffe328, L0x7fffffe32a, L0x7fffffe32c, L0x7fffffe32e] [arr7180, arr7181, arr7182, arr7183, arr7184, arr7185, arr7186, arr7187];
mov [L0x7fffffe330, L0x7fffffe332, L0x7fffffe334, L0x7fffffe336, L0x7fffffe338, L0x7fffffe33a, L0x7fffffe33c, L0x7fffffe33e] [arr8000, arr8001, arr8002, arr8003, arr8004, arr8005, arr8006, arr8007];
mov [L0x7fffffe340, L0x7fffffe342, L0x7fffffe344, L0x7fffffe346, L0x7fffffe348, L0x7fffffe34a, L0x7fffffe34c, L0x7fffffe34e] [arr8010, arr8011, arr8012, arr8013, arr8014, arr8015, arr8016, arr8017];
mov [L0x7fffffe350, L0x7fffffe352, L0x7fffffe354, L0x7fffffe356, L0x7fffffe358, L0x7fffffe35a, L0x7fffffe35c, L0x7fffffe35e] [arr8020, arr8021, arr8022, arr8023, arr8024, arr8025, arr8026, arr8027];
mov [L0x7fffffe360, L0x7fffffe362, L0x7fffffe364, L0x7fffffe366, L0x7fffffe368, L0x7fffffe36a, L0x7fffffe36c, L0x7fffffe36e] [arr8030, arr8031, arr8032, arr8033, arr8034, arr8035, arr8036, arr8037];
mov [L0x7fffffe370, L0x7fffffe372, L0x7fffffe374, L0x7fffffe376, L0x7fffffe378, L0x7fffffe37a, L0x7fffffe37c, L0x7fffffe37e] [arr8040, arr8041, arr8042, arr8043, arr8044, arr8045, arr8046, arr8047];
mov [L0x7fffffe380, L0x7fffffe382, L0x7fffffe384, L0x7fffffe386, L0x7fffffe388, L0x7fffffe38a, L0x7fffffe38c, L0x7fffffe38e] [arr8050, arr8051, arr8052, arr8053, arr8054, arr8055, arr8056, arr8057];
mov [L0x7fffffe390, L0x7fffffe392, L0x7fffffe394, L0x7fffffe396, L0x7fffffe398, L0x7fffffe39a, L0x7fffffe39c, L0x7fffffe39e] [arr8060, arr8061, arr8062, arr8063, arr8064, arr8065, arr8066, arr8067];
mov [L0x7fffffe3a0, L0x7fffffe3a2, L0x7fffffe3a4, L0x7fffffe3a6, L0x7fffffe3a8, L0x7fffffe3aa, L0x7fffffe3ac, L0x7fffffe3ae] [arr8070, arr8071, arr8072, arr8073, arr8074, arr8075, arr8076, arr8077];
mov [L0x7fffffe3b0, L0x7fffffe3b2, L0x7fffffe3b4, L0x7fffffe3b6, L0x7fffffe3b8, L0x7fffffe3ba, L0x7fffffe3bc, L0x7fffffe3be] [arr8080, arr8081, arr8082, arr8083, arr8084, arr8085, arr8086, arr8087];
mov [L0x7fffffe3c0, L0x7fffffe3c2, L0x7fffffe3c4, L0x7fffffe3c6, L0x7fffffe3c8, L0x7fffffe3ca, L0x7fffffe3cc, L0x7fffffe3ce] [arr8100, arr8101, arr8102, arr8103, arr8104, arr8105, arr8106, arr8107];
mov [L0x7fffffe3d0, L0x7fffffe3d2, L0x7fffffe3d4, L0x7fffffe3d6, L0x7fffffe3d8, L0x7fffffe3da, L0x7fffffe3dc, L0x7fffffe3de] [arr8110, arr8111, arr8112, arr8113, arr8114, arr8115, arr8116, arr8117];
mov [L0x7fffffe3e0, L0x7fffffe3e2, L0x7fffffe3e4, L0x7fffffe3e6, L0x7fffffe3e8, L0x7fffffe3ea, L0x7fffffe3ec, L0x7fffffe3ee] [arr8120, arr8121, arr8122, arr8123, arr8124, arr8125, arr8126, arr8127];
mov [L0x7fffffe3f0, L0x7fffffe3f2, L0x7fffffe3f4, L0x7fffffe3f6, L0x7fffffe3f8, L0x7fffffe3fa, L0x7fffffe3fc, L0x7fffffe3fe] [arr8130, arr8131, arr8132, arr8133, arr8134, arr8135, arr8136, arr8137];
mov [L0x7fffffe400, L0x7fffffe402, L0x7fffffe404, L0x7fffffe406, L0x7fffffe408, L0x7fffffe40a, L0x7fffffe40c, L0x7fffffe40e] [arr8140, arr8141, arr8142, arr8143, arr8144, arr8145, arr8146, arr8147];
mov [L0x7fffffe410, L0x7fffffe412, L0x7fffffe414, L0x7fffffe416, L0x7fffffe418, L0x7fffffe41a, L0x7fffffe41c, L0x7fffffe41e] [arr8150, arr8151, arr8152, arr8153, arr8154, arr8155, arr8156, arr8157];
mov [L0x7fffffe420, L0x7fffffe422, L0x7fffffe424, L0x7fffffe426, L0x7fffffe428, L0x7fffffe42a, L0x7fffffe42c, L0x7fffffe42e] [arr8160, arr8161, arr8162, arr8163, arr8164, arr8165, arr8166, arr8167];
mov [L0x7fffffe430, L0x7fffffe432, L0x7fffffe434, L0x7fffffe436, L0x7fffffe438, L0x7fffffe43a, L0x7fffffe43c, L0x7fffffe43e] [arr8170, arr8171, arr8172, arr8173, arr8174, arr8175, arr8176, arr8177];
mov [L0x7fffffe440, L0x7fffffe442, L0x7fffffe444, L0x7fffffe446, L0x7fffffe448, L0x7fffffe44a, L0x7fffffe44c, L0x7fffffe44e] [arr8180, arr8181, arr8182, arr8183, arr8184, arr8185, arr8186, arr8187];
mov [L0x7fffffe450, L0x7fffffe452, L0x7fffffe454, L0x7fffffe456, L0x7fffffe458, L0x7fffffe45a, L0x7fffffe45c, L0x7fffffe45e] [arr9000, arr9001, arr9002, arr9003, arr9004, arr9005, arr9006, arr9007];
mov [L0x7fffffe460, L0x7fffffe462, L0x7fffffe464, L0x7fffffe466, L0x7fffffe468, L0x7fffffe46a, L0x7fffffe46c, L0x7fffffe46e] [arr9010, arr9011, arr9012, arr9013, arr9014, arr9015, arr9016, arr9017];
mov [L0x7fffffe470, L0x7fffffe472, L0x7fffffe474, L0x7fffffe476, L0x7fffffe478, L0x7fffffe47a, L0x7fffffe47c, L0x7fffffe47e] [arr9020, arr9021, arr9022, arr9023, arr9024, arr9025, arr9026, arr9027];
mov [L0x7fffffe480, L0x7fffffe482, L0x7fffffe484, L0x7fffffe486, L0x7fffffe488, L0x7fffffe48a, L0x7fffffe48c, L0x7fffffe48e] [arr9030, arr9031, arr9032, arr9033, arr9034, arr9035, arr9036, arr9037];
mov [L0x7fffffe490, L0x7fffffe492, L0x7fffffe494, L0x7fffffe496, L0x7fffffe498, L0x7fffffe49a, L0x7fffffe49c, L0x7fffffe49e] [arr9040, arr9041, arr9042, arr9043, arr9044, arr9045, arr9046, arr9047];
mov [L0x7fffffe4a0, L0x7fffffe4a2, L0x7fffffe4a4, L0x7fffffe4a6, L0x7fffffe4a8, L0x7fffffe4aa, L0x7fffffe4ac, L0x7fffffe4ae] [arr9050, arr9051, arr9052, arr9053, arr9054, arr9055, arr9056, arr9057];
mov [L0x7fffffe4b0, L0x7fffffe4b2, L0x7fffffe4b4, L0x7fffffe4b6, L0x7fffffe4b8, L0x7fffffe4ba, L0x7fffffe4bc, L0x7fffffe4be] [arr9060, arr9061, arr9062, arr9063, arr9064, arr9065, arr9066, arr9067];
mov [L0x7fffffe4c0, L0x7fffffe4c2, L0x7fffffe4c4, L0x7fffffe4c6, L0x7fffffe4c8, L0x7fffffe4ca, L0x7fffffe4cc, L0x7fffffe4ce] [arr9070, arr9071, arr9072, arr9073, arr9074, arr9075, arr9076, arr9077];
mov [L0x7fffffe4d0, L0x7fffffe4d2, L0x7fffffe4d4, L0x7fffffe4d6, L0x7fffffe4d8, L0x7fffffe4da, L0x7fffffe4dc, L0x7fffffe4de] [arr9080, arr9081, arr9082, arr9083, arr9084, arr9085, arr9086, arr9087];
mov [L0x7fffffe4e0, L0x7fffffe4e2, L0x7fffffe4e4, L0x7fffffe4e6, L0x7fffffe4e8, L0x7fffffe4ea, L0x7fffffe4ec, L0x7fffffe4ee] [arr9100, arr9101, arr9102, arr9103, arr9104, arr9105, arr9106, arr9107];
mov [L0x7fffffe4f0, L0x7fffffe4f2, L0x7fffffe4f4, L0x7fffffe4f6, L0x7fffffe4f8, L0x7fffffe4fa, L0x7fffffe4fc, L0x7fffffe4fe] [arr9110, arr9111, arr9112, arr9113, arr9114, arr9115, arr9116, arr9117];
mov [L0x7fffffe500, L0x7fffffe502, L0x7fffffe504, L0x7fffffe506, L0x7fffffe508, L0x7fffffe50a, L0x7fffffe50c, L0x7fffffe50e] [arr9120, arr9121, arr9122, arr9123, arr9124, arr9125, arr9126, arr9127];
mov [L0x7fffffe510, L0x7fffffe512, L0x7fffffe514, L0x7fffffe516, L0x7fffffe518, L0x7fffffe51a, L0x7fffffe51c, L0x7fffffe51e] [arr9130, arr9131, arr9132, arr9133, arr9134, arr9135, arr9136, arr9137];
mov [L0x7fffffe520, L0x7fffffe522, L0x7fffffe524, L0x7fffffe526, L0x7fffffe528, L0x7fffffe52a, L0x7fffffe52c, L0x7fffffe52e] [arr9140, arr9141, arr9142, arr9143, arr9144, arr9145, arr9146, arr9147];
mov [L0x7fffffe530, L0x7fffffe532, L0x7fffffe534, L0x7fffffe536, L0x7fffffe538, L0x7fffffe53a, L0x7fffffe53c, L0x7fffffe53e] [arr9150, arr9151, arr9152, arr9153, arr9154, arr9155, arr9156, arr9157];
mov [L0x7fffffe540, L0x7fffffe542, L0x7fffffe544, L0x7fffffe546, L0x7fffffe548, L0x7fffffe54a, L0x7fffffe54c, L0x7fffffe54e] [arr9160, arr9161, arr9162, arr9163, arr9164, arr9165, arr9166, arr9167];
mov [L0x7fffffe550, L0x7fffffe552, L0x7fffffe554, L0x7fffffe556, L0x7fffffe558, L0x7fffffe55a, L0x7fffffe55c, L0x7fffffe55e] [arr9170, arr9171, arr9172, arr9173, arr9174, arr9175, arr9176, arr9177];
mov [L0x7fffffe560, L0x7fffffe562, L0x7fffffe564, L0x7fffffe566, L0x7fffffe568, L0x7fffffe56a, L0x7fffffe56c, L0x7fffffe56e] [arr9180, arr9181, arr9182, arr9183, arr9184, arr9185, arr9186, arr9187];


# prologue

(* #! -> SP = 0x7fffffc380 *)
#! 0x7fffffc380 = 0x7fffffc380;

cut (* 0 *)
    [L0x7fffffda30, L0x7fffffda32, L0x7fffffda34, L0x7fffffda36, L0x7fffffda38, L0x7fffffda3a, L0x7fffffda3c, L0x7fffffda3e] = [arr0000, arr0001, arr0002, arr0003, arr0004, arr0005, arr0006, arr0007] /\
    [L0x7fffffda40, L0x7fffffda42, L0x7fffffda44, L0x7fffffda46, L0x7fffffda48, L0x7fffffda4a, L0x7fffffda4c, L0x7fffffda4e] = [arr0010, arr0011, arr0012, arr0013, arr0014, arr0015, arr0016, arr0017] /\
    [L0x7fffffda50, L0x7fffffda52, L0x7fffffda54, L0x7fffffda56, L0x7fffffda58, L0x7fffffda5a, L0x7fffffda5c, L0x7fffffda5e] = [arr0020, arr0021, arr0022, arr0023, arr0024, arr0025, arr0026, arr0027] /\
    [L0x7fffffda60, L0x7fffffda62, L0x7fffffda64, L0x7fffffda66, L0x7fffffda68, L0x7fffffda6a, L0x7fffffda6c, L0x7fffffda6e] = [arr0030, arr0031, arr0032, arr0033, arr0034, arr0035, arr0036, arr0037] /\
    [L0x7fffffda70, L0x7fffffda72, L0x7fffffda74, L0x7fffffda76, L0x7fffffda78, L0x7fffffda7a, L0x7fffffda7c, L0x7fffffda7e] = [arr0040, arr0041, arr0042, arr0043, arr0044, arr0045, arr0046, arr0047] /\
    [L0x7fffffda80, L0x7fffffda82, L0x7fffffda84, L0x7fffffda86, L0x7fffffda88, L0x7fffffda8a, L0x7fffffda8c, L0x7fffffda8e] = [arr0050, arr0051, arr0052, arr0053, arr0054, arr0055, arr0056, arr0057] /\
    [L0x7fffffda90, L0x7fffffda92, L0x7fffffda94, L0x7fffffda96, L0x7fffffda98, L0x7fffffda9a, L0x7fffffda9c, L0x7fffffda9e] = [arr0060, arr0061, arr0062, arr0063, arr0064, arr0065, arr0066, arr0067] /\
    [L0x7fffffdaa0, L0x7fffffdaa2, L0x7fffffdaa4, L0x7fffffdaa6, L0x7fffffdaa8, L0x7fffffdaaa, L0x7fffffdaac, L0x7fffffdaae] = [arr0070, arr0071, arr0072, arr0073, arr0074, arr0075, arr0076, arr0077] /\
    [L0x7fffffdab0, L0x7fffffdab2, L0x7fffffdab4, L0x7fffffdab6, L0x7fffffdab8, L0x7fffffdaba, L0x7fffffdabc, L0x7fffffdabe] = [arr0080, arr0081, arr0082, arr0083, arr0084, arr0085, arr0086, arr0087] /\
    [L0x7fffffdac0, L0x7fffffdac2, L0x7fffffdac4, L0x7fffffdac6, L0x7fffffdac8, L0x7fffffdaca, L0x7fffffdacc, L0x7fffffdace] = [arr0100, arr0101, arr0102, arr0103, arr0104, arr0105, arr0106, arr0107] /\
    [L0x7fffffdad0, L0x7fffffdad2, L0x7fffffdad4, L0x7fffffdad6, L0x7fffffdad8, L0x7fffffdada, L0x7fffffdadc, L0x7fffffdade] = [arr0110, arr0111, arr0112, arr0113, arr0114, arr0115, arr0116, arr0117] /\
    [L0x7fffffdae0, L0x7fffffdae2, L0x7fffffdae4, L0x7fffffdae6, L0x7fffffdae8, L0x7fffffdaea, L0x7fffffdaec, L0x7fffffdaee] = [arr0120, arr0121, arr0122, arr0123, arr0124, arr0125, arr0126, arr0127] /\
    [L0x7fffffdaf0, L0x7fffffdaf2, L0x7fffffdaf4, L0x7fffffdaf6, L0x7fffffdaf8, L0x7fffffdafa, L0x7fffffdafc, L0x7fffffdafe] = [arr0130, arr0131, arr0132, arr0133, arr0134, arr0135, arr0136, arr0137] /\
    [L0x7fffffdb00, L0x7fffffdb02, L0x7fffffdb04, L0x7fffffdb06, L0x7fffffdb08, L0x7fffffdb0a, L0x7fffffdb0c, L0x7fffffdb0e] = [arr0140, arr0141, arr0142, arr0143, arr0144, arr0145, arr0146, arr0147] /\
    [L0x7fffffdb10, L0x7fffffdb12, L0x7fffffdb14, L0x7fffffdb16, L0x7fffffdb18, L0x7fffffdb1a, L0x7fffffdb1c, L0x7fffffdb1e] = [arr0150, arr0151, arr0152, arr0153, arr0154, arr0155, arr0156, arr0157] /\
    [L0x7fffffdb20, L0x7fffffdb22, L0x7fffffdb24, L0x7fffffdb26, L0x7fffffdb28, L0x7fffffdb2a, L0x7fffffdb2c, L0x7fffffdb2e] = [arr0160, arr0161, arr0162, arr0163, arr0164, arr0165, arr0166, arr0167] /\
    [L0x7fffffdb30, L0x7fffffdb32, L0x7fffffdb34, L0x7fffffdb36, L0x7fffffdb38, L0x7fffffdb3a, L0x7fffffdb3c, L0x7fffffdb3e] = [arr0170, arr0171, arr0172, arr0173, arr0174, arr0175, arr0176, arr0177] /\
    [L0x7fffffdb40, L0x7fffffdb42, L0x7fffffdb44, L0x7fffffdb46, L0x7fffffdb48, L0x7fffffdb4a, L0x7fffffdb4c, L0x7fffffdb4e] = [arr0180, arr0181, arr0182, arr0183, arr0184, arr0185, arr0186, arr0187] /\
    [L0x7fffffdb50, L0x7fffffdb52, L0x7fffffdb54, L0x7fffffdb56, L0x7fffffdb58, L0x7fffffdb5a, L0x7fffffdb5c, L0x7fffffdb5e] = [arr1000, arr1001, arr1002, arr1003, arr1004, arr1005, arr1006, arr1007] /\
    [L0x7fffffdb60, L0x7fffffdb62, L0x7fffffdb64, L0x7fffffdb66, L0x7fffffdb68, L0x7fffffdb6a, L0x7fffffdb6c, L0x7fffffdb6e] = [arr1010, arr1011, arr1012, arr1013, arr1014, arr1015, arr1016, arr1017] /\
    [L0x7fffffdb70, L0x7fffffdb72, L0x7fffffdb74, L0x7fffffdb76, L0x7fffffdb78, L0x7fffffdb7a, L0x7fffffdb7c, L0x7fffffdb7e] = [arr1020, arr1021, arr1022, arr1023, arr1024, arr1025, arr1026, arr1027] /\
    [L0x7fffffdb80, L0x7fffffdb82, L0x7fffffdb84, L0x7fffffdb86, L0x7fffffdb88, L0x7fffffdb8a, L0x7fffffdb8c, L0x7fffffdb8e] = [arr1030, arr1031, arr1032, arr1033, arr1034, arr1035, arr1036, arr1037] /\
    [L0x7fffffdb90, L0x7fffffdb92, L0x7fffffdb94, L0x7fffffdb96, L0x7fffffdb98, L0x7fffffdb9a, L0x7fffffdb9c, L0x7fffffdb9e] = [arr1040, arr1041, arr1042, arr1043, arr1044, arr1045, arr1046, arr1047] /\
    [L0x7fffffdba0, L0x7fffffdba2, L0x7fffffdba4, L0x7fffffdba6, L0x7fffffdba8, L0x7fffffdbaa, L0x7fffffdbac, L0x7fffffdbae] = [arr1050, arr1051, arr1052, arr1053, arr1054, arr1055, arr1056, arr1057] /\
    [L0x7fffffdbb0, L0x7fffffdbb2, L0x7fffffdbb4, L0x7fffffdbb6, L0x7fffffdbb8, L0x7fffffdbba, L0x7fffffdbbc, L0x7fffffdbbe] = [arr1060, arr1061, arr1062, arr1063, arr1064, arr1065, arr1066, arr1067] /\
    [L0x7fffffdbc0, L0x7fffffdbc2, L0x7fffffdbc4, L0x7fffffdbc6, L0x7fffffdbc8, L0x7fffffdbca, L0x7fffffdbcc, L0x7fffffdbce] = [arr1070, arr1071, arr1072, arr1073, arr1074, arr1075, arr1076, arr1077] /\
    [L0x7fffffdbd0, L0x7fffffdbd2, L0x7fffffdbd4, L0x7fffffdbd6, L0x7fffffdbd8, L0x7fffffdbda, L0x7fffffdbdc, L0x7fffffdbde] = [arr1080, arr1081, arr1082, arr1083, arr1084, arr1085, arr1086, arr1087] /\
    [L0x7fffffdbe0, L0x7fffffdbe2, L0x7fffffdbe4, L0x7fffffdbe6, L0x7fffffdbe8, L0x7fffffdbea, L0x7fffffdbec, L0x7fffffdbee] = [arr1100, arr1101, arr1102, arr1103, arr1104, arr1105, arr1106, arr1107] /\
    [L0x7fffffdbf0, L0x7fffffdbf2, L0x7fffffdbf4, L0x7fffffdbf6, L0x7fffffdbf8, L0x7fffffdbfa, L0x7fffffdbfc, L0x7fffffdbfe] = [arr1110, arr1111, arr1112, arr1113, arr1114, arr1115, arr1116, arr1117] /\
    [L0x7fffffdc00, L0x7fffffdc02, L0x7fffffdc04, L0x7fffffdc06, L0x7fffffdc08, L0x7fffffdc0a, L0x7fffffdc0c, L0x7fffffdc0e] = [arr1120, arr1121, arr1122, arr1123, arr1124, arr1125, arr1126, arr1127] /\
    [L0x7fffffdc10, L0x7fffffdc12, L0x7fffffdc14, L0x7fffffdc16, L0x7fffffdc18, L0x7fffffdc1a, L0x7fffffdc1c, L0x7fffffdc1e] = [arr1130, arr1131, arr1132, arr1133, arr1134, arr1135, arr1136, arr1137] /\
    [L0x7fffffdc20, L0x7fffffdc22, L0x7fffffdc24, L0x7fffffdc26, L0x7fffffdc28, L0x7fffffdc2a, L0x7fffffdc2c, L0x7fffffdc2e] = [arr1140, arr1141, arr1142, arr1143, arr1144, arr1145, arr1146, arr1147] /\
    [L0x7fffffdc30, L0x7fffffdc32, L0x7fffffdc34, L0x7fffffdc36, L0x7fffffdc38, L0x7fffffdc3a, L0x7fffffdc3c, L0x7fffffdc3e] = [arr1150, arr1151, arr1152, arr1153, arr1154, arr1155, arr1156, arr1157] /\
    [L0x7fffffdc40, L0x7fffffdc42, L0x7fffffdc44, L0x7fffffdc46, L0x7fffffdc48, L0x7fffffdc4a, L0x7fffffdc4c, L0x7fffffdc4e] = [arr1160, arr1161, arr1162, arr1163, arr1164, arr1165, arr1166, arr1167] /\
    [L0x7fffffdc50, L0x7fffffdc52, L0x7fffffdc54, L0x7fffffdc56, L0x7fffffdc58, L0x7fffffdc5a, L0x7fffffdc5c, L0x7fffffdc5e] = [arr1170, arr1171, arr1172, arr1173, arr1174, arr1175, arr1176, arr1177] /\
    [L0x7fffffdc60, L0x7fffffdc62, L0x7fffffdc64, L0x7fffffdc66, L0x7fffffdc68, L0x7fffffdc6a, L0x7fffffdc6c, L0x7fffffdc6e] = [arr1180, arr1181, arr1182, arr1183, arr1184, arr1185, arr1186, arr1187] /\
    [L0x7fffffdc70, L0x7fffffdc72, L0x7fffffdc74, L0x7fffffdc76, L0x7fffffdc78, L0x7fffffdc7a, L0x7fffffdc7c, L0x7fffffdc7e] = [arr2000, arr2001, arr2002, arr2003, arr2004, arr2005, arr2006, arr2007] /\
    [L0x7fffffdc80, L0x7fffffdc82, L0x7fffffdc84, L0x7fffffdc86, L0x7fffffdc88, L0x7fffffdc8a, L0x7fffffdc8c, L0x7fffffdc8e] = [arr2010, arr2011, arr2012, arr2013, arr2014, arr2015, arr2016, arr2017] /\
    [L0x7fffffdc90, L0x7fffffdc92, L0x7fffffdc94, L0x7fffffdc96, L0x7fffffdc98, L0x7fffffdc9a, L0x7fffffdc9c, L0x7fffffdc9e] = [arr2020, arr2021, arr2022, arr2023, arr2024, arr2025, arr2026, arr2027] /\
    [L0x7fffffdca0, L0x7fffffdca2, L0x7fffffdca4, L0x7fffffdca6, L0x7fffffdca8, L0x7fffffdcaa, L0x7fffffdcac, L0x7fffffdcae] = [arr2030, arr2031, arr2032, arr2033, arr2034, arr2035, arr2036, arr2037] /\
    [L0x7fffffdcb0, L0x7fffffdcb2, L0x7fffffdcb4, L0x7fffffdcb6, L0x7fffffdcb8, L0x7fffffdcba, L0x7fffffdcbc, L0x7fffffdcbe] = [arr2040, arr2041, arr2042, arr2043, arr2044, arr2045, arr2046, arr2047] /\
    [L0x7fffffdcc0, L0x7fffffdcc2, L0x7fffffdcc4, L0x7fffffdcc6, L0x7fffffdcc8, L0x7fffffdcca, L0x7fffffdccc, L0x7fffffdcce] = [arr2050, arr2051, arr2052, arr2053, arr2054, arr2055, arr2056, arr2057] /\
    [L0x7fffffdcd0, L0x7fffffdcd2, L0x7fffffdcd4, L0x7fffffdcd6, L0x7fffffdcd8, L0x7fffffdcda, L0x7fffffdcdc, L0x7fffffdcde] = [arr2060, arr2061, arr2062, arr2063, arr2064, arr2065, arr2066, arr2067] /\
    [L0x7fffffdce0, L0x7fffffdce2, L0x7fffffdce4, L0x7fffffdce6, L0x7fffffdce8, L0x7fffffdcea, L0x7fffffdcec, L0x7fffffdcee] = [arr2070, arr2071, arr2072, arr2073, arr2074, arr2075, arr2076, arr2077] /\
    [L0x7fffffdcf0, L0x7fffffdcf2, L0x7fffffdcf4, L0x7fffffdcf6, L0x7fffffdcf8, L0x7fffffdcfa, L0x7fffffdcfc, L0x7fffffdcfe] = [arr2080, arr2081, arr2082, arr2083, arr2084, arr2085, arr2086, arr2087] /\
    [L0x7fffffdd00, L0x7fffffdd02, L0x7fffffdd04, L0x7fffffdd06, L0x7fffffdd08, L0x7fffffdd0a, L0x7fffffdd0c, L0x7fffffdd0e] = [arr2100, arr2101, arr2102, arr2103, arr2104, arr2105, arr2106, arr2107] /\
    [L0x7fffffdd10, L0x7fffffdd12, L0x7fffffdd14, L0x7fffffdd16, L0x7fffffdd18, L0x7fffffdd1a, L0x7fffffdd1c, L0x7fffffdd1e] = [arr2110, arr2111, arr2112, arr2113, arr2114, arr2115, arr2116, arr2117] /\
    [L0x7fffffdd20, L0x7fffffdd22, L0x7fffffdd24, L0x7fffffdd26, L0x7fffffdd28, L0x7fffffdd2a, L0x7fffffdd2c, L0x7fffffdd2e] = [arr2120, arr2121, arr2122, arr2123, arr2124, arr2125, arr2126, arr2127] /\
    [L0x7fffffdd30, L0x7fffffdd32, L0x7fffffdd34, L0x7fffffdd36, L0x7fffffdd38, L0x7fffffdd3a, L0x7fffffdd3c, L0x7fffffdd3e] = [arr2130, arr2131, arr2132, arr2133, arr2134, arr2135, arr2136, arr2137] /\
    [L0x7fffffdd40, L0x7fffffdd42, L0x7fffffdd44, L0x7fffffdd46, L0x7fffffdd48, L0x7fffffdd4a, L0x7fffffdd4c, L0x7fffffdd4e] = [arr2140, arr2141, arr2142, arr2143, arr2144, arr2145, arr2146, arr2147] /\
    [L0x7fffffdd50, L0x7fffffdd52, L0x7fffffdd54, L0x7fffffdd56, L0x7fffffdd58, L0x7fffffdd5a, L0x7fffffdd5c, L0x7fffffdd5e] = [arr2150, arr2151, arr2152, arr2153, arr2154, arr2155, arr2156, arr2157] /\
    [L0x7fffffdd60, L0x7fffffdd62, L0x7fffffdd64, L0x7fffffdd66, L0x7fffffdd68, L0x7fffffdd6a, L0x7fffffdd6c, L0x7fffffdd6e] = [arr2160, arr2161, arr2162, arr2163, arr2164, arr2165, arr2166, arr2167] /\
    [L0x7fffffdd70, L0x7fffffdd72, L0x7fffffdd74, L0x7fffffdd76, L0x7fffffdd78, L0x7fffffdd7a, L0x7fffffdd7c, L0x7fffffdd7e] = [arr2170, arr2171, arr2172, arr2173, arr2174, arr2175, arr2176, arr2177] /\
    [L0x7fffffdd80, L0x7fffffdd82, L0x7fffffdd84, L0x7fffffdd86, L0x7fffffdd88, L0x7fffffdd8a, L0x7fffffdd8c, L0x7fffffdd8e] = [arr2180, arr2181, arr2182, arr2183, arr2184, arr2185, arr2186, arr2187] /\
    [L0x7fffffdd90, L0x7fffffdd92, L0x7fffffdd94, L0x7fffffdd96, L0x7fffffdd98, L0x7fffffdd9a, L0x7fffffdd9c, L0x7fffffdd9e] = [arr3000, arr3001, arr3002, arr3003, arr3004, arr3005, arr3006, arr3007] /\
    [L0x7fffffdda0, L0x7fffffdda2, L0x7fffffdda4, L0x7fffffdda6, L0x7fffffdda8, L0x7fffffddaa, L0x7fffffddac, L0x7fffffddae] = [arr3010, arr3011, arr3012, arr3013, arr3014, arr3015, arr3016, arr3017] /\
    [L0x7fffffddb0, L0x7fffffddb2, L0x7fffffddb4, L0x7fffffddb6, L0x7fffffddb8, L0x7fffffddba, L0x7fffffddbc, L0x7fffffddbe] = [arr3020, arr3021, arr3022, arr3023, arr3024, arr3025, arr3026, arr3027] /\
    [L0x7fffffddc0, L0x7fffffddc2, L0x7fffffddc4, L0x7fffffddc6, L0x7fffffddc8, L0x7fffffddca, L0x7fffffddcc, L0x7fffffddce] = [arr3030, arr3031, arr3032, arr3033, arr3034, arr3035, arr3036, arr3037] /\
    [L0x7fffffddd0, L0x7fffffddd2, L0x7fffffddd4, L0x7fffffddd6, L0x7fffffddd8, L0x7fffffddda, L0x7fffffdddc, L0x7fffffddde] = [arr3040, arr3041, arr3042, arr3043, arr3044, arr3045, arr3046, arr3047] /\
    [L0x7fffffdde0, L0x7fffffdde2, L0x7fffffdde4, L0x7fffffdde6, L0x7fffffdde8, L0x7fffffddea, L0x7fffffddec, L0x7fffffddee] = [arr3050, arr3051, arr3052, arr3053, arr3054, arr3055, arr3056, arr3057] /\
    [L0x7fffffddf0, L0x7fffffddf2, L0x7fffffddf4, L0x7fffffddf6, L0x7fffffddf8, L0x7fffffddfa, L0x7fffffddfc, L0x7fffffddfe] = [arr3060, arr3061, arr3062, arr3063, arr3064, arr3065, arr3066, arr3067] /\
    [L0x7fffffde00, L0x7fffffde02, L0x7fffffde04, L0x7fffffde06, L0x7fffffde08, L0x7fffffde0a, L0x7fffffde0c, L0x7fffffde0e] = [arr3070, arr3071, arr3072, arr3073, arr3074, arr3075, arr3076, arr3077] /\
    [L0x7fffffde10, L0x7fffffde12, L0x7fffffde14, L0x7fffffde16, L0x7fffffde18, L0x7fffffde1a, L0x7fffffde1c, L0x7fffffde1e] = [arr3080, arr3081, arr3082, arr3083, arr3084, arr3085, arr3086, arr3087] /\
    [L0x7fffffde20, L0x7fffffde22, L0x7fffffde24, L0x7fffffde26, L0x7fffffde28, L0x7fffffde2a, L0x7fffffde2c, L0x7fffffde2e] = [arr3100, arr3101, arr3102, arr3103, arr3104, arr3105, arr3106, arr3107] /\
    [L0x7fffffde30, L0x7fffffde32, L0x7fffffde34, L0x7fffffde36, L0x7fffffde38, L0x7fffffde3a, L0x7fffffde3c, L0x7fffffde3e] = [arr3110, arr3111, arr3112, arr3113, arr3114, arr3115, arr3116, arr3117] /\
    [L0x7fffffde40, L0x7fffffde42, L0x7fffffde44, L0x7fffffde46, L0x7fffffde48, L0x7fffffde4a, L0x7fffffde4c, L0x7fffffde4e] = [arr3120, arr3121, arr3122, arr3123, arr3124, arr3125, arr3126, arr3127] /\
    [L0x7fffffde50, L0x7fffffde52, L0x7fffffde54, L0x7fffffde56, L0x7fffffde58, L0x7fffffde5a, L0x7fffffde5c, L0x7fffffde5e] = [arr3130, arr3131, arr3132, arr3133, arr3134, arr3135, arr3136, arr3137] /\
    [L0x7fffffde60, L0x7fffffde62, L0x7fffffde64, L0x7fffffde66, L0x7fffffde68, L0x7fffffde6a, L0x7fffffde6c, L0x7fffffde6e] = [arr3140, arr3141, arr3142, arr3143, arr3144, arr3145, arr3146, arr3147] /\
    [L0x7fffffde70, L0x7fffffde72, L0x7fffffde74, L0x7fffffde76, L0x7fffffde78, L0x7fffffde7a, L0x7fffffde7c, L0x7fffffde7e] = [arr3150, arr3151, arr3152, arr3153, arr3154, arr3155, arr3156, arr3157] /\
    [L0x7fffffde80, L0x7fffffde82, L0x7fffffde84, L0x7fffffde86, L0x7fffffde88, L0x7fffffde8a, L0x7fffffde8c, L0x7fffffde8e] = [arr3160, arr3161, arr3162, arr3163, arr3164, arr3165, arr3166, arr3167] /\
    [L0x7fffffde90, L0x7fffffde92, L0x7fffffde94, L0x7fffffde96, L0x7fffffde98, L0x7fffffde9a, L0x7fffffde9c, L0x7fffffde9e] = [arr3170, arr3171, arr3172, arr3173, arr3174, arr3175, arr3176, arr3177] /\
    [L0x7fffffdea0, L0x7fffffdea2, L0x7fffffdea4, L0x7fffffdea6, L0x7fffffdea8, L0x7fffffdeaa, L0x7fffffdeac, L0x7fffffdeae] = [arr3180, arr3181, arr3182, arr3183, arr3184, arr3185, arr3186, arr3187] /\
    [L0x7fffffdeb0, L0x7fffffdeb2, L0x7fffffdeb4, L0x7fffffdeb6, L0x7fffffdeb8, L0x7fffffdeba, L0x7fffffdebc, L0x7fffffdebe] = [arr4000, arr4001, arr4002, arr4003, arr4004, arr4005, arr4006, arr4007] /\
    [L0x7fffffdec0, L0x7fffffdec2, L0x7fffffdec4, L0x7fffffdec6, L0x7fffffdec8, L0x7fffffdeca, L0x7fffffdecc, L0x7fffffdece] = [arr4010, arr4011, arr4012, arr4013, arr4014, arr4015, arr4016, arr4017] /\
    [L0x7fffffded0, L0x7fffffded2, L0x7fffffded4, L0x7fffffded6, L0x7fffffded8, L0x7fffffdeda, L0x7fffffdedc, L0x7fffffdede] = [arr4020, arr4021, arr4022, arr4023, arr4024, arr4025, arr4026, arr4027] /\
    [L0x7fffffdee0, L0x7fffffdee2, L0x7fffffdee4, L0x7fffffdee6, L0x7fffffdee8, L0x7fffffdeea, L0x7fffffdeec, L0x7fffffdeee] = [arr4030, arr4031, arr4032, arr4033, arr4034, arr4035, arr4036, arr4037] /\
    [L0x7fffffdef0, L0x7fffffdef2, L0x7fffffdef4, L0x7fffffdef6, L0x7fffffdef8, L0x7fffffdefa, L0x7fffffdefc, L0x7fffffdefe] = [arr4040, arr4041, arr4042, arr4043, arr4044, arr4045, arr4046, arr4047] /\
    [L0x7fffffdf00, L0x7fffffdf02, L0x7fffffdf04, L0x7fffffdf06, L0x7fffffdf08, L0x7fffffdf0a, L0x7fffffdf0c, L0x7fffffdf0e] = [arr4050, arr4051, arr4052, arr4053, arr4054, arr4055, arr4056, arr4057] /\
    [L0x7fffffdf10, L0x7fffffdf12, L0x7fffffdf14, L0x7fffffdf16, L0x7fffffdf18, L0x7fffffdf1a, L0x7fffffdf1c, L0x7fffffdf1e] = [arr4060, arr4061, arr4062, arr4063, arr4064, arr4065, arr4066, arr4067] /\
    [L0x7fffffdf20, L0x7fffffdf22, L0x7fffffdf24, L0x7fffffdf26, L0x7fffffdf28, L0x7fffffdf2a, L0x7fffffdf2c, L0x7fffffdf2e] = [arr4070, arr4071, arr4072, arr4073, arr4074, arr4075, arr4076, arr4077] /\
    [L0x7fffffdf30, L0x7fffffdf32, L0x7fffffdf34, L0x7fffffdf36, L0x7fffffdf38, L0x7fffffdf3a, L0x7fffffdf3c, L0x7fffffdf3e] = [arr4080, arr4081, arr4082, arr4083, arr4084, arr4085, arr4086, arr4087] /\
    [L0x7fffffdf40, L0x7fffffdf42, L0x7fffffdf44, L0x7fffffdf46, L0x7fffffdf48, L0x7fffffdf4a, L0x7fffffdf4c, L0x7fffffdf4e] = [arr4100, arr4101, arr4102, arr4103, arr4104, arr4105, arr4106, arr4107] /\
    [L0x7fffffdf50, L0x7fffffdf52, L0x7fffffdf54, L0x7fffffdf56, L0x7fffffdf58, L0x7fffffdf5a, L0x7fffffdf5c, L0x7fffffdf5e] = [arr4110, arr4111, arr4112, arr4113, arr4114, arr4115, arr4116, arr4117] /\
    [L0x7fffffdf60, L0x7fffffdf62, L0x7fffffdf64, L0x7fffffdf66, L0x7fffffdf68, L0x7fffffdf6a, L0x7fffffdf6c, L0x7fffffdf6e] = [arr4120, arr4121, arr4122, arr4123, arr4124, arr4125, arr4126, arr4127] /\
    [L0x7fffffdf70, L0x7fffffdf72, L0x7fffffdf74, L0x7fffffdf76, L0x7fffffdf78, L0x7fffffdf7a, L0x7fffffdf7c, L0x7fffffdf7e] = [arr4130, arr4131, arr4132, arr4133, arr4134, arr4135, arr4136, arr4137] /\
    [L0x7fffffdf80, L0x7fffffdf82, L0x7fffffdf84, L0x7fffffdf86, L0x7fffffdf88, L0x7fffffdf8a, L0x7fffffdf8c, L0x7fffffdf8e] = [arr4140, arr4141, arr4142, arr4143, arr4144, arr4145, arr4146, arr4147] /\
    [L0x7fffffdf90, L0x7fffffdf92, L0x7fffffdf94, L0x7fffffdf96, L0x7fffffdf98, L0x7fffffdf9a, L0x7fffffdf9c, L0x7fffffdf9e] = [arr4150, arr4151, arr4152, arr4153, arr4154, arr4155, arr4156, arr4157] /\
    [L0x7fffffdfa0, L0x7fffffdfa2, L0x7fffffdfa4, L0x7fffffdfa6, L0x7fffffdfa8, L0x7fffffdfaa, L0x7fffffdfac, L0x7fffffdfae] = [arr4160, arr4161, arr4162, arr4163, arr4164, arr4165, arr4166, arr4167] /\
    [L0x7fffffdfb0, L0x7fffffdfb2, L0x7fffffdfb4, L0x7fffffdfb6, L0x7fffffdfb8, L0x7fffffdfba, L0x7fffffdfbc, L0x7fffffdfbe] = [arr4170, arr4171, arr4172, arr4173, arr4174, arr4175, arr4176, arr4177] /\
    [L0x7fffffdfc0, L0x7fffffdfc2, L0x7fffffdfc4, L0x7fffffdfc6, L0x7fffffdfc8, L0x7fffffdfca, L0x7fffffdfcc, L0x7fffffdfce] = [arr4180, arr4181, arr4182, arr4183, arr4184, arr4185, arr4186, arr4187] /\
    [L0x7fffffdfd0, L0x7fffffdfd2, L0x7fffffdfd4, L0x7fffffdfd6, L0x7fffffdfd8, L0x7fffffdfda, L0x7fffffdfdc, L0x7fffffdfde] = [arr5000, arr5001, arr5002, arr5003, arr5004, arr5005, arr5006, arr5007] /\
    [L0x7fffffdfe0, L0x7fffffdfe2, L0x7fffffdfe4, L0x7fffffdfe6, L0x7fffffdfe8, L0x7fffffdfea, L0x7fffffdfec, L0x7fffffdfee] = [arr5010, arr5011, arr5012, arr5013, arr5014, arr5015, arr5016, arr5017] /\
    [L0x7fffffdff0, L0x7fffffdff2, L0x7fffffdff4, L0x7fffffdff6, L0x7fffffdff8, L0x7fffffdffa, L0x7fffffdffc, L0x7fffffdffe] = [arr5020, arr5021, arr5022, arr5023, arr5024, arr5025, arr5026, arr5027] /\
    [L0x7fffffe000, L0x7fffffe002, L0x7fffffe004, L0x7fffffe006, L0x7fffffe008, L0x7fffffe00a, L0x7fffffe00c, L0x7fffffe00e] = [arr5030, arr5031, arr5032, arr5033, arr5034, arr5035, arr5036, arr5037] /\
    [L0x7fffffe010, L0x7fffffe012, L0x7fffffe014, L0x7fffffe016, L0x7fffffe018, L0x7fffffe01a, L0x7fffffe01c, L0x7fffffe01e] = [arr5040, arr5041, arr5042, arr5043, arr5044, arr5045, arr5046, arr5047] /\
    [L0x7fffffe020, L0x7fffffe022, L0x7fffffe024, L0x7fffffe026, L0x7fffffe028, L0x7fffffe02a, L0x7fffffe02c, L0x7fffffe02e] = [arr5050, arr5051, arr5052, arr5053, arr5054, arr5055, arr5056, arr5057] /\
    [L0x7fffffe030, L0x7fffffe032, L0x7fffffe034, L0x7fffffe036, L0x7fffffe038, L0x7fffffe03a, L0x7fffffe03c, L0x7fffffe03e] = [arr5060, arr5061, arr5062, arr5063, arr5064, arr5065, arr5066, arr5067] /\
    [L0x7fffffe040, L0x7fffffe042, L0x7fffffe044, L0x7fffffe046, L0x7fffffe048, L0x7fffffe04a, L0x7fffffe04c, L0x7fffffe04e] = [arr5070, arr5071, arr5072, arr5073, arr5074, arr5075, arr5076, arr5077] /\
    [L0x7fffffe050, L0x7fffffe052, L0x7fffffe054, L0x7fffffe056, L0x7fffffe058, L0x7fffffe05a, L0x7fffffe05c, L0x7fffffe05e] = [arr5080, arr5081, arr5082, arr5083, arr5084, arr5085, arr5086, arr5087] /\
    [L0x7fffffe060, L0x7fffffe062, L0x7fffffe064, L0x7fffffe066, L0x7fffffe068, L0x7fffffe06a, L0x7fffffe06c, L0x7fffffe06e] = [arr5100, arr5101, arr5102, arr5103, arr5104, arr5105, arr5106, arr5107] /\
    [L0x7fffffe070, L0x7fffffe072, L0x7fffffe074, L0x7fffffe076, L0x7fffffe078, L0x7fffffe07a, L0x7fffffe07c, L0x7fffffe07e] = [arr5110, arr5111, arr5112, arr5113, arr5114, arr5115, arr5116, arr5117] /\
    [L0x7fffffe080, L0x7fffffe082, L0x7fffffe084, L0x7fffffe086, L0x7fffffe088, L0x7fffffe08a, L0x7fffffe08c, L0x7fffffe08e] = [arr5120, arr5121, arr5122, arr5123, arr5124, arr5125, arr5126, arr5127] /\
    [L0x7fffffe090, L0x7fffffe092, L0x7fffffe094, L0x7fffffe096, L0x7fffffe098, L0x7fffffe09a, L0x7fffffe09c, L0x7fffffe09e] = [arr5130, arr5131, arr5132, arr5133, arr5134, arr5135, arr5136, arr5137] /\
    [L0x7fffffe0a0, L0x7fffffe0a2, L0x7fffffe0a4, L0x7fffffe0a6, L0x7fffffe0a8, L0x7fffffe0aa, L0x7fffffe0ac, L0x7fffffe0ae] = [arr5140, arr5141, arr5142, arr5143, arr5144, arr5145, arr5146, arr5147] /\
    [L0x7fffffe0b0, L0x7fffffe0b2, L0x7fffffe0b4, L0x7fffffe0b6, L0x7fffffe0b8, L0x7fffffe0ba, L0x7fffffe0bc, L0x7fffffe0be] = [arr5150, arr5151, arr5152, arr5153, arr5154, arr5155, arr5156, arr5157] /\
    [L0x7fffffe0c0, L0x7fffffe0c2, L0x7fffffe0c4, L0x7fffffe0c6, L0x7fffffe0c8, L0x7fffffe0ca, L0x7fffffe0cc, L0x7fffffe0ce] = [arr5160, arr5161, arr5162, arr5163, arr5164, arr5165, arr5166, arr5167] /\
    [L0x7fffffe0d0, L0x7fffffe0d2, L0x7fffffe0d4, L0x7fffffe0d6, L0x7fffffe0d8, L0x7fffffe0da, L0x7fffffe0dc, L0x7fffffe0de] = [arr5170, arr5171, arr5172, arr5173, arr5174, arr5175, arr5176, arr5177] /\
    [L0x7fffffe0e0, L0x7fffffe0e2, L0x7fffffe0e4, L0x7fffffe0e6, L0x7fffffe0e8, L0x7fffffe0ea, L0x7fffffe0ec, L0x7fffffe0ee] = [arr5180, arr5181, arr5182, arr5183, arr5184, arr5185, arr5186, arr5187] /\
    [L0x7fffffe0f0, L0x7fffffe0f2, L0x7fffffe0f4, L0x7fffffe0f6, L0x7fffffe0f8, L0x7fffffe0fa, L0x7fffffe0fc, L0x7fffffe0fe] = [arr6000, arr6001, arr6002, arr6003, arr6004, arr6005, arr6006, arr6007] /\
    [L0x7fffffe100, L0x7fffffe102, L0x7fffffe104, L0x7fffffe106, L0x7fffffe108, L0x7fffffe10a, L0x7fffffe10c, L0x7fffffe10e] = [arr6010, arr6011, arr6012, arr6013, arr6014, arr6015, arr6016, arr6017] /\
    [L0x7fffffe110, L0x7fffffe112, L0x7fffffe114, L0x7fffffe116, L0x7fffffe118, L0x7fffffe11a, L0x7fffffe11c, L0x7fffffe11e] = [arr6020, arr6021, arr6022, arr6023, arr6024, arr6025, arr6026, arr6027] /\
    [L0x7fffffe120, L0x7fffffe122, L0x7fffffe124, L0x7fffffe126, L0x7fffffe128, L0x7fffffe12a, L0x7fffffe12c, L0x7fffffe12e] = [arr6030, arr6031, arr6032, arr6033, arr6034, arr6035, arr6036, arr6037] /\
    [L0x7fffffe130, L0x7fffffe132, L0x7fffffe134, L0x7fffffe136, L0x7fffffe138, L0x7fffffe13a, L0x7fffffe13c, L0x7fffffe13e] = [arr6040, arr6041, arr6042, arr6043, arr6044, arr6045, arr6046, arr6047] /\
    [L0x7fffffe140, L0x7fffffe142, L0x7fffffe144, L0x7fffffe146, L0x7fffffe148, L0x7fffffe14a, L0x7fffffe14c, L0x7fffffe14e] = [arr6050, arr6051, arr6052, arr6053, arr6054, arr6055, arr6056, arr6057] /\
    [L0x7fffffe150, L0x7fffffe152, L0x7fffffe154, L0x7fffffe156, L0x7fffffe158, L0x7fffffe15a, L0x7fffffe15c, L0x7fffffe15e] = [arr6060, arr6061, arr6062, arr6063, arr6064, arr6065, arr6066, arr6067] /\
    [L0x7fffffe160, L0x7fffffe162, L0x7fffffe164, L0x7fffffe166, L0x7fffffe168, L0x7fffffe16a, L0x7fffffe16c, L0x7fffffe16e] = [arr6070, arr6071, arr6072, arr6073, arr6074, arr6075, arr6076, arr6077] /\
    [L0x7fffffe170, L0x7fffffe172, L0x7fffffe174, L0x7fffffe176, L0x7fffffe178, L0x7fffffe17a, L0x7fffffe17c, L0x7fffffe17e] = [arr6080, arr6081, arr6082, arr6083, arr6084, arr6085, arr6086, arr6087] /\
    [L0x7fffffe180, L0x7fffffe182, L0x7fffffe184, L0x7fffffe186, L0x7fffffe188, L0x7fffffe18a, L0x7fffffe18c, L0x7fffffe18e] = [arr6100, arr6101, arr6102, arr6103, arr6104, arr6105, arr6106, arr6107] /\
    [L0x7fffffe190, L0x7fffffe192, L0x7fffffe194, L0x7fffffe196, L0x7fffffe198, L0x7fffffe19a, L0x7fffffe19c, L0x7fffffe19e] = [arr6110, arr6111, arr6112, arr6113, arr6114, arr6115, arr6116, arr6117] /\
    [L0x7fffffe1a0, L0x7fffffe1a2, L0x7fffffe1a4, L0x7fffffe1a6, L0x7fffffe1a8, L0x7fffffe1aa, L0x7fffffe1ac, L0x7fffffe1ae] = [arr6120, arr6121, arr6122, arr6123, arr6124, arr6125, arr6126, arr6127] /\
    [L0x7fffffe1b0, L0x7fffffe1b2, L0x7fffffe1b4, L0x7fffffe1b6, L0x7fffffe1b8, L0x7fffffe1ba, L0x7fffffe1bc, L0x7fffffe1be] = [arr6130, arr6131, arr6132, arr6133, arr6134, arr6135, arr6136, arr6137] /\
    [L0x7fffffe1c0, L0x7fffffe1c2, L0x7fffffe1c4, L0x7fffffe1c6, L0x7fffffe1c8, L0x7fffffe1ca, L0x7fffffe1cc, L0x7fffffe1ce] = [arr6140, arr6141, arr6142, arr6143, arr6144, arr6145, arr6146, arr6147] /\
    [L0x7fffffe1d0, L0x7fffffe1d2, L0x7fffffe1d4, L0x7fffffe1d6, L0x7fffffe1d8, L0x7fffffe1da, L0x7fffffe1dc, L0x7fffffe1de] = [arr6150, arr6151, arr6152, arr6153, arr6154, arr6155, arr6156, arr6157] /\
    [L0x7fffffe1e0, L0x7fffffe1e2, L0x7fffffe1e4, L0x7fffffe1e6, L0x7fffffe1e8, L0x7fffffe1ea, L0x7fffffe1ec, L0x7fffffe1ee] = [arr6160, arr6161, arr6162, arr6163, arr6164, arr6165, arr6166, arr6167] /\
    [L0x7fffffe1f0, L0x7fffffe1f2, L0x7fffffe1f4, L0x7fffffe1f6, L0x7fffffe1f8, L0x7fffffe1fa, L0x7fffffe1fc, L0x7fffffe1fe] = [arr6170, arr6171, arr6172, arr6173, arr6174, arr6175, arr6176, arr6177] /\
    [L0x7fffffe200, L0x7fffffe202, L0x7fffffe204, L0x7fffffe206, L0x7fffffe208, L0x7fffffe20a, L0x7fffffe20c, L0x7fffffe20e] = [arr6180, arr6181, arr6182, arr6183, arr6184, arr6185, arr6186, arr6187] /\
    [L0x7fffffe210, L0x7fffffe212, L0x7fffffe214, L0x7fffffe216, L0x7fffffe218, L0x7fffffe21a, L0x7fffffe21c, L0x7fffffe21e] = [arr7000, arr7001, arr7002, arr7003, arr7004, arr7005, arr7006, arr7007] /\
    [L0x7fffffe220, L0x7fffffe222, L0x7fffffe224, L0x7fffffe226, L0x7fffffe228, L0x7fffffe22a, L0x7fffffe22c, L0x7fffffe22e] = [arr7010, arr7011, arr7012, arr7013, arr7014, arr7015, arr7016, arr7017] /\
    [L0x7fffffe230, L0x7fffffe232, L0x7fffffe234, L0x7fffffe236, L0x7fffffe238, L0x7fffffe23a, L0x7fffffe23c, L0x7fffffe23e] = [arr7020, arr7021, arr7022, arr7023, arr7024, arr7025, arr7026, arr7027] /\
    [L0x7fffffe240, L0x7fffffe242, L0x7fffffe244, L0x7fffffe246, L0x7fffffe248, L0x7fffffe24a, L0x7fffffe24c, L0x7fffffe24e] = [arr7030, arr7031, arr7032, arr7033, arr7034, arr7035, arr7036, arr7037] /\
    [L0x7fffffe250, L0x7fffffe252, L0x7fffffe254, L0x7fffffe256, L0x7fffffe258, L0x7fffffe25a, L0x7fffffe25c, L0x7fffffe25e] = [arr7040, arr7041, arr7042, arr7043, arr7044, arr7045, arr7046, arr7047] /\
    [L0x7fffffe260, L0x7fffffe262, L0x7fffffe264, L0x7fffffe266, L0x7fffffe268, L0x7fffffe26a, L0x7fffffe26c, L0x7fffffe26e] = [arr7050, arr7051, arr7052, arr7053, arr7054, arr7055, arr7056, arr7057] /\
    [L0x7fffffe270, L0x7fffffe272, L0x7fffffe274, L0x7fffffe276, L0x7fffffe278, L0x7fffffe27a, L0x7fffffe27c, L0x7fffffe27e] = [arr7060, arr7061, arr7062, arr7063, arr7064, arr7065, arr7066, arr7067] /\
    [L0x7fffffe280, L0x7fffffe282, L0x7fffffe284, L0x7fffffe286, L0x7fffffe288, L0x7fffffe28a, L0x7fffffe28c, L0x7fffffe28e] = [arr7070, arr7071, arr7072, arr7073, arr7074, arr7075, arr7076, arr7077] /\
    [L0x7fffffe290, L0x7fffffe292, L0x7fffffe294, L0x7fffffe296, L0x7fffffe298, L0x7fffffe29a, L0x7fffffe29c, L0x7fffffe29e] = [arr7080, arr7081, arr7082, arr7083, arr7084, arr7085, arr7086, arr7087] /\
    [L0x7fffffe2a0, L0x7fffffe2a2, L0x7fffffe2a4, L0x7fffffe2a6, L0x7fffffe2a8, L0x7fffffe2aa, L0x7fffffe2ac, L0x7fffffe2ae] = [arr7100, arr7101, arr7102, arr7103, arr7104, arr7105, arr7106, arr7107] /\
    [L0x7fffffe2b0, L0x7fffffe2b2, L0x7fffffe2b4, L0x7fffffe2b6, L0x7fffffe2b8, L0x7fffffe2ba, L0x7fffffe2bc, L0x7fffffe2be] = [arr7110, arr7111, arr7112, arr7113, arr7114, arr7115, arr7116, arr7117] /\
    [L0x7fffffe2c0, L0x7fffffe2c2, L0x7fffffe2c4, L0x7fffffe2c6, L0x7fffffe2c8, L0x7fffffe2ca, L0x7fffffe2cc, L0x7fffffe2ce] = [arr7120, arr7121, arr7122, arr7123, arr7124, arr7125, arr7126, arr7127] /\
    [L0x7fffffe2d0, L0x7fffffe2d2, L0x7fffffe2d4, L0x7fffffe2d6, L0x7fffffe2d8, L0x7fffffe2da, L0x7fffffe2dc, L0x7fffffe2de] = [arr7130, arr7131, arr7132, arr7133, arr7134, arr7135, arr7136, arr7137] /\
    [L0x7fffffe2e0, L0x7fffffe2e2, L0x7fffffe2e4, L0x7fffffe2e6, L0x7fffffe2e8, L0x7fffffe2ea, L0x7fffffe2ec, L0x7fffffe2ee] = [arr7140, arr7141, arr7142, arr7143, arr7144, arr7145, arr7146, arr7147] /\
    [L0x7fffffe2f0, L0x7fffffe2f2, L0x7fffffe2f4, L0x7fffffe2f6, L0x7fffffe2f8, L0x7fffffe2fa, L0x7fffffe2fc, L0x7fffffe2fe] = [arr7150, arr7151, arr7152, arr7153, arr7154, arr7155, arr7156, arr7157] /\
    [L0x7fffffe300, L0x7fffffe302, L0x7fffffe304, L0x7fffffe306, L0x7fffffe308, L0x7fffffe30a, L0x7fffffe30c, L0x7fffffe30e] = [arr7160, arr7161, arr7162, arr7163, arr7164, arr7165, arr7166, arr7167] /\
    [L0x7fffffe310, L0x7fffffe312, L0x7fffffe314, L0x7fffffe316, L0x7fffffe318, L0x7fffffe31a, L0x7fffffe31c, L0x7fffffe31e] = [arr7170, arr7171, arr7172, arr7173, arr7174, arr7175, arr7176, arr7177] /\
    [L0x7fffffe320, L0x7fffffe322, L0x7fffffe324, L0x7fffffe326, L0x7fffffe328, L0x7fffffe32a, L0x7fffffe32c, L0x7fffffe32e] = [arr7180, arr7181, arr7182, arr7183, arr7184, arr7185, arr7186, arr7187] /\
    [L0x7fffffe330, L0x7fffffe332, L0x7fffffe334, L0x7fffffe336, L0x7fffffe338, L0x7fffffe33a, L0x7fffffe33c, L0x7fffffe33e] = [arr8000, arr8001, arr8002, arr8003, arr8004, arr8005, arr8006, arr8007] /\
    [L0x7fffffe340, L0x7fffffe342, L0x7fffffe344, L0x7fffffe346, L0x7fffffe348, L0x7fffffe34a, L0x7fffffe34c, L0x7fffffe34e] = [arr8010, arr8011, arr8012, arr8013, arr8014, arr8015, arr8016, arr8017] /\
    [L0x7fffffe350, L0x7fffffe352, L0x7fffffe354, L0x7fffffe356, L0x7fffffe358, L0x7fffffe35a, L0x7fffffe35c, L0x7fffffe35e] = [arr8020, arr8021, arr8022, arr8023, arr8024, arr8025, arr8026, arr8027] /\
    [L0x7fffffe360, L0x7fffffe362, L0x7fffffe364, L0x7fffffe366, L0x7fffffe368, L0x7fffffe36a, L0x7fffffe36c, L0x7fffffe36e] = [arr8030, arr8031, arr8032, arr8033, arr8034, arr8035, arr8036, arr8037] /\
    [L0x7fffffe370, L0x7fffffe372, L0x7fffffe374, L0x7fffffe376, L0x7fffffe378, L0x7fffffe37a, L0x7fffffe37c, L0x7fffffe37e] = [arr8040, arr8041, arr8042, arr8043, arr8044, arr8045, arr8046, arr8047] /\
    [L0x7fffffe380, L0x7fffffe382, L0x7fffffe384, L0x7fffffe386, L0x7fffffe388, L0x7fffffe38a, L0x7fffffe38c, L0x7fffffe38e] = [arr8050, arr8051, arr8052, arr8053, arr8054, arr8055, arr8056, arr8057] /\
    [L0x7fffffe390, L0x7fffffe392, L0x7fffffe394, L0x7fffffe396, L0x7fffffe398, L0x7fffffe39a, L0x7fffffe39c, L0x7fffffe39e] = [arr8060, arr8061, arr8062, arr8063, arr8064, arr8065, arr8066, arr8067] /\
    [L0x7fffffe3a0, L0x7fffffe3a2, L0x7fffffe3a4, L0x7fffffe3a6, L0x7fffffe3a8, L0x7fffffe3aa, L0x7fffffe3ac, L0x7fffffe3ae] = [arr8070, arr8071, arr8072, arr8073, arr8074, arr8075, arr8076, arr8077] /\
    [L0x7fffffe3b0, L0x7fffffe3b2, L0x7fffffe3b4, L0x7fffffe3b6, L0x7fffffe3b8, L0x7fffffe3ba, L0x7fffffe3bc, L0x7fffffe3be] = [arr8080, arr8081, arr8082, arr8083, arr8084, arr8085, arr8086, arr8087] /\
    [L0x7fffffe3c0, L0x7fffffe3c2, L0x7fffffe3c4, L0x7fffffe3c6, L0x7fffffe3c8, L0x7fffffe3ca, L0x7fffffe3cc, L0x7fffffe3ce] = [arr8100, arr8101, arr8102, arr8103, arr8104, arr8105, arr8106, arr8107] /\
    [L0x7fffffe3d0, L0x7fffffe3d2, L0x7fffffe3d4, L0x7fffffe3d6, L0x7fffffe3d8, L0x7fffffe3da, L0x7fffffe3dc, L0x7fffffe3de] = [arr8110, arr8111, arr8112, arr8113, arr8114, arr8115, arr8116, arr8117] /\
    [L0x7fffffe3e0, L0x7fffffe3e2, L0x7fffffe3e4, L0x7fffffe3e6, L0x7fffffe3e8, L0x7fffffe3ea, L0x7fffffe3ec, L0x7fffffe3ee] = [arr8120, arr8121, arr8122, arr8123, arr8124, arr8125, arr8126, arr8127] /\
    [L0x7fffffe3f0, L0x7fffffe3f2, L0x7fffffe3f4, L0x7fffffe3f6, L0x7fffffe3f8, L0x7fffffe3fa, L0x7fffffe3fc, L0x7fffffe3fe] = [arr8130, arr8131, arr8132, arr8133, arr8134, arr8135, arr8136, arr8137] /\
    [L0x7fffffe400, L0x7fffffe402, L0x7fffffe404, L0x7fffffe406, L0x7fffffe408, L0x7fffffe40a, L0x7fffffe40c, L0x7fffffe40e] = [arr8140, arr8141, arr8142, arr8143, arr8144, arr8145, arr8146, arr8147] /\
    [L0x7fffffe410, L0x7fffffe412, L0x7fffffe414, L0x7fffffe416, L0x7fffffe418, L0x7fffffe41a, L0x7fffffe41c, L0x7fffffe41e] = [arr8150, arr8151, arr8152, arr8153, arr8154, arr8155, arr8156, arr8157] /\
    [L0x7fffffe420, L0x7fffffe422, L0x7fffffe424, L0x7fffffe426, L0x7fffffe428, L0x7fffffe42a, L0x7fffffe42c, L0x7fffffe42e] = [arr8160, arr8161, arr8162, arr8163, arr8164, arr8165, arr8166, arr8167] /\
    [L0x7fffffe430, L0x7fffffe432, L0x7fffffe434, L0x7fffffe436, L0x7fffffe438, L0x7fffffe43a, L0x7fffffe43c, L0x7fffffe43e] = [arr8170, arr8171, arr8172, arr8173, arr8174, arr8175, arr8176, arr8177] /\
    [L0x7fffffe440, L0x7fffffe442, L0x7fffffe444, L0x7fffffe446, L0x7fffffe448, L0x7fffffe44a, L0x7fffffe44c, L0x7fffffe44e] = [arr8180, arr8181, arr8182, arr8183, arr8184, arr8185, arr8186, arr8187] /\
    [L0x7fffffe450, L0x7fffffe452, L0x7fffffe454, L0x7fffffe456, L0x7fffffe458, L0x7fffffe45a, L0x7fffffe45c, L0x7fffffe45e] = [arr9000, arr9001, arr9002, arr9003, arr9004, arr9005, arr9006, arr9007] /\
    [L0x7fffffe460, L0x7fffffe462, L0x7fffffe464, L0x7fffffe466, L0x7fffffe468, L0x7fffffe46a, L0x7fffffe46c, L0x7fffffe46e] = [arr9010, arr9011, arr9012, arr9013, arr9014, arr9015, arr9016, arr9017] /\
    [L0x7fffffe470, L0x7fffffe472, L0x7fffffe474, L0x7fffffe476, L0x7fffffe478, L0x7fffffe47a, L0x7fffffe47c, L0x7fffffe47e] = [arr9020, arr9021, arr9022, arr9023, arr9024, arr9025, arr9026, arr9027] /\
    [L0x7fffffe480, L0x7fffffe482, L0x7fffffe484, L0x7fffffe486, L0x7fffffe488, L0x7fffffe48a, L0x7fffffe48c, L0x7fffffe48e] = [arr9030, arr9031, arr9032, arr9033, arr9034, arr9035, arr9036, arr9037] /\
    [L0x7fffffe490, L0x7fffffe492, L0x7fffffe494, L0x7fffffe496, L0x7fffffe498, L0x7fffffe49a, L0x7fffffe49c, L0x7fffffe49e] = [arr9040, arr9041, arr9042, arr9043, arr9044, arr9045, arr9046, arr9047] /\
    [L0x7fffffe4a0, L0x7fffffe4a2, L0x7fffffe4a4, L0x7fffffe4a6, L0x7fffffe4a8, L0x7fffffe4aa, L0x7fffffe4ac, L0x7fffffe4ae] = [arr9050, arr9051, arr9052, arr9053, arr9054, arr9055, arr9056, arr9057] /\
    [L0x7fffffe4b0, L0x7fffffe4b2, L0x7fffffe4b4, L0x7fffffe4b6, L0x7fffffe4b8, L0x7fffffe4ba, L0x7fffffe4bc, L0x7fffffe4be] = [arr9060, arr9061, arr9062, arr9063, arr9064, arr9065, arr9066, arr9067] /\
    [L0x7fffffe4c0, L0x7fffffe4c2, L0x7fffffe4c4, L0x7fffffe4c6, L0x7fffffe4c8, L0x7fffffe4ca, L0x7fffffe4cc, L0x7fffffe4ce] = [arr9070, arr9071, arr9072, arr9073, arr9074, arr9075, arr9076, arr9077] /\
    [L0x7fffffe4d0, L0x7fffffe4d2, L0x7fffffe4d4, L0x7fffffe4d6, L0x7fffffe4d8, L0x7fffffe4da, L0x7fffffe4dc, L0x7fffffe4de] = [arr9080, arr9081, arr9082, arr9083, arr9084, arr9085, arr9086, arr9087] /\
    [L0x7fffffe4e0, L0x7fffffe4e2, L0x7fffffe4e4, L0x7fffffe4e6, L0x7fffffe4e8, L0x7fffffe4ea, L0x7fffffe4ec, L0x7fffffe4ee] = [arr9100, arr9101, arr9102, arr9103, arr9104, arr9105, arr9106, arr9107] /\
    [L0x7fffffe4f0, L0x7fffffe4f2, L0x7fffffe4f4, L0x7fffffe4f6, L0x7fffffe4f8, L0x7fffffe4fa, L0x7fffffe4fc, L0x7fffffe4fe] = [arr9110, arr9111, arr9112, arr9113, arr9114, arr9115, arr9116, arr9117] /\
    [L0x7fffffe500, L0x7fffffe502, L0x7fffffe504, L0x7fffffe506, L0x7fffffe508, L0x7fffffe50a, L0x7fffffe50c, L0x7fffffe50e] = [arr9120, arr9121, arr9122, arr9123, arr9124, arr9125, arr9126, arr9127] /\
    [L0x7fffffe510, L0x7fffffe512, L0x7fffffe514, L0x7fffffe516, L0x7fffffe518, L0x7fffffe51a, L0x7fffffe51c, L0x7fffffe51e] = [arr9130, arr9131, arr9132, arr9133, arr9134, arr9135, arr9136, arr9137] /\
    [L0x7fffffe520, L0x7fffffe522, L0x7fffffe524, L0x7fffffe526, L0x7fffffe528, L0x7fffffe52a, L0x7fffffe52c, L0x7fffffe52e] = [arr9140, arr9141, arr9142, arr9143, arr9144, arr9145, arr9146, arr9147] /\
    [L0x7fffffe530, L0x7fffffe532, L0x7fffffe534, L0x7fffffe536, L0x7fffffe538, L0x7fffffe53a, L0x7fffffe53c, L0x7fffffe53e] = [arr9150, arr9151, arr9152, arr9153, arr9154, arr9155, arr9156, arr9157] /\
    [L0x7fffffe540, L0x7fffffe542, L0x7fffffe544, L0x7fffffe546, L0x7fffffe548, L0x7fffffe54a, L0x7fffffe54c, L0x7fffffe54e] = [arr9160, arr9161, arr9162, arr9163, arr9164, arr9165, arr9166, arr9167] /\
    [L0x7fffffe550, L0x7fffffe552, L0x7fffffe554, L0x7fffffe556, L0x7fffffe558, L0x7fffffe55a, L0x7fffffe55c, L0x7fffffe55e] = [arr9170, arr9171, arr9172, arr9173, arr9174, arr9175, arr9176, arr9177] /\
    [L0x7fffffe560, L0x7fffffe562, L0x7fffffe564, L0x7fffffe566, L0x7fffffe568, L0x7fffffe56a, L0x7fffffe56c, L0x7fffffe56e] = [arr9180, arr9181, arr9182, arr9183, arr9184, arr9185, arr9186, arr9187]
  &&
    [L0x7fffffda30, L0x7fffffda32, L0x7fffffda34, L0x7fffffda36, L0x7fffffda38, L0x7fffffda3a, L0x7fffffda3c, L0x7fffffda3e] = [arr0000, arr0001, arr0002, arr0003, arr0004, arr0005, arr0006, arr0007] /\
    [L0x7fffffda40, L0x7fffffda42, L0x7fffffda44, L0x7fffffda46, L0x7fffffda48, L0x7fffffda4a, L0x7fffffda4c, L0x7fffffda4e] = [arr0010, arr0011, arr0012, arr0013, arr0014, arr0015, arr0016, arr0017] /\
    [L0x7fffffda50, L0x7fffffda52, L0x7fffffda54, L0x7fffffda56, L0x7fffffda58, L0x7fffffda5a, L0x7fffffda5c, L0x7fffffda5e] = [arr0020, arr0021, arr0022, arr0023, arr0024, arr0025, arr0026, arr0027] /\
    [L0x7fffffda60, L0x7fffffda62, L0x7fffffda64, L0x7fffffda66, L0x7fffffda68, L0x7fffffda6a, L0x7fffffda6c, L0x7fffffda6e] = [arr0030, arr0031, arr0032, arr0033, arr0034, arr0035, arr0036, arr0037] /\
    [L0x7fffffda70, L0x7fffffda72, L0x7fffffda74, L0x7fffffda76, L0x7fffffda78, L0x7fffffda7a, L0x7fffffda7c, L0x7fffffda7e] = [arr0040, arr0041, arr0042, arr0043, arr0044, arr0045, arr0046, arr0047] /\
    [L0x7fffffda80, L0x7fffffda82, L0x7fffffda84, L0x7fffffda86, L0x7fffffda88, L0x7fffffda8a, L0x7fffffda8c, L0x7fffffda8e] = [arr0050, arr0051, arr0052, arr0053, arr0054, arr0055, arr0056, arr0057] /\
    [L0x7fffffda90, L0x7fffffda92, L0x7fffffda94, L0x7fffffda96, L0x7fffffda98, L0x7fffffda9a, L0x7fffffda9c, L0x7fffffda9e] = [arr0060, arr0061, arr0062, arr0063, arr0064, arr0065, arr0066, arr0067] /\
    [L0x7fffffdaa0, L0x7fffffdaa2, L0x7fffffdaa4, L0x7fffffdaa6, L0x7fffffdaa8, L0x7fffffdaaa, L0x7fffffdaac, L0x7fffffdaae] = [arr0070, arr0071, arr0072, arr0073, arr0074, arr0075, arr0076, arr0077] /\
    [L0x7fffffdab0, L0x7fffffdab2, L0x7fffffdab4, L0x7fffffdab6, L0x7fffffdab8, L0x7fffffdaba, L0x7fffffdabc, L0x7fffffdabe] = [arr0080, arr0081, arr0082, arr0083, arr0084, arr0085, arr0086, arr0087] /\
    [L0x7fffffdac0, L0x7fffffdac2, L0x7fffffdac4, L0x7fffffdac6, L0x7fffffdac8, L0x7fffffdaca, L0x7fffffdacc, L0x7fffffdace] = [arr0100, arr0101, arr0102, arr0103, arr0104, arr0105, arr0106, arr0107] /\
    [L0x7fffffdad0, L0x7fffffdad2, L0x7fffffdad4, L0x7fffffdad6, L0x7fffffdad8, L0x7fffffdada, L0x7fffffdadc, L0x7fffffdade] = [arr0110, arr0111, arr0112, arr0113, arr0114, arr0115, arr0116, arr0117] /\
    [L0x7fffffdae0, L0x7fffffdae2, L0x7fffffdae4, L0x7fffffdae6, L0x7fffffdae8, L0x7fffffdaea, L0x7fffffdaec, L0x7fffffdaee] = [arr0120, arr0121, arr0122, arr0123, arr0124, arr0125, arr0126, arr0127] /\
    [L0x7fffffdaf0, L0x7fffffdaf2, L0x7fffffdaf4, L0x7fffffdaf6, L0x7fffffdaf8, L0x7fffffdafa, L0x7fffffdafc, L0x7fffffdafe] = [arr0130, arr0131, arr0132, arr0133, arr0134, arr0135, arr0136, arr0137] /\
    [L0x7fffffdb00, L0x7fffffdb02, L0x7fffffdb04, L0x7fffffdb06, L0x7fffffdb08, L0x7fffffdb0a, L0x7fffffdb0c, L0x7fffffdb0e] = [arr0140, arr0141, arr0142, arr0143, arr0144, arr0145, arr0146, arr0147] /\
    [L0x7fffffdb10, L0x7fffffdb12, L0x7fffffdb14, L0x7fffffdb16, L0x7fffffdb18, L0x7fffffdb1a, L0x7fffffdb1c, L0x7fffffdb1e] = [arr0150, arr0151, arr0152, arr0153, arr0154, arr0155, arr0156, arr0157] /\
    [L0x7fffffdb20, L0x7fffffdb22, L0x7fffffdb24, L0x7fffffdb26, L0x7fffffdb28, L0x7fffffdb2a, L0x7fffffdb2c, L0x7fffffdb2e] = [arr0160, arr0161, arr0162, arr0163, arr0164, arr0165, arr0166, arr0167] /\
    [L0x7fffffdb30, L0x7fffffdb32, L0x7fffffdb34, L0x7fffffdb36, L0x7fffffdb38, L0x7fffffdb3a, L0x7fffffdb3c, L0x7fffffdb3e] = [arr0170, arr0171, arr0172, arr0173, arr0174, arr0175, arr0176, arr0177] /\
    [L0x7fffffdb40, L0x7fffffdb42, L0x7fffffdb44, L0x7fffffdb46, L0x7fffffdb48, L0x7fffffdb4a, L0x7fffffdb4c, L0x7fffffdb4e] = [arr0180, arr0181, arr0182, arr0183, arr0184, arr0185, arr0186, arr0187] /\
    [L0x7fffffdb50, L0x7fffffdb52, L0x7fffffdb54, L0x7fffffdb56, L0x7fffffdb58, L0x7fffffdb5a, L0x7fffffdb5c, L0x7fffffdb5e] = [arr1000, arr1001, arr1002, arr1003, arr1004, arr1005, arr1006, arr1007] /\
    [L0x7fffffdb60, L0x7fffffdb62, L0x7fffffdb64, L0x7fffffdb66, L0x7fffffdb68, L0x7fffffdb6a, L0x7fffffdb6c, L0x7fffffdb6e] = [arr1010, arr1011, arr1012, arr1013, arr1014, arr1015, arr1016, arr1017] /\
    [L0x7fffffdb70, L0x7fffffdb72, L0x7fffffdb74, L0x7fffffdb76, L0x7fffffdb78, L0x7fffffdb7a, L0x7fffffdb7c, L0x7fffffdb7e] = [arr1020, arr1021, arr1022, arr1023, arr1024, arr1025, arr1026, arr1027] /\
    [L0x7fffffdb80, L0x7fffffdb82, L0x7fffffdb84, L0x7fffffdb86, L0x7fffffdb88, L0x7fffffdb8a, L0x7fffffdb8c, L0x7fffffdb8e] = [arr1030, arr1031, arr1032, arr1033, arr1034, arr1035, arr1036, arr1037] /\
    [L0x7fffffdb90, L0x7fffffdb92, L0x7fffffdb94, L0x7fffffdb96, L0x7fffffdb98, L0x7fffffdb9a, L0x7fffffdb9c, L0x7fffffdb9e] = [arr1040, arr1041, arr1042, arr1043, arr1044, arr1045, arr1046, arr1047] /\
    [L0x7fffffdba0, L0x7fffffdba2, L0x7fffffdba4, L0x7fffffdba6, L0x7fffffdba8, L0x7fffffdbaa, L0x7fffffdbac, L0x7fffffdbae] = [arr1050, arr1051, arr1052, arr1053, arr1054, arr1055, arr1056, arr1057] /\
    [L0x7fffffdbb0, L0x7fffffdbb2, L0x7fffffdbb4, L0x7fffffdbb6, L0x7fffffdbb8, L0x7fffffdbba, L0x7fffffdbbc, L0x7fffffdbbe] = [arr1060, arr1061, arr1062, arr1063, arr1064, arr1065, arr1066, arr1067] /\
    [L0x7fffffdbc0, L0x7fffffdbc2, L0x7fffffdbc4, L0x7fffffdbc6, L0x7fffffdbc8, L0x7fffffdbca, L0x7fffffdbcc, L0x7fffffdbce] = [arr1070, arr1071, arr1072, arr1073, arr1074, arr1075, arr1076, arr1077] /\
    [L0x7fffffdbd0, L0x7fffffdbd2, L0x7fffffdbd4, L0x7fffffdbd6, L0x7fffffdbd8, L0x7fffffdbda, L0x7fffffdbdc, L0x7fffffdbde] = [arr1080, arr1081, arr1082, arr1083, arr1084, arr1085, arr1086, arr1087] /\
    [L0x7fffffdbe0, L0x7fffffdbe2, L0x7fffffdbe4, L0x7fffffdbe6, L0x7fffffdbe8, L0x7fffffdbea, L0x7fffffdbec, L0x7fffffdbee] = [arr1100, arr1101, arr1102, arr1103, arr1104, arr1105, arr1106, arr1107] /\
    [L0x7fffffdbf0, L0x7fffffdbf2, L0x7fffffdbf4, L0x7fffffdbf6, L0x7fffffdbf8, L0x7fffffdbfa, L0x7fffffdbfc, L0x7fffffdbfe] = [arr1110, arr1111, arr1112, arr1113, arr1114, arr1115, arr1116, arr1117] /\
    [L0x7fffffdc00, L0x7fffffdc02, L0x7fffffdc04, L0x7fffffdc06, L0x7fffffdc08, L0x7fffffdc0a, L0x7fffffdc0c, L0x7fffffdc0e] = [arr1120, arr1121, arr1122, arr1123, arr1124, arr1125, arr1126, arr1127] /\
    [L0x7fffffdc10, L0x7fffffdc12, L0x7fffffdc14, L0x7fffffdc16, L0x7fffffdc18, L0x7fffffdc1a, L0x7fffffdc1c, L0x7fffffdc1e] = [arr1130, arr1131, arr1132, arr1133, arr1134, arr1135, arr1136, arr1137] /\
    [L0x7fffffdc20, L0x7fffffdc22, L0x7fffffdc24, L0x7fffffdc26, L0x7fffffdc28, L0x7fffffdc2a, L0x7fffffdc2c, L0x7fffffdc2e] = [arr1140, arr1141, arr1142, arr1143, arr1144, arr1145, arr1146, arr1147] /\
    [L0x7fffffdc30, L0x7fffffdc32, L0x7fffffdc34, L0x7fffffdc36, L0x7fffffdc38, L0x7fffffdc3a, L0x7fffffdc3c, L0x7fffffdc3e] = [arr1150, arr1151, arr1152, arr1153, arr1154, arr1155, arr1156, arr1157] /\
    [L0x7fffffdc40, L0x7fffffdc42, L0x7fffffdc44, L0x7fffffdc46, L0x7fffffdc48, L0x7fffffdc4a, L0x7fffffdc4c, L0x7fffffdc4e] = [arr1160, arr1161, arr1162, arr1163, arr1164, arr1165, arr1166, arr1167] /\
    [L0x7fffffdc50, L0x7fffffdc52, L0x7fffffdc54, L0x7fffffdc56, L0x7fffffdc58, L0x7fffffdc5a, L0x7fffffdc5c, L0x7fffffdc5e] = [arr1170, arr1171, arr1172, arr1173, arr1174, arr1175, arr1176, arr1177] /\
    [L0x7fffffdc60, L0x7fffffdc62, L0x7fffffdc64, L0x7fffffdc66, L0x7fffffdc68, L0x7fffffdc6a, L0x7fffffdc6c, L0x7fffffdc6e] = [arr1180, arr1181, arr1182, arr1183, arr1184, arr1185, arr1186, arr1187] /\
    [L0x7fffffdc70, L0x7fffffdc72, L0x7fffffdc74, L0x7fffffdc76, L0x7fffffdc78, L0x7fffffdc7a, L0x7fffffdc7c, L0x7fffffdc7e] = [arr2000, arr2001, arr2002, arr2003, arr2004, arr2005, arr2006, arr2007] /\
    [L0x7fffffdc80, L0x7fffffdc82, L0x7fffffdc84, L0x7fffffdc86, L0x7fffffdc88, L0x7fffffdc8a, L0x7fffffdc8c, L0x7fffffdc8e] = [arr2010, arr2011, arr2012, arr2013, arr2014, arr2015, arr2016, arr2017] /\
    [L0x7fffffdc90, L0x7fffffdc92, L0x7fffffdc94, L0x7fffffdc96, L0x7fffffdc98, L0x7fffffdc9a, L0x7fffffdc9c, L0x7fffffdc9e] = [arr2020, arr2021, arr2022, arr2023, arr2024, arr2025, arr2026, arr2027] /\
    [L0x7fffffdca0, L0x7fffffdca2, L0x7fffffdca4, L0x7fffffdca6, L0x7fffffdca8, L0x7fffffdcaa, L0x7fffffdcac, L0x7fffffdcae] = [arr2030, arr2031, arr2032, arr2033, arr2034, arr2035, arr2036, arr2037] /\
    [L0x7fffffdcb0, L0x7fffffdcb2, L0x7fffffdcb4, L0x7fffffdcb6, L0x7fffffdcb8, L0x7fffffdcba, L0x7fffffdcbc, L0x7fffffdcbe] = [arr2040, arr2041, arr2042, arr2043, arr2044, arr2045, arr2046, arr2047] /\
    [L0x7fffffdcc0, L0x7fffffdcc2, L0x7fffffdcc4, L0x7fffffdcc6, L0x7fffffdcc8, L0x7fffffdcca, L0x7fffffdccc, L0x7fffffdcce] = [arr2050, arr2051, arr2052, arr2053, arr2054, arr2055, arr2056, arr2057] /\
    [L0x7fffffdcd0, L0x7fffffdcd2, L0x7fffffdcd4, L0x7fffffdcd6, L0x7fffffdcd8, L0x7fffffdcda, L0x7fffffdcdc, L0x7fffffdcde] = [arr2060, arr2061, arr2062, arr2063, arr2064, arr2065, arr2066, arr2067] /\
    [L0x7fffffdce0, L0x7fffffdce2, L0x7fffffdce4, L0x7fffffdce6, L0x7fffffdce8, L0x7fffffdcea, L0x7fffffdcec, L0x7fffffdcee] = [arr2070, arr2071, arr2072, arr2073, arr2074, arr2075, arr2076, arr2077] /\
    [L0x7fffffdcf0, L0x7fffffdcf2, L0x7fffffdcf4, L0x7fffffdcf6, L0x7fffffdcf8, L0x7fffffdcfa, L0x7fffffdcfc, L0x7fffffdcfe] = [arr2080, arr2081, arr2082, arr2083, arr2084, arr2085, arr2086, arr2087] /\
    [L0x7fffffdd00, L0x7fffffdd02, L0x7fffffdd04, L0x7fffffdd06, L0x7fffffdd08, L0x7fffffdd0a, L0x7fffffdd0c, L0x7fffffdd0e] = [arr2100, arr2101, arr2102, arr2103, arr2104, arr2105, arr2106, arr2107] /\
    [L0x7fffffdd10, L0x7fffffdd12, L0x7fffffdd14, L0x7fffffdd16, L0x7fffffdd18, L0x7fffffdd1a, L0x7fffffdd1c, L0x7fffffdd1e] = [arr2110, arr2111, arr2112, arr2113, arr2114, arr2115, arr2116, arr2117] /\
    [L0x7fffffdd20, L0x7fffffdd22, L0x7fffffdd24, L0x7fffffdd26, L0x7fffffdd28, L0x7fffffdd2a, L0x7fffffdd2c, L0x7fffffdd2e] = [arr2120, arr2121, arr2122, arr2123, arr2124, arr2125, arr2126, arr2127] /\
    [L0x7fffffdd30, L0x7fffffdd32, L0x7fffffdd34, L0x7fffffdd36, L0x7fffffdd38, L0x7fffffdd3a, L0x7fffffdd3c, L0x7fffffdd3e] = [arr2130, arr2131, arr2132, arr2133, arr2134, arr2135, arr2136, arr2137] /\
    [L0x7fffffdd40, L0x7fffffdd42, L0x7fffffdd44, L0x7fffffdd46, L0x7fffffdd48, L0x7fffffdd4a, L0x7fffffdd4c, L0x7fffffdd4e] = [arr2140, arr2141, arr2142, arr2143, arr2144, arr2145, arr2146, arr2147] /\
    [L0x7fffffdd50, L0x7fffffdd52, L0x7fffffdd54, L0x7fffffdd56, L0x7fffffdd58, L0x7fffffdd5a, L0x7fffffdd5c, L0x7fffffdd5e] = [arr2150, arr2151, arr2152, arr2153, arr2154, arr2155, arr2156, arr2157] /\
    [L0x7fffffdd60, L0x7fffffdd62, L0x7fffffdd64, L0x7fffffdd66, L0x7fffffdd68, L0x7fffffdd6a, L0x7fffffdd6c, L0x7fffffdd6e] = [arr2160, arr2161, arr2162, arr2163, arr2164, arr2165, arr2166, arr2167] /\
    [L0x7fffffdd70, L0x7fffffdd72, L0x7fffffdd74, L0x7fffffdd76, L0x7fffffdd78, L0x7fffffdd7a, L0x7fffffdd7c, L0x7fffffdd7e] = [arr2170, arr2171, arr2172, arr2173, arr2174, arr2175, arr2176, arr2177] /\
    [L0x7fffffdd80, L0x7fffffdd82, L0x7fffffdd84, L0x7fffffdd86, L0x7fffffdd88, L0x7fffffdd8a, L0x7fffffdd8c, L0x7fffffdd8e] = [arr2180, arr2181, arr2182, arr2183, arr2184, arr2185, arr2186, arr2187] /\
    [L0x7fffffdd90, L0x7fffffdd92, L0x7fffffdd94, L0x7fffffdd96, L0x7fffffdd98, L0x7fffffdd9a, L0x7fffffdd9c, L0x7fffffdd9e] = [arr3000, arr3001, arr3002, arr3003, arr3004, arr3005, arr3006, arr3007] /\
    [L0x7fffffdda0, L0x7fffffdda2, L0x7fffffdda4, L0x7fffffdda6, L0x7fffffdda8, L0x7fffffddaa, L0x7fffffddac, L0x7fffffddae] = [arr3010, arr3011, arr3012, arr3013, arr3014, arr3015, arr3016, arr3017] /\
    [L0x7fffffddb0, L0x7fffffddb2, L0x7fffffddb4, L0x7fffffddb6, L0x7fffffddb8, L0x7fffffddba, L0x7fffffddbc, L0x7fffffddbe] = [arr3020, arr3021, arr3022, arr3023, arr3024, arr3025, arr3026, arr3027] /\
    [L0x7fffffddc0, L0x7fffffddc2, L0x7fffffddc4, L0x7fffffddc6, L0x7fffffddc8, L0x7fffffddca, L0x7fffffddcc, L0x7fffffddce] = [arr3030, arr3031, arr3032, arr3033, arr3034, arr3035, arr3036, arr3037] /\
    [L0x7fffffddd0, L0x7fffffddd2, L0x7fffffddd4, L0x7fffffddd6, L0x7fffffddd8, L0x7fffffddda, L0x7fffffdddc, L0x7fffffddde] = [arr3040, arr3041, arr3042, arr3043, arr3044, arr3045, arr3046, arr3047] /\
    [L0x7fffffdde0, L0x7fffffdde2, L0x7fffffdde4, L0x7fffffdde6, L0x7fffffdde8, L0x7fffffddea, L0x7fffffddec, L0x7fffffddee] = [arr3050, arr3051, arr3052, arr3053, arr3054, arr3055, arr3056, arr3057] /\
    [L0x7fffffddf0, L0x7fffffddf2, L0x7fffffddf4, L0x7fffffddf6, L0x7fffffddf8, L0x7fffffddfa, L0x7fffffddfc, L0x7fffffddfe] = [arr3060, arr3061, arr3062, arr3063, arr3064, arr3065, arr3066, arr3067] /\
    [L0x7fffffde00, L0x7fffffde02, L0x7fffffde04, L0x7fffffde06, L0x7fffffde08, L0x7fffffde0a, L0x7fffffde0c, L0x7fffffde0e] = [arr3070, arr3071, arr3072, arr3073, arr3074, arr3075, arr3076, arr3077] /\
    [L0x7fffffde10, L0x7fffffde12, L0x7fffffde14, L0x7fffffde16, L0x7fffffde18, L0x7fffffde1a, L0x7fffffde1c, L0x7fffffde1e] = [arr3080, arr3081, arr3082, arr3083, arr3084, arr3085, arr3086, arr3087] /\
    [L0x7fffffde20, L0x7fffffde22, L0x7fffffde24, L0x7fffffde26, L0x7fffffde28, L0x7fffffde2a, L0x7fffffde2c, L0x7fffffde2e] = [arr3100, arr3101, arr3102, arr3103, arr3104, arr3105, arr3106, arr3107] /\
    [L0x7fffffde30, L0x7fffffde32, L0x7fffffde34, L0x7fffffde36, L0x7fffffde38, L0x7fffffde3a, L0x7fffffde3c, L0x7fffffde3e] = [arr3110, arr3111, arr3112, arr3113, arr3114, arr3115, arr3116, arr3117] /\
    [L0x7fffffde40, L0x7fffffde42, L0x7fffffde44, L0x7fffffde46, L0x7fffffde48, L0x7fffffde4a, L0x7fffffde4c, L0x7fffffde4e] = [arr3120, arr3121, arr3122, arr3123, arr3124, arr3125, arr3126, arr3127] /\
    [L0x7fffffde50, L0x7fffffde52, L0x7fffffde54, L0x7fffffde56, L0x7fffffde58, L0x7fffffde5a, L0x7fffffde5c, L0x7fffffde5e] = [arr3130, arr3131, arr3132, arr3133, arr3134, arr3135, arr3136, arr3137] /\
    [L0x7fffffde60, L0x7fffffde62, L0x7fffffde64, L0x7fffffde66, L0x7fffffde68, L0x7fffffde6a, L0x7fffffde6c, L0x7fffffde6e] = [arr3140, arr3141, arr3142, arr3143, arr3144, arr3145, arr3146, arr3147] /\
    [L0x7fffffde70, L0x7fffffde72, L0x7fffffde74, L0x7fffffde76, L0x7fffffde78, L0x7fffffde7a, L0x7fffffde7c, L0x7fffffde7e] = [arr3150, arr3151, arr3152, arr3153, arr3154, arr3155, arr3156, arr3157] /\
    [L0x7fffffde80, L0x7fffffde82, L0x7fffffde84, L0x7fffffde86, L0x7fffffde88, L0x7fffffde8a, L0x7fffffde8c, L0x7fffffde8e] = [arr3160, arr3161, arr3162, arr3163, arr3164, arr3165, arr3166, arr3167] /\
    [L0x7fffffde90, L0x7fffffde92, L0x7fffffde94, L0x7fffffde96, L0x7fffffde98, L0x7fffffde9a, L0x7fffffde9c, L0x7fffffde9e] = [arr3170, arr3171, arr3172, arr3173, arr3174, arr3175, arr3176, arr3177] /\
    [L0x7fffffdea0, L0x7fffffdea2, L0x7fffffdea4, L0x7fffffdea6, L0x7fffffdea8, L0x7fffffdeaa, L0x7fffffdeac, L0x7fffffdeae] = [arr3180, arr3181, arr3182, arr3183, arr3184, arr3185, arr3186, arr3187] /\
    [L0x7fffffdeb0, L0x7fffffdeb2, L0x7fffffdeb4, L0x7fffffdeb6, L0x7fffffdeb8, L0x7fffffdeba, L0x7fffffdebc, L0x7fffffdebe] = [arr4000, arr4001, arr4002, arr4003, arr4004, arr4005, arr4006, arr4007] /\
    [L0x7fffffdec0, L0x7fffffdec2, L0x7fffffdec4, L0x7fffffdec6, L0x7fffffdec8, L0x7fffffdeca, L0x7fffffdecc, L0x7fffffdece] = [arr4010, arr4011, arr4012, arr4013, arr4014, arr4015, arr4016, arr4017] /\
    [L0x7fffffded0, L0x7fffffded2, L0x7fffffded4, L0x7fffffded6, L0x7fffffded8, L0x7fffffdeda, L0x7fffffdedc, L0x7fffffdede] = [arr4020, arr4021, arr4022, arr4023, arr4024, arr4025, arr4026, arr4027] /\
    [L0x7fffffdee0, L0x7fffffdee2, L0x7fffffdee4, L0x7fffffdee6, L0x7fffffdee8, L0x7fffffdeea, L0x7fffffdeec, L0x7fffffdeee] = [arr4030, arr4031, arr4032, arr4033, arr4034, arr4035, arr4036, arr4037] /\
    [L0x7fffffdef0, L0x7fffffdef2, L0x7fffffdef4, L0x7fffffdef6, L0x7fffffdef8, L0x7fffffdefa, L0x7fffffdefc, L0x7fffffdefe] = [arr4040, arr4041, arr4042, arr4043, arr4044, arr4045, arr4046, arr4047] /\
    [L0x7fffffdf00, L0x7fffffdf02, L0x7fffffdf04, L0x7fffffdf06, L0x7fffffdf08, L0x7fffffdf0a, L0x7fffffdf0c, L0x7fffffdf0e] = [arr4050, arr4051, arr4052, arr4053, arr4054, arr4055, arr4056, arr4057] /\
    [L0x7fffffdf10, L0x7fffffdf12, L0x7fffffdf14, L0x7fffffdf16, L0x7fffffdf18, L0x7fffffdf1a, L0x7fffffdf1c, L0x7fffffdf1e] = [arr4060, arr4061, arr4062, arr4063, arr4064, arr4065, arr4066, arr4067] /\
    [L0x7fffffdf20, L0x7fffffdf22, L0x7fffffdf24, L0x7fffffdf26, L0x7fffffdf28, L0x7fffffdf2a, L0x7fffffdf2c, L0x7fffffdf2e] = [arr4070, arr4071, arr4072, arr4073, arr4074, arr4075, arr4076, arr4077] /\
    [L0x7fffffdf30, L0x7fffffdf32, L0x7fffffdf34, L0x7fffffdf36, L0x7fffffdf38, L0x7fffffdf3a, L0x7fffffdf3c, L0x7fffffdf3e] = [arr4080, arr4081, arr4082, arr4083, arr4084, arr4085, arr4086, arr4087] /\
    [L0x7fffffdf40, L0x7fffffdf42, L0x7fffffdf44, L0x7fffffdf46, L0x7fffffdf48, L0x7fffffdf4a, L0x7fffffdf4c, L0x7fffffdf4e] = [arr4100, arr4101, arr4102, arr4103, arr4104, arr4105, arr4106, arr4107] /\
    [L0x7fffffdf50, L0x7fffffdf52, L0x7fffffdf54, L0x7fffffdf56, L0x7fffffdf58, L0x7fffffdf5a, L0x7fffffdf5c, L0x7fffffdf5e] = [arr4110, arr4111, arr4112, arr4113, arr4114, arr4115, arr4116, arr4117] /\
    [L0x7fffffdf60, L0x7fffffdf62, L0x7fffffdf64, L0x7fffffdf66, L0x7fffffdf68, L0x7fffffdf6a, L0x7fffffdf6c, L0x7fffffdf6e] = [arr4120, arr4121, arr4122, arr4123, arr4124, arr4125, arr4126, arr4127] /\
    [L0x7fffffdf70, L0x7fffffdf72, L0x7fffffdf74, L0x7fffffdf76, L0x7fffffdf78, L0x7fffffdf7a, L0x7fffffdf7c, L0x7fffffdf7e] = [arr4130, arr4131, arr4132, arr4133, arr4134, arr4135, arr4136, arr4137] /\
    [L0x7fffffdf80, L0x7fffffdf82, L0x7fffffdf84, L0x7fffffdf86, L0x7fffffdf88, L0x7fffffdf8a, L0x7fffffdf8c, L0x7fffffdf8e] = [arr4140, arr4141, arr4142, arr4143, arr4144, arr4145, arr4146, arr4147] /\
    [L0x7fffffdf90, L0x7fffffdf92, L0x7fffffdf94, L0x7fffffdf96, L0x7fffffdf98, L0x7fffffdf9a, L0x7fffffdf9c, L0x7fffffdf9e] = [arr4150, arr4151, arr4152, arr4153, arr4154, arr4155, arr4156, arr4157] /\
    [L0x7fffffdfa0, L0x7fffffdfa2, L0x7fffffdfa4, L0x7fffffdfa6, L0x7fffffdfa8, L0x7fffffdfaa, L0x7fffffdfac, L0x7fffffdfae] = [arr4160, arr4161, arr4162, arr4163, arr4164, arr4165, arr4166, arr4167] /\
    [L0x7fffffdfb0, L0x7fffffdfb2, L0x7fffffdfb4, L0x7fffffdfb6, L0x7fffffdfb8, L0x7fffffdfba, L0x7fffffdfbc, L0x7fffffdfbe] = [arr4170, arr4171, arr4172, arr4173, arr4174, arr4175, arr4176, arr4177] /\
    [L0x7fffffdfc0, L0x7fffffdfc2, L0x7fffffdfc4, L0x7fffffdfc6, L0x7fffffdfc8, L0x7fffffdfca, L0x7fffffdfcc, L0x7fffffdfce] = [arr4180, arr4181, arr4182, arr4183, arr4184, arr4185, arr4186, arr4187] /\
    [L0x7fffffdfd0, L0x7fffffdfd2, L0x7fffffdfd4, L0x7fffffdfd6, L0x7fffffdfd8, L0x7fffffdfda, L0x7fffffdfdc, L0x7fffffdfde] = [arr5000, arr5001, arr5002, arr5003, arr5004, arr5005, arr5006, arr5007] /\
    [L0x7fffffdfe0, L0x7fffffdfe2, L0x7fffffdfe4, L0x7fffffdfe6, L0x7fffffdfe8, L0x7fffffdfea, L0x7fffffdfec, L0x7fffffdfee] = [arr5010, arr5011, arr5012, arr5013, arr5014, arr5015, arr5016, arr5017] /\
    [L0x7fffffdff0, L0x7fffffdff2, L0x7fffffdff4, L0x7fffffdff6, L0x7fffffdff8, L0x7fffffdffa, L0x7fffffdffc, L0x7fffffdffe] = [arr5020, arr5021, arr5022, arr5023, arr5024, arr5025, arr5026, arr5027] /\
    [L0x7fffffe000, L0x7fffffe002, L0x7fffffe004, L0x7fffffe006, L0x7fffffe008, L0x7fffffe00a, L0x7fffffe00c, L0x7fffffe00e] = [arr5030, arr5031, arr5032, arr5033, arr5034, arr5035, arr5036, arr5037] /\
    [L0x7fffffe010, L0x7fffffe012, L0x7fffffe014, L0x7fffffe016, L0x7fffffe018, L0x7fffffe01a, L0x7fffffe01c, L0x7fffffe01e] = [arr5040, arr5041, arr5042, arr5043, arr5044, arr5045, arr5046, arr5047] /\
    [L0x7fffffe020, L0x7fffffe022, L0x7fffffe024, L0x7fffffe026, L0x7fffffe028, L0x7fffffe02a, L0x7fffffe02c, L0x7fffffe02e] = [arr5050, arr5051, arr5052, arr5053, arr5054, arr5055, arr5056, arr5057] /\
    [L0x7fffffe030, L0x7fffffe032, L0x7fffffe034, L0x7fffffe036, L0x7fffffe038, L0x7fffffe03a, L0x7fffffe03c, L0x7fffffe03e] = [arr5060, arr5061, arr5062, arr5063, arr5064, arr5065, arr5066, arr5067] /\
    [L0x7fffffe040, L0x7fffffe042, L0x7fffffe044, L0x7fffffe046, L0x7fffffe048, L0x7fffffe04a, L0x7fffffe04c, L0x7fffffe04e] = [arr5070, arr5071, arr5072, arr5073, arr5074, arr5075, arr5076, arr5077] /\
    [L0x7fffffe050, L0x7fffffe052, L0x7fffffe054, L0x7fffffe056, L0x7fffffe058, L0x7fffffe05a, L0x7fffffe05c, L0x7fffffe05e] = [arr5080, arr5081, arr5082, arr5083, arr5084, arr5085, arr5086, arr5087] /\
    [L0x7fffffe060, L0x7fffffe062, L0x7fffffe064, L0x7fffffe066, L0x7fffffe068, L0x7fffffe06a, L0x7fffffe06c, L0x7fffffe06e] = [arr5100, arr5101, arr5102, arr5103, arr5104, arr5105, arr5106, arr5107] /\
    [L0x7fffffe070, L0x7fffffe072, L0x7fffffe074, L0x7fffffe076, L0x7fffffe078, L0x7fffffe07a, L0x7fffffe07c, L0x7fffffe07e] = [arr5110, arr5111, arr5112, arr5113, arr5114, arr5115, arr5116, arr5117] /\
    [L0x7fffffe080, L0x7fffffe082, L0x7fffffe084, L0x7fffffe086, L0x7fffffe088, L0x7fffffe08a, L0x7fffffe08c, L0x7fffffe08e] = [arr5120, arr5121, arr5122, arr5123, arr5124, arr5125, arr5126, arr5127] /\
    [L0x7fffffe090, L0x7fffffe092, L0x7fffffe094, L0x7fffffe096, L0x7fffffe098, L0x7fffffe09a, L0x7fffffe09c, L0x7fffffe09e] = [arr5130, arr5131, arr5132, arr5133, arr5134, arr5135, arr5136, arr5137] /\
    [L0x7fffffe0a0, L0x7fffffe0a2, L0x7fffffe0a4, L0x7fffffe0a6, L0x7fffffe0a8, L0x7fffffe0aa, L0x7fffffe0ac, L0x7fffffe0ae] = [arr5140, arr5141, arr5142, arr5143, arr5144, arr5145, arr5146, arr5147] /\
    [L0x7fffffe0b0, L0x7fffffe0b2, L0x7fffffe0b4, L0x7fffffe0b6, L0x7fffffe0b8, L0x7fffffe0ba, L0x7fffffe0bc, L0x7fffffe0be] = [arr5150, arr5151, arr5152, arr5153, arr5154, arr5155, arr5156, arr5157] /\
    [L0x7fffffe0c0, L0x7fffffe0c2, L0x7fffffe0c4, L0x7fffffe0c6, L0x7fffffe0c8, L0x7fffffe0ca, L0x7fffffe0cc, L0x7fffffe0ce] = [arr5160, arr5161, arr5162, arr5163, arr5164, arr5165, arr5166, arr5167] /\
    [L0x7fffffe0d0, L0x7fffffe0d2, L0x7fffffe0d4, L0x7fffffe0d6, L0x7fffffe0d8, L0x7fffffe0da, L0x7fffffe0dc, L0x7fffffe0de] = [arr5170, arr5171, arr5172, arr5173, arr5174, arr5175, arr5176, arr5177] /\
    [L0x7fffffe0e0, L0x7fffffe0e2, L0x7fffffe0e4, L0x7fffffe0e6, L0x7fffffe0e8, L0x7fffffe0ea, L0x7fffffe0ec, L0x7fffffe0ee] = [arr5180, arr5181, arr5182, arr5183, arr5184, arr5185, arr5186, arr5187] /\
    [L0x7fffffe0f0, L0x7fffffe0f2, L0x7fffffe0f4, L0x7fffffe0f6, L0x7fffffe0f8, L0x7fffffe0fa, L0x7fffffe0fc, L0x7fffffe0fe] = [arr6000, arr6001, arr6002, arr6003, arr6004, arr6005, arr6006, arr6007] /\
    [L0x7fffffe100, L0x7fffffe102, L0x7fffffe104, L0x7fffffe106, L0x7fffffe108, L0x7fffffe10a, L0x7fffffe10c, L0x7fffffe10e] = [arr6010, arr6011, arr6012, arr6013, arr6014, arr6015, arr6016, arr6017] /\
    [L0x7fffffe110, L0x7fffffe112, L0x7fffffe114, L0x7fffffe116, L0x7fffffe118, L0x7fffffe11a, L0x7fffffe11c, L0x7fffffe11e] = [arr6020, arr6021, arr6022, arr6023, arr6024, arr6025, arr6026, arr6027] /\
    [L0x7fffffe120, L0x7fffffe122, L0x7fffffe124, L0x7fffffe126, L0x7fffffe128, L0x7fffffe12a, L0x7fffffe12c, L0x7fffffe12e] = [arr6030, arr6031, arr6032, arr6033, arr6034, arr6035, arr6036, arr6037] /\
    [L0x7fffffe130, L0x7fffffe132, L0x7fffffe134, L0x7fffffe136, L0x7fffffe138, L0x7fffffe13a, L0x7fffffe13c, L0x7fffffe13e] = [arr6040, arr6041, arr6042, arr6043, arr6044, arr6045, arr6046, arr6047] /\
    [L0x7fffffe140, L0x7fffffe142, L0x7fffffe144, L0x7fffffe146, L0x7fffffe148, L0x7fffffe14a, L0x7fffffe14c, L0x7fffffe14e] = [arr6050, arr6051, arr6052, arr6053, arr6054, arr6055, arr6056, arr6057] /\
    [L0x7fffffe150, L0x7fffffe152, L0x7fffffe154, L0x7fffffe156, L0x7fffffe158, L0x7fffffe15a, L0x7fffffe15c, L0x7fffffe15e] = [arr6060, arr6061, arr6062, arr6063, arr6064, arr6065, arr6066, arr6067] /\
    [L0x7fffffe160, L0x7fffffe162, L0x7fffffe164, L0x7fffffe166, L0x7fffffe168, L0x7fffffe16a, L0x7fffffe16c, L0x7fffffe16e] = [arr6070, arr6071, arr6072, arr6073, arr6074, arr6075, arr6076, arr6077] /\
    [L0x7fffffe170, L0x7fffffe172, L0x7fffffe174, L0x7fffffe176, L0x7fffffe178, L0x7fffffe17a, L0x7fffffe17c, L0x7fffffe17e] = [arr6080, arr6081, arr6082, arr6083, arr6084, arr6085, arr6086, arr6087] /\
    [L0x7fffffe180, L0x7fffffe182, L0x7fffffe184, L0x7fffffe186, L0x7fffffe188, L0x7fffffe18a, L0x7fffffe18c, L0x7fffffe18e] = [arr6100, arr6101, arr6102, arr6103, arr6104, arr6105, arr6106, arr6107] /\
    [L0x7fffffe190, L0x7fffffe192, L0x7fffffe194, L0x7fffffe196, L0x7fffffe198, L0x7fffffe19a, L0x7fffffe19c, L0x7fffffe19e] = [arr6110, arr6111, arr6112, arr6113, arr6114, arr6115, arr6116, arr6117] /\
    [L0x7fffffe1a0, L0x7fffffe1a2, L0x7fffffe1a4, L0x7fffffe1a6, L0x7fffffe1a8, L0x7fffffe1aa, L0x7fffffe1ac, L0x7fffffe1ae] = [arr6120, arr6121, arr6122, arr6123, arr6124, arr6125, arr6126, arr6127] /\
    [L0x7fffffe1b0, L0x7fffffe1b2, L0x7fffffe1b4, L0x7fffffe1b6, L0x7fffffe1b8, L0x7fffffe1ba, L0x7fffffe1bc, L0x7fffffe1be] = [arr6130, arr6131, arr6132, arr6133, arr6134, arr6135, arr6136, arr6137] /\
    [L0x7fffffe1c0, L0x7fffffe1c2, L0x7fffffe1c4, L0x7fffffe1c6, L0x7fffffe1c8, L0x7fffffe1ca, L0x7fffffe1cc, L0x7fffffe1ce] = [arr6140, arr6141, arr6142, arr6143, arr6144, arr6145, arr6146, arr6147] /\
    [L0x7fffffe1d0, L0x7fffffe1d2, L0x7fffffe1d4, L0x7fffffe1d6, L0x7fffffe1d8, L0x7fffffe1da, L0x7fffffe1dc, L0x7fffffe1de] = [arr6150, arr6151, arr6152, arr6153, arr6154, arr6155, arr6156, arr6157] /\
    [L0x7fffffe1e0, L0x7fffffe1e2, L0x7fffffe1e4, L0x7fffffe1e6, L0x7fffffe1e8, L0x7fffffe1ea, L0x7fffffe1ec, L0x7fffffe1ee] = [arr6160, arr6161, arr6162, arr6163, arr6164, arr6165, arr6166, arr6167] /\
    [L0x7fffffe1f0, L0x7fffffe1f2, L0x7fffffe1f4, L0x7fffffe1f6, L0x7fffffe1f8, L0x7fffffe1fa, L0x7fffffe1fc, L0x7fffffe1fe] = [arr6170, arr6171, arr6172, arr6173, arr6174, arr6175, arr6176, arr6177] /\
    [L0x7fffffe200, L0x7fffffe202, L0x7fffffe204, L0x7fffffe206, L0x7fffffe208, L0x7fffffe20a, L0x7fffffe20c, L0x7fffffe20e] = [arr6180, arr6181, arr6182, arr6183, arr6184, arr6185, arr6186, arr6187] /\
    [L0x7fffffe210, L0x7fffffe212, L0x7fffffe214, L0x7fffffe216, L0x7fffffe218, L0x7fffffe21a, L0x7fffffe21c, L0x7fffffe21e] = [arr7000, arr7001, arr7002, arr7003, arr7004, arr7005, arr7006, arr7007] /\
    [L0x7fffffe220, L0x7fffffe222, L0x7fffffe224, L0x7fffffe226, L0x7fffffe228, L0x7fffffe22a, L0x7fffffe22c, L0x7fffffe22e] = [arr7010, arr7011, arr7012, arr7013, arr7014, arr7015, arr7016, arr7017] /\
    [L0x7fffffe230, L0x7fffffe232, L0x7fffffe234, L0x7fffffe236, L0x7fffffe238, L0x7fffffe23a, L0x7fffffe23c, L0x7fffffe23e] = [arr7020, arr7021, arr7022, arr7023, arr7024, arr7025, arr7026, arr7027] /\
    [L0x7fffffe240, L0x7fffffe242, L0x7fffffe244, L0x7fffffe246, L0x7fffffe248, L0x7fffffe24a, L0x7fffffe24c, L0x7fffffe24e] = [arr7030, arr7031, arr7032, arr7033, arr7034, arr7035, arr7036, arr7037] /\
    [L0x7fffffe250, L0x7fffffe252, L0x7fffffe254, L0x7fffffe256, L0x7fffffe258, L0x7fffffe25a, L0x7fffffe25c, L0x7fffffe25e] = [arr7040, arr7041, arr7042, arr7043, arr7044, arr7045, arr7046, arr7047] /\
    [L0x7fffffe260, L0x7fffffe262, L0x7fffffe264, L0x7fffffe266, L0x7fffffe268, L0x7fffffe26a, L0x7fffffe26c, L0x7fffffe26e] = [arr7050, arr7051, arr7052, arr7053, arr7054, arr7055, arr7056, arr7057] /\
    [L0x7fffffe270, L0x7fffffe272, L0x7fffffe274, L0x7fffffe276, L0x7fffffe278, L0x7fffffe27a, L0x7fffffe27c, L0x7fffffe27e] = [arr7060, arr7061, arr7062, arr7063, arr7064, arr7065, arr7066, arr7067] /\
    [L0x7fffffe280, L0x7fffffe282, L0x7fffffe284, L0x7fffffe286, L0x7fffffe288, L0x7fffffe28a, L0x7fffffe28c, L0x7fffffe28e] = [arr7070, arr7071, arr7072, arr7073, arr7074, arr7075, arr7076, arr7077] /\
    [L0x7fffffe290, L0x7fffffe292, L0x7fffffe294, L0x7fffffe296, L0x7fffffe298, L0x7fffffe29a, L0x7fffffe29c, L0x7fffffe29e] = [arr7080, arr7081, arr7082, arr7083, arr7084, arr7085, arr7086, arr7087] /\
    [L0x7fffffe2a0, L0x7fffffe2a2, L0x7fffffe2a4, L0x7fffffe2a6, L0x7fffffe2a8, L0x7fffffe2aa, L0x7fffffe2ac, L0x7fffffe2ae] = [arr7100, arr7101, arr7102, arr7103, arr7104, arr7105, arr7106, arr7107] /\
    [L0x7fffffe2b0, L0x7fffffe2b2, L0x7fffffe2b4, L0x7fffffe2b6, L0x7fffffe2b8, L0x7fffffe2ba, L0x7fffffe2bc, L0x7fffffe2be] = [arr7110, arr7111, arr7112, arr7113, arr7114, arr7115, arr7116, arr7117] /\
    [L0x7fffffe2c0, L0x7fffffe2c2, L0x7fffffe2c4, L0x7fffffe2c6, L0x7fffffe2c8, L0x7fffffe2ca, L0x7fffffe2cc, L0x7fffffe2ce] = [arr7120, arr7121, arr7122, arr7123, arr7124, arr7125, arr7126, arr7127] /\
    [L0x7fffffe2d0, L0x7fffffe2d2, L0x7fffffe2d4, L0x7fffffe2d6, L0x7fffffe2d8, L0x7fffffe2da, L0x7fffffe2dc, L0x7fffffe2de] = [arr7130, arr7131, arr7132, arr7133, arr7134, arr7135, arr7136, arr7137] /\
    [L0x7fffffe2e0, L0x7fffffe2e2, L0x7fffffe2e4, L0x7fffffe2e6, L0x7fffffe2e8, L0x7fffffe2ea, L0x7fffffe2ec, L0x7fffffe2ee] = [arr7140, arr7141, arr7142, arr7143, arr7144, arr7145, arr7146, arr7147] /\
    [L0x7fffffe2f0, L0x7fffffe2f2, L0x7fffffe2f4, L0x7fffffe2f6, L0x7fffffe2f8, L0x7fffffe2fa, L0x7fffffe2fc, L0x7fffffe2fe] = [arr7150, arr7151, arr7152, arr7153, arr7154, arr7155, arr7156, arr7157] /\
    [L0x7fffffe300, L0x7fffffe302, L0x7fffffe304, L0x7fffffe306, L0x7fffffe308, L0x7fffffe30a, L0x7fffffe30c, L0x7fffffe30e] = [arr7160, arr7161, arr7162, arr7163, arr7164, arr7165, arr7166, arr7167] /\
    [L0x7fffffe310, L0x7fffffe312, L0x7fffffe314, L0x7fffffe316, L0x7fffffe318, L0x7fffffe31a, L0x7fffffe31c, L0x7fffffe31e] = [arr7170, arr7171, arr7172, arr7173, arr7174, arr7175, arr7176, arr7177] /\
    [L0x7fffffe320, L0x7fffffe322, L0x7fffffe324, L0x7fffffe326, L0x7fffffe328, L0x7fffffe32a, L0x7fffffe32c, L0x7fffffe32e] = [arr7180, arr7181, arr7182, arr7183, arr7184, arr7185, arr7186, arr7187] /\
    [L0x7fffffe330, L0x7fffffe332, L0x7fffffe334, L0x7fffffe336, L0x7fffffe338, L0x7fffffe33a, L0x7fffffe33c, L0x7fffffe33e] = [arr8000, arr8001, arr8002, arr8003, arr8004, arr8005, arr8006, arr8007] /\
    [L0x7fffffe340, L0x7fffffe342, L0x7fffffe344, L0x7fffffe346, L0x7fffffe348, L0x7fffffe34a, L0x7fffffe34c, L0x7fffffe34e] = [arr8010, arr8011, arr8012, arr8013, arr8014, arr8015, arr8016, arr8017] /\
    [L0x7fffffe350, L0x7fffffe352, L0x7fffffe354, L0x7fffffe356, L0x7fffffe358, L0x7fffffe35a, L0x7fffffe35c, L0x7fffffe35e] = [arr8020, arr8021, arr8022, arr8023, arr8024, arr8025, arr8026, arr8027] /\
    [L0x7fffffe360, L0x7fffffe362, L0x7fffffe364, L0x7fffffe366, L0x7fffffe368, L0x7fffffe36a, L0x7fffffe36c, L0x7fffffe36e] = [arr8030, arr8031, arr8032, arr8033, arr8034, arr8035, arr8036, arr8037] /\
    [L0x7fffffe370, L0x7fffffe372, L0x7fffffe374, L0x7fffffe376, L0x7fffffe378, L0x7fffffe37a, L0x7fffffe37c, L0x7fffffe37e] = [arr8040, arr8041, arr8042, arr8043, arr8044, arr8045, arr8046, arr8047] /\
    [L0x7fffffe380, L0x7fffffe382, L0x7fffffe384, L0x7fffffe386, L0x7fffffe388, L0x7fffffe38a, L0x7fffffe38c, L0x7fffffe38e] = [arr8050, arr8051, arr8052, arr8053, arr8054, arr8055, arr8056, arr8057] /\
    [L0x7fffffe390, L0x7fffffe392, L0x7fffffe394, L0x7fffffe396, L0x7fffffe398, L0x7fffffe39a, L0x7fffffe39c, L0x7fffffe39e] = [arr8060, arr8061, arr8062, arr8063, arr8064, arr8065, arr8066, arr8067] /\
    [L0x7fffffe3a0, L0x7fffffe3a2, L0x7fffffe3a4, L0x7fffffe3a6, L0x7fffffe3a8, L0x7fffffe3aa, L0x7fffffe3ac, L0x7fffffe3ae] = [arr8070, arr8071, arr8072, arr8073, arr8074, arr8075, arr8076, arr8077] /\
    [L0x7fffffe3b0, L0x7fffffe3b2, L0x7fffffe3b4, L0x7fffffe3b6, L0x7fffffe3b8, L0x7fffffe3ba, L0x7fffffe3bc, L0x7fffffe3be] = [arr8080, arr8081, arr8082, arr8083, arr8084, arr8085, arr8086, arr8087] /\
    [L0x7fffffe3c0, L0x7fffffe3c2, L0x7fffffe3c4, L0x7fffffe3c6, L0x7fffffe3c8, L0x7fffffe3ca, L0x7fffffe3cc, L0x7fffffe3ce] = [arr8100, arr8101, arr8102, arr8103, arr8104, arr8105, arr8106, arr8107] /\
    [L0x7fffffe3d0, L0x7fffffe3d2, L0x7fffffe3d4, L0x7fffffe3d6, L0x7fffffe3d8, L0x7fffffe3da, L0x7fffffe3dc, L0x7fffffe3de] = [arr8110, arr8111, arr8112, arr8113, arr8114, arr8115, arr8116, arr8117] /\
    [L0x7fffffe3e0, L0x7fffffe3e2, L0x7fffffe3e4, L0x7fffffe3e6, L0x7fffffe3e8, L0x7fffffe3ea, L0x7fffffe3ec, L0x7fffffe3ee] = [arr8120, arr8121, arr8122, arr8123, arr8124, arr8125, arr8126, arr8127] /\
    [L0x7fffffe3f0, L0x7fffffe3f2, L0x7fffffe3f4, L0x7fffffe3f6, L0x7fffffe3f8, L0x7fffffe3fa, L0x7fffffe3fc, L0x7fffffe3fe] = [arr8130, arr8131, arr8132, arr8133, arr8134, arr8135, arr8136, arr8137] /\
    [L0x7fffffe400, L0x7fffffe402, L0x7fffffe404, L0x7fffffe406, L0x7fffffe408, L0x7fffffe40a, L0x7fffffe40c, L0x7fffffe40e] = [arr8140, arr8141, arr8142, arr8143, arr8144, arr8145, arr8146, arr8147] /\
    [L0x7fffffe410, L0x7fffffe412, L0x7fffffe414, L0x7fffffe416, L0x7fffffe418, L0x7fffffe41a, L0x7fffffe41c, L0x7fffffe41e] = [arr8150, arr8151, arr8152, arr8153, arr8154, arr8155, arr8156, arr8157] /\
    [L0x7fffffe420, L0x7fffffe422, L0x7fffffe424, L0x7fffffe426, L0x7fffffe428, L0x7fffffe42a, L0x7fffffe42c, L0x7fffffe42e] = [arr8160, arr8161, arr8162, arr8163, arr8164, arr8165, arr8166, arr8167] /\
    [L0x7fffffe430, L0x7fffffe432, L0x7fffffe434, L0x7fffffe436, L0x7fffffe438, L0x7fffffe43a, L0x7fffffe43c, L0x7fffffe43e] = [arr8170, arr8171, arr8172, arr8173, arr8174, arr8175, arr8176, arr8177] /\
    [L0x7fffffe440, L0x7fffffe442, L0x7fffffe444, L0x7fffffe446, L0x7fffffe448, L0x7fffffe44a, L0x7fffffe44c, L0x7fffffe44e] = [arr8180, arr8181, arr8182, arr8183, arr8184, arr8185, arr8186, arr8187] /\
    [L0x7fffffe450, L0x7fffffe452, L0x7fffffe454, L0x7fffffe456, L0x7fffffe458, L0x7fffffe45a, L0x7fffffe45c, L0x7fffffe45e] = [arr9000, arr9001, arr9002, arr9003, arr9004, arr9005, arr9006, arr9007] /\
    [L0x7fffffe460, L0x7fffffe462, L0x7fffffe464, L0x7fffffe466, L0x7fffffe468, L0x7fffffe46a, L0x7fffffe46c, L0x7fffffe46e] = [arr9010, arr9011, arr9012, arr9013, arr9014, arr9015, arr9016, arr9017] /\
    [L0x7fffffe470, L0x7fffffe472, L0x7fffffe474, L0x7fffffe476, L0x7fffffe478, L0x7fffffe47a, L0x7fffffe47c, L0x7fffffe47e] = [arr9020, arr9021, arr9022, arr9023, arr9024, arr9025, arr9026, arr9027] /\
    [L0x7fffffe480, L0x7fffffe482, L0x7fffffe484, L0x7fffffe486, L0x7fffffe488, L0x7fffffe48a, L0x7fffffe48c, L0x7fffffe48e] = [arr9030, arr9031, arr9032, arr9033, arr9034, arr9035, arr9036, arr9037] /\
    [L0x7fffffe490, L0x7fffffe492, L0x7fffffe494, L0x7fffffe496, L0x7fffffe498, L0x7fffffe49a, L0x7fffffe49c, L0x7fffffe49e] = [arr9040, arr9041, arr9042, arr9043, arr9044, arr9045, arr9046, arr9047] /\
    [L0x7fffffe4a0, L0x7fffffe4a2, L0x7fffffe4a4, L0x7fffffe4a6, L0x7fffffe4a8, L0x7fffffe4aa, L0x7fffffe4ac, L0x7fffffe4ae] = [arr9050, arr9051, arr9052, arr9053, arr9054, arr9055, arr9056, arr9057] /\
    [L0x7fffffe4b0, L0x7fffffe4b2, L0x7fffffe4b4, L0x7fffffe4b6, L0x7fffffe4b8, L0x7fffffe4ba, L0x7fffffe4bc, L0x7fffffe4be] = [arr9060, arr9061, arr9062, arr9063, arr9064, arr9065, arr9066, arr9067] /\
    [L0x7fffffe4c0, L0x7fffffe4c2, L0x7fffffe4c4, L0x7fffffe4c6, L0x7fffffe4c8, L0x7fffffe4ca, L0x7fffffe4cc, L0x7fffffe4ce] = [arr9070, arr9071, arr9072, arr9073, arr9074, arr9075, arr9076, arr9077] /\
    [L0x7fffffe4d0, L0x7fffffe4d2, L0x7fffffe4d4, L0x7fffffe4d6, L0x7fffffe4d8, L0x7fffffe4da, L0x7fffffe4dc, L0x7fffffe4de] = [arr9080, arr9081, arr9082, arr9083, arr9084, arr9085, arr9086, arr9087] /\
    [L0x7fffffe4e0, L0x7fffffe4e2, L0x7fffffe4e4, L0x7fffffe4e6, L0x7fffffe4e8, L0x7fffffe4ea, L0x7fffffe4ec, L0x7fffffe4ee] = [arr9100, arr9101, arr9102, arr9103, arr9104, arr9105, arr9106, arr9107] /\
    [L0x7fffffe4f0, L0x7fffffe4f2, L0x7fffffe4f4, L0x7fffffe4f6, L0x7fffffe4f8, L0x7fffffe4fa, L0x7fffffe4fc, L0x7fffffe4fe] = [arr9110, arr9111, arr9112, arr9113, arr9114, arr9115, arr9116, arr9117] /\
    [L0x7fffffe500, L0x7fffffe502, L0x7fffffe504, L0x7fffffe506, L0x7fffffe508, L0x7fffffe50a, L0x7fffffe50c, L0x7fffffe50e] = [arr9120, arr9121, arr9122, arr9123, arr9124, arr9125, arr9126, arr9127] /\
    [L0x7fffffe510, L0x7fffffe512, L0x7fffffe514, L0x7fffffe516, L0x7fffffe518, L0x7fffffe51a, L0x7fffffe51c, L0x7fffffe51e] = [arr9130, arr9131, arr9132, arr9133, arr9134, arr9135, arr9136, arr9137] /\
    [L0x7fffffe520, L0x7fffffe522, L0x7fffffe524, L0x7fffffe526, L0x7fffffe528, L0x7fffffe52a, L0x7fffffe52c, L0x7fffffe52e] = [arr9140, arr9141, arr9142, arr9143, arr9144, arr9145, arr9146, arr9147] /\
    [L0x7fffffe530, L0x7fffffe532, L0x7fffffe534, L0x7fffffe536, L0x7fffffe538, L0x7fffffe53a, L0x7fffffe53c, L0x7fffffe53e] = [arr9150, arr9151, arr9152, arr9153, arr9154, arr9155, arr9156, arr9157] /\
    [L0x7fffffe540, L0x7fffffe542, L0x7fffffe544, L0x7fffffe546, L0x7fffffe548, L0x7fffffe54a, L0x7fffffe54c, L0x7fffffe54e] = [arr9160, arr9161, arr9162, arr9163, arr9164, arr9165, arr9166, arr9167] /\
    [L0x7fffffe550, L0x7fffffe552, L0x7fffffe554, L0x7fffffe556, L0x7fffffe558, L0x7fffffe55a, L0x7fffffe55c, L0x7fffffe55e] = [arr9170, arr9171, arr9172, arr9173, arr9174, arr9175, arr9176, arr9177] /\
    [L0x7fffffe560, L0x7fffffe562, L0x7fffffe564, L0x7fffffe566, L0x7fffffe568, L0x7fffffe56a, L0x7fffffe56c, L0x7fffffe56e] = [arr9180, arr9181, arr9182, arr9183, arr9184, arr9185, arr9186, arr9187];


## i_iter


### k0_iter


#### load

(* ldr	q7, [x19, #112]                             #! EA = L0x7fffffdaa0; Value = 0x0000000000000000; PC = 0x55555512f0 *)
mov %v7 [L0x7fffffdaa0,L0x7fffffdaa2,L0x7fffffdaa4,L0x7fffffdaa6,L0x7fffffdaa8,L0x7fffffdaaa,L0x7fffffdaac,L0x7fffffdaae];
(* ldr	q6, [x19, #96]                              #! EA = L0x7fffffda90; Value = 0x0000000000000000; PC = 0x55555512f4 *)
mov %v6 [L0x7fffffda90,L0x7fffffda92,L0x7fffffda94,L0x7fffffda96,L0x7fffffda98,L0x7fffffda9a,L0x7fffffda9c,L0x7fffffda9e];
(* ldr	q5, [x19, #80]                              #! EA = L0x7fffffda80; Value = 0x0000000000000000; PC = 0x55555512f8 *)
mov %v5 [L0x7fffffda80,L0x7fffffda82,L0x7fffffda84,L0x7fffffda86,L0x7fffffda88,L0x7fffffda8a,L0x7fffffda8c,L0x7fffffda8e];
(* ldr	q4, [x19, #64]                              #! EA = L0x7fffffda70; Value = 0x0000000000000000; PC = 0x55555512fc *)
mov %v4 [L0x7fffffda70,L0x7fffffda72,L0x7fffffda74,L0x7fffffda76,L0x7fffffda78,L0x7fffffda7a,L0x7fffffda7c,L0x7fffffda7e];
(* ldr	q3, [x19, #48]                              #! EA = L0x7fffffda60; Value = 0x0000000000000000; PC = 0x5555551300 *)
mov %v3 [L0x7fffffda60,L0x7fffffda62,L0x7fffffda64,L0x7fffffda66,L0x7fffffda68,L0x7fffffda6a,L0x7fffffda6c,L0x7fffffda6e];
(* ldr	q2, [x19, #32]                              #! EA = L0x7fffffda50; Value = 0x0000000000000000; PC = 0x5555551304 *)
mov %v2 [L0x7fffffda50,L0x7fffffda52,L0x7fffffda54,L0x7fffffda56,L0x7fffffda58,L0x7fffffda5a,L0x7fffffda5c,L0x7fffffda5e];
(* ldr	q1, [x19, #16]                              #! EA = L0x7fffffda40; Value = 0x0000000000000000; PC = 0x5555551308 *)
mov %v1 [L0x7fffffda40,L0x7fffffda42,L0x7fffffda44,L0x7fffffda46,L0x7fffffda48,L0x7fffffda4a,L0x7fffffda4c,L0x7fffffda4e];
(* ldr	q0, [x19, #128]                             #! EA = L0x7fffffdab0; Value = 0x0000000000000000; PC = 0x5555551314 *)
mov %v0 [L0x7fffffdab0,L0x7fffffdab2,L0x7fffffdab4,L0x7fffffdab6,L0x7fffffdab8,L0x7fffffdaba,L0x7fffffdabc,L0x7fffffdabe];
(* str	q0, [sp]                                    #! EA = L0x7fffffc260; PC = 0x5555551318 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v0;
(* ldr	q0, [x19]                                   #! EA = L0x7fffffda30; Value = 0x0000000000000000; PC = 0x555555133c *)
mov %v0 [L0x7fffffda30,L0x7fffffda32,L0x7fffffda34,L0x7fffffda36,L0x7fffffda38,L0x7fffffda3a,L0x7fffffda3c,L0x7fffffda3e];
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x5555551340 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x5555551340 = 0x5555551340;

ghost %fa0_00@sint16[8], %fa1_00@sint16[8], %fa2_00@sint16[8], %fa3_00@sint16[8], %fa4_00@sint16[8], %fa5_00@sint16[8], %fa6_00@sint16[8], %fa7_00@sint16[8], %fa8_00@sint16[8] :
    %fa0_00 = %v0 /\ %fa1_00 = %v1 /\ %fa2_00 = %v2 /\ %fa3_00 = %v3 /\ %fa4_00 = %v4 /\ %fa5_00 = %v5 /\ %fa6_00 = %v6 /\ %fa7_00 = %v7 /\
    %fa8_00 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_00 = %v0 /\ %fa1_00 = %v1 /\ %fa2_00 = %v2 /\ %fa3_00 = %v3 /\ %fa4_00 = %v4 /\ %fa5_00 = %v5 /\ %fa6_00 = %v6 /\ %fa7_00 = %v7 /\
    %fa8_00 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 1 *)
    %fa0_00 = %v0 /\ %fa1_00 = %v1 /\ %fa2_00 = %v2 /\ %fa3_00 = %v3 /\ %fa4_00 = %v4 /\ %fa5_00 = %v5 /\ %fa6_00 = %v6 /\ %fa7_00 = %v7 /\
    %fa8_00 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_00 = [arr0000, arr0001, arr0002, arr0003, arr0004, arr0005, arr0006, arr0007] /\
    %fa1_00 = [arr0010, arr0011, arr0012, arr0013, arr0014, arr0015, arr0016, arr0017] /\
    %fa2_00 = [arr0020, arr0021, arr0022, arr0023, arr0024, arr0025, arr0026, arr0027] /\
    %fa3_00 = [arr0030, arr0031, arr0032, arr0033, arr0034, arr0035, arr0036, arr0037] /\
    %fa4_00 = [arr0040, arr0041, arr0042, arr0043, arr0044, arr0045, arr0046, arr0047] /\
    %fa5_00 = [arr0050, arr0051, arr0052, arr0053, arr0054, arr0055, arr0056, arr0057] /\
    %fa6_00 = [arr0060, arr0061, arr0062, arr0063, arr0064, arr0065, arr0066, arr0067] /\
    %fa7_00 = [arr0070, arr0071, arr0072, arr0073, arr0074, arr0075, arr0076, arr0077] /\
    %fa8_00 = [arr0080, arr0081, arr0082, arr0083, arr0084, arr0085, arr0086, arr0087]
  &&
    %fa0_00 = %v0 /\ %fa1_00 = %v1 /\ %fa2_00 = %v2 /\ %fa3_00 = %v3 /\ %fa4_00 = %v4 /\ %fa5_00 = %v5 /\ %fa6_00 = %v6 /\ %fa7_00 = %v7 /\
    %fa8_00 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_00 = [arr0000, arr0001, arr0002, arr0003, arr0004, arr0005, arr0006, arr0007] /\
    %fa1_00 = [arr0010, arr0011, arr0012, arr0013, arr0014, arr0015, arr0016, arr0017] /\
    %fa2_00 = [arr0020, arr0021, arr0022, arr0023, arr0024, arr0025, arr0026, arr0027] /\
    %fa3_00 = [arr0030, arr0031, arr0032, arr0033, arr0034, arr0035, arr0036, arr0037] /\
    %fa4_00 = [arr0040, arr0041, arr0042, arr0043, arr0044, arr0045, arr0046, arr0047] /\
    %fa5_00 = [arr0050, arr0051, arr0052, arr0053, arr0054, arr0055, arr0056, arr0057] /\
    %fa6_00 = [arr0060, arr0061, arr0062, arr0063, arr0064, arr0065, arr0066, arr0067] /\
    %fa7_00 = [arr0070, arr0071, arr0072, arr0073, arr0074, arr0075, arr0076, arr0077] /\
    %fa8_00 = [arr0080, arr0081, arr0082, arr0083, arr0084, arr0085, arr0086, arr0087];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 2 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_00 +
        %fa3_00 +
        %fa6_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_00 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_00 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_00 +
        %fa7_00 +
        %fa4_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_00 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_00 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_00 +
        %fa2_00 +
        %fa5_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_00 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_00 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 1], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 3 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_00 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_00 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_00 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_00 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_00 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_00 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_00 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_00 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_00 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_00 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_00 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_00 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_00 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_00 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_00 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_00 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_00 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_00 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_00 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_00 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_00 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_00 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_00 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_00 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_00 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_00 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_00 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_00 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_00 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_00 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_00 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_00 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_00 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_00 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_00 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_00 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_00 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_00 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_00 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_00 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_00 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_00 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_00 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_00 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_00 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_00 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_00 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_00 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_00 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_00 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_00 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_00 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_00 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_00 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_00 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_00 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_00 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_00 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_00 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_00 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_00 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_00
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[2]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x5555551344 *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19]                                   #! EA = L0x7fffffda30; PC = 0x5555551348 *)
mov [L0x7fffffda30,L0x7fffffda32,L0x7fffffda34,L0x7fffffda36,L0x7fffffda38,L0x7fffffda3a,L0x7fffffda3c,L0x7fffffda3e] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x555555134c *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #16]                              #! EA = L0x7fffffda40; PC = 0x5555551350 *)
mov [L0x7fffffda40,L0x7fffffda42,L0x7fffffda44,L0x7fffffda46,L0x7fffffda48,L0x7fffffda4a,L0x7fffffda4c,L0x7fffffda4e] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x5555551354 *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #32]                              #! EA = L0x7fffffda50; PC = 0x5555551358 *)
mov [L0x7fffffda50,L0x7fffffda52,L0x7fffffda54,L0x7fffffda56,L0x7fffffda58,L0x7fffffda5a,L0x7fffffda5c,L0x7fffffda5e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x555555135c *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #48]                              #! EA = L0x7fffffda60; PC = 0x5555551360 *)
mov [L0x7fffffda60,L0x7fffffda62,L0x7fffffda64,L0x7fffffda66,L0x7fffffda68,L0x7fffffda6a,L0x7fffffda6c,L0x7fffffda6e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x5555551364 *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #64]                              #! EA = L0x7fffffda70; PC = 0x5555551368 *)
mov [L0x7fffffda70,L0x7fffffda72,L0x7fffffda74,L0x7fffffda76,L0x7fffffda78,L0x7fffffda7a,L0x7fffffda7c,L0x7fffffda7e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x555555136c *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #80]                              #! EA = L0x7fffffda80; PC = 0x5555551370 *)
mov [L0x7fffffda80,L0x7fffffda82,L0x7fffffda84,L0x7fffffda86,L0x7fffffda88,L0x7fffffda8a,L0x7fffffda8c,L0x7fffffda8e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x5555551374 *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #96]                              #! EA = L0x7fffffda90; PC = 0x5555551378 *)
mov [L0x7fffffda90,L0x7fffffda92,L0x7fffffda94,L0x7fffffda96,L0x7fffffda98,L0x7fffffda9a,L0x7fffffda9c,L0x7fffffda9e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x555555137c *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #112]                             #! EA = L0x7fffffdaa0; PC = 0x5555551380 *)
mov [L0x7fffffdaa0,L0x7fffffdaa2,L0x7fffffdaa4,L0x7fffffdaa6,L0x7fffffdaa8,L0x7fffffdaaa,L0x7fffffdaac,L0x7fffffdaae] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x5555551384 *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #128]                             #! EA = L0x7fffffdab0; PC = 0x5555551388 *)
mov [L0x7fffffdab0,L0x7fffffdab2,L0x7fffffdab4,L0x7fffffdab6,L0x7fffffdab8,L0x7fffffdaba,L0x7fffffdabc,L0x7fffffdabe] %v0;


### k0_iter


#### load

(* ldr	q7, [x19, #256]                             #! EA = L0x7fffffdb30; Value = 0x0000000000000000; PC = 0x555555138c *)
mov %v7 [L0x7fffffdb30,L0x7fffffdb32,L0x7fffffdb34,L0x7fffffdb36,L0x7fffffdb38,L0x7fffffdb3a,L0x7fffffdb3c,L0x7fffffdb3e];
(* ldr	q6, [x19, #240]                             #! EA = L0x7fffffdb20; Value = 0x0000000000000000; PC = 0x5555551390 *)
mov %v6 [L0x7fffffdb20,L0x7fffffdb22,L0x7fffffdb24,L0x7fffffdb26,L0x7fffffdb28,L0x7fffffdb2a,L0x7fffffdb2c,L0x7fffffdb2e];
(* ldr	q5, [x19, #224]                             #! EA = L0x7fffffdb10; Value = 0x0000000000000000; PC = 0x5555551394 *)
mov %v5 [L0x7fffffdb10,L0x7fffffdb12,L0x7fffffdb14,L0x7fffffdb16,L0x7fffffdb18,L0x7fffffdb1a,L0x7fffffdb1c,L0x7fffffdb1e];
(* ldr	q4, [x19, #208]                             #! EA = L0x7fffffdb00; Value = 0x0000000000000000; PC = 0x5555551398 *)
mov %v4 [L0x7fffffdb00,L0x7fffffdb02,L0x7fffffdb04,L0x7fffffdb06,L0x7fffffdb08,L0x7fffffdb0a,L0x7fffffdb0c,L0x7fffffdb0e];
(* ldr	q3, [x19, #192]                             #! EA = L0x7fffffdaf0; Value = 0x0000000000000000; PC = 0x555555139c *)
mov %v3 [L0x7fffffdaf0,L0x7fffffdaf2,L0x7fffffdaf4,L0x7fffffdaf6,L0x7fffffdaf8,L0x7fffffdafa,L0x7fffffdafc,L0x7fffffdafe];
(* ldr	q2, [x19, #176]                             #! EA = L0x7fffffdae0; Value = 0x0000000000000000; PC = 0x55555513a0 *)
mov %v2 [L0x7fffffdae0,L0x7fffffdae2,L0x7fffffdae4,L0x7fffffdae6,L0x7fffffdae8,L0x7fffffdaea,L0x7fffffdaec,L0x7fffffdaee];
(* ldr	q1, [x19, #160]                             #! EA = L0x7fffffdad0; Value = 0x0000000000000000; PC = 0x55555513a4 *)
mov %v1 [L0x7fffffdad0,L0x7fffffdad2,L0x7fffffdad4,L0x7fffffdad6,L0x7fffffdad8,L0x7fffffdada,L0x7fffffdadc,L0x7fffffdade];
(* ldr	q0, [x19, #144]                             #! EA = L0x7fffffdac0; Value = 0x0000000000000000; PC = 0x55555513a8 *)
mov %v0 [L0x7fffffdac0,L0x7fffffdac2,L0x7fffffdac4,L0x7fffffdac6,L0x7fffffdac8,L0x7fffffdaca,L0x7fffffdacc,L0x7fffffdace];
(* ldr	q16, [x19, #272]                            #! EA = L0x7fffffdb40; Value = 0x0000000000000000; PC = 0x55555513b0 *)
mov %v16 [L0x7fffffdb40,L0x7fffffdb42,L0x7fffffdb44,L0x7fffffdb46,L0x7fffffdb48,L0x7fffffdb4a,L0x7fffffdb4c,L0x7fffffdb4e];
(* str	q16, [sp]                                   #! EA = L0x7fffffc260; PC = 0x55555513b4 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v16;
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x55555513d8 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x55555513d8 = 0x55555513d8;

ghost %fa0_01@sint16[8], %fa1_01@sint16[8], %fa2_01@sint16[8], %fa3_01@sint16[8], %fa4_01@sint16[8], %fa5_01@sint16[8], %fa6_01@sint16[8], %fa7_01@sint16[8], %fa8_01@sint16[8] :
    %fa0_01 = %v0 /\ %fa1_01 = %v1 /\ %fa2_01 = %v2 /\ %fa3_01 = %v3 /\ %fa4_01 = %v4 /\ %fa5_01 = %v5 /\ %fa6_01 = %v6 /\ %fa7_01 = %v7 /\
    %fa8_01 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_01 = %v0 /\ %fa1_01 = %v1 /\ %fa2_01 = %v2 /\ %fa3_01 = %v3 /\ %fa4_01 = %v4 /\ %fa5_01 = %v5 /\ %fa6_01 = %v6 /\ %fa7_01 = %v7 /\
    %fa8_01 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 4 *)
    %fa0_01 = %v0 /\ %fa1_01 = %v1 /\ %fa2_01 = %v2 /\ %fa3_01 = %v3 /\ %fa4_01 = %v4 /\ %fa5_01 = %v5 /\ %fa6_01 = %v6 /\ %fa7_01 = %v7 /\
    %fa8_01 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_01 = [arr0100, arr0101, arr0102, arr0103, arr0104, arr0105, arr0106, arr0107] /\
    %fa1_01 = [arr0110, arr0111, arr0112, arr0113, arr0114, arr0115, arr0116, arr0117] /\
    %fa2_01 = [arr0120, arr0121, arr0122, arr0123, arr0124, arr0125, arr0126, arr0127] /\
    %fa3_01 = [arr0130, arr0131, arr0132, arr0133, arr0134, arr0135, arr0136, arr0137] /\
    %fa4_01 = [arr0140, arr0141, arr0142, arr0143, arr0144, arr0145, arr0146, arr0147] /\
    %fa5_01 = [arr0150, arr0151, arr0152, arr0153, arr0154, arr0155, arr0156, arr0157] /\
    %fa6_01 = [arr0160, arr0161, arr0162, arr0163, arr0164, arr0165, arr0166, arr0167] /\
    %fa7_01 = [arr0170, arr0171, arr0172, arr0173, arr0174, arr0175, arr0176, arr0177] /\
    %fa8_01 = [arr0180, arr0181, arr0182, arr0183, arr0184, arr0185, arr0186, arr0187]
  &&
    %fa0_01 = %v0 /\ %fa1_01 = %v1 /\ %fa2_01 = %v2 /\ %fa3_01 = %v3 /\ %fa4_01 = %v4 /\ %fa5_01 = %v5 /\ %fa6_01 = %v6 /\ %fa7_01 = %v7 /\
    %fa8_01 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_01 = [arr0100, arr0101, arr0102, arr0103, arr0104, arr0105, arr0106, arr0107] /\
    %fa1_01 = [arr0110, arr0111, arr0112, arr0113, arr0114, arr0115, arr0116, arr0117] /\
    %fa2_01 = [arr0120, arr0121, arr0122, arr0123, arr0124, arr0125, arr0126, arr0127] /\
    %fa3_01 = [arr0130, arr0131, arr0132, arr0133, arr0134, arr0135, arr0136, arr0137] /\
    %fa4_01 = [arr0140, arr0141, arr0142, arr0143, arr0144, arr0145, arr0146, arr0147] /\
    %fa5_01 = [arr0150, arr0151, arr0152, arr0153, arr0154, arr0155, arr0156, arr0157] /\
    %fa6_01 = [arr0160, arr0161, arr0162, arr0163, arr0164, arr0165, arr0166, arr0167] /\
    %fa7_01 = [arr0170, arr0171, arr0172, arr0173, arr0174, arr0175, arr0176, arr0177] /\
    %fa8_01 = [arr0180, arr0181, arr0182, arr0183, arr0184, arr0185, arr0186, arr0187];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 5 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_01 +
        %fa3_01 +
        %fa6_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_01 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_01 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_01 +
        %fa7_01 +
        %fa4_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_01 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_01 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_01 +
        %fa2_01 +
        %fa5_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_01 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_01 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 4], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 6 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_01 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_01 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_01 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_01 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_01 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_01 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_01 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_01 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_01 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_01 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_01 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_01 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_01 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_01 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_01 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_01 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_01 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_01 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_01 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_01 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_01 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_01 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_01 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_01 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_01 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_01 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_01 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_01 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_01 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_01 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_01 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_01 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_01 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_01 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_01 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_01 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_01 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_01 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_01 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_01 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_01 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_01 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_01 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_01 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_01 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_01 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_01 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_01 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_01 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_01 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_01 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_01 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_01 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_01 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_01 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_01 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_01 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_01 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_01 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_01 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_01 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_01
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[5]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x55555513dc *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19, #144]                             #! EA = L0x7fffffdac0; PC = 0x55555513e0 *)
mov [L0x7fffffdac0,L0x7fffffdac2,L0x7fffffdac4,L0x7fffffdac6,L0x7fffffdac8,L0x7fffffdaca,L0x7fffffdacc,L0x7fffffdace] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x55555513e4 *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #160]                             #! EA = L0x7fffffdad0; PC = 0x55555513e8 *)
mov [L0x7fffffdad0,L0x7fffffdad2,L0x7fffffdad4,L0x7fffffdad6,L0x7fffffdad8,L0x7fffffdada,L0x7fffffdadc,L0x7fffffdade] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x55555513ec *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #176]                             #! EA = L0x7fffffdae0; PC = 0x55555513f0 *)
mov [L0x7fffffdae0,L0x7fffffdae2,L0x7fffffdae4,L0x7fffffdae6,L0x7fffffdae8,L0x7fffffdaea,L0x7fffffdaec,L0x7fffffdaee] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x55555513f4 *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #192]                             #! EA = L0x7fffffdaf0; PC = 0x55555513f8 *)
mov [L0x7fffffdaf0,L0x7fffffdaf2,L0x7fffffdaf4,L0x7fffffdaf6,L0x7fffffdaf8,L0x7fffffdafa,L0x7fffffdafc,L0x7fffffdafe] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x55555513fc *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #208]                             #! EA = L0x7fffffdb00; PC = 0x5555551400 *)
mov [L0x7fffffdb00,L0x7fffffdb02,L0x7fffffdb04,L0x7fffffdb06,L0x7fffffdb08,L0x7fffffdb0a,L0x7fffffdb0c,L0x7fffffdb0e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x5555551404 *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #224]                             #! EA = L0x7fffffdb10; PC = 0x5555551408 *)
mov [L0x7fffffdb10,L0x7fffffdb12,L0x7fffffdb14,L0x7fffffdb16,L0x7fffffdb18,L0x7fffffdb1a,L0x7fffffdb1c,L0x7fffffdb1e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x555555140c *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #240]                             #! EA = L0x7fffffdb20; PC = 0x5555551410 *)
mov [L0x7fffffdb20,L0x7fffffdb22,L0x7fffffdb24,L0x7fffffdb26,L0x7fffffdb28,L0x7fffffdb2a,L0x7fffffdb2c,L0x7fffffdb2e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x5555551414 *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #256]                             #! EA = L0x7fffffdb30; PC = 0x5555551418 *)
mov [L0x7fffffdb30,L0x7fffffdb32,L0x7fffffdb34,L0x7fffffdb36,L0x7fffffdb38,L0x7fffffdb3a,L0x7fffffdb3c,L0x7fffffdb3e] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x555555141c *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #272]                             #! EA = L0x7fffffdb40; PC = 0x5555551420 *)
mov [L0x7fffffdb40,L0x7fffffdb42,L0x7fffffdb44,L0x7fffffdb46,L0x7fffffdb48,L0x7fffffdb4a,L0x7fffffdb4c,L0x7fffffdb4e] %v0;


### epilogue

(* #b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! PC = 0x5555551430 *)
#b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! 0x5555551430 = 0x5555551430;


## i_iter


### k0_iter


#### load

(* ldr	q7, [x19, #112]                             #! EA = L0x7fffffdbc0; Value = 0x0000000000000000; PC = 0x55555512f0 *)
mov %v7 [L0x7fffffdbc0,L0x7fffffdbc2,L0x7fffffdbc4,L0x7fffffdbc6,L0x7fffffdbc8,L0x7fffffdbca,L0x7fffffdbcc,L0x7fffffdbce];
(* ldr	q6, [x19, #96]                              #! EA = L0x7fffffdbb0; Value = 0x0000000000000000; PC = 0x55555512f4 *)
mov %v6 [L0x7fffffdbb0,L0x7fffffdbb2,L0x7fffffdbb4,L0x7fffffdbb6,L0x7fffffdbb8,L0x7fffffdbba,L0x7fffffdbbc,L0x7fffffdbbe];
(* ldr	q5, [x19, #80]                              #! EA = L0x7fffffdba0; Value = 0x0000000000000000; PC = 0x55555512f8 *)
mov %v5 [L0x7fffffdba0,L0x7fffffdba2,L0x7fffffdba4,L0x7fffffdba6,L0x7fffffdba8,L0x7fffffdbaa,L0x7fffffdbac,L0x7fffffdbae];
(* ldr	q4, [x19, #64]                              #! EA = L0x7fffffdb90; Value = 0x0000000000000000; PC = 0x55555512fc *)
mov %v4 [L0x7fffffdb90,L0x7fffffdb92,L0x7fffffdb94,L0x7fffffdb96,L0x7fffffdb98,L0x7fffffdb9a,L0x7fffffdb9c,L0x7fffffdb9e];
(* ldr	q3, [x19, #48]                              #! EA = L0x7fffffdb80; Value = 0x0000000000000000; PC = 0x5555551300 *)
mov %v3 [L0x7fffffdb80,L0x7fffffdb82,L0x7fffffdb84,L0x7fffffdb86,L0x7fffffdb88,L0x7fffffdb8a,L0x7fffffdb8c,L0x7fffffdb8e];
(* ldr	q2, [x19, #32]                              #! EA = L0x7fffffdb70; Value = 0x0000000000000000; PC = 0x5555551304 *)
mov %v2 [L0x7fffffdb70,L0x7fffffdb72,L0x7fffffdb74,L0x7fffffdb76,L0x7fffffdb78,L0x7fffffdb7a,L0x7fffffdb7c,L0x7fffffdb7e];
(* ldr	q1, [x19, #16]                              #! EA = L0x7fffffdb60; Value = 0x0000000000000000; PC = 0x5555551308 *)
mov %v1 [L0x7fffffdb60,L0x7fffffdb62,L0x7fffffdb64,L0x7fffffdb66,L0x7fffffdb68,L0x7fffffdb6a,L0x7fffffdb6c,L0x7fffffdb6e];
(* ldr	q0, [x19, #128]                             #! EA = L0x7fffffdbd0; Value = 0x0000000000000000; PC = 0x5555551314 *)
mov %v0 [L0x7fffffdbd0,L0x7fffffdbd2,L0x7fffffdbd4,L0x7fffffdbd6,L0x7fffffdbd8,L0x7fffffdbda,L0x7fffffdbdc,L0x7fffffdbde];
(* str	q0, [sp]                                    #! EA = L0x7fffffc260; PC = 0x5555551318 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v0;
(* ldr	q0, [x19]                                   #! EA = L0x7fffffdb50; Value = 0x0000000000000000; PC = 0x555555133c *)
mov %v0 [L0x7fffffdb50,L0x7fffffdb52,L0x7fffffdb54,L0x7fffffdb56,L0x7fffffdb58,L0x7fffffdb5a,L0x7fffffdb5c,L0x7fffffdb5e];
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x5555551340 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x5555551340 = 0x5555551340;

ghost %fa0_10@sint16[8], %fa1_10@sint16[8], %fa2_10@sint16[8], %fa3_10@sint16[8], %fa4_10@sint16[8], %fa5_10@sint16[8], %fa6_10@sint16[8], %fa7_10@sint16[8], %fa8_10@sint16[8] :
    %fa0_10 = %v0 /\ %fa1_10 = %v1 /\ %fa2_10 = %v2 /\ %fa3_10 = %v3 /\ %fa4_10 = %v4 /\ %fa5_10 = %v5 /\ %fa6_10 = %v6 /\ %fa7_10 = %v7 /\
    %fa8_10 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_10 = %v0 /\ %fa1_10 = %v1 /\ %fa2_10 = %v2 /\ %fa3_10 = %v3 /\ %fa4_10 = %v4 /\ %fa5_10 = %v5 /\ %fa6_10 = %v6 /\ %fa7_10 = %v7 /\
    %fa8_10 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 7 *)
    %fa0_10 = %v0 /\ %fa1_10 = %v1 /\ %fa2_10 = %v2 /\ %fa3_10 = %v3 /\ %fa4_10 = %v4 /\ %fa5_10 = %v5 /\ %fa6_10 = %v6 /\ %fa7_10 = %v7 /\
    %fa8_10 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_10 = [arr1000, arr1001, arr1002, arr1003, arr1004, arr1005, arr1006, arr1007] /\
    %fa1_10 = [arr1010, arr1011, arr1012, arr1013, arr1014, arr1015, arr1016, arr1017] /\
    %fa2_10 = [arr1020, arr1021, arr1022, arr1023, arr1024, arr1025, arr1026, arr1027] /\
    %fa3_10 = [arr1030, arr1031, arr1032, arr1033, arr1034, arr1035, arr1036, arr1037] /\
    %fa4_10 = [arr1040, arr1041, arr1042, arr1043, arr1044, arr1045, arr1046, arr1047] /\
    %fa5_10 = [arr1050, arr1051, arr1052, arr1053, arr1054, arr1055, arr1056, arr1057] /\
    %fa6_10 = [arr1060, arr1061, arr1062, arr1063, arr1064, arr1065, arr1066, arr1067] /\
    %fa7_10 = [arr1070, arr1071, arr1072, arr1073, arr1074, arr1075, arr1076, arr1077] /\
    %fa8_10 = [arr1080, arr1081, arr1082, arr1083, arr1084, arr1085, arr1086, arr1087]
  &&
    %fa0_10 = %v0 /\ %fa1_10 = %v1 /\ %fa2_10 = %v2 /\ %fa3_10 = %v3 /\ %fa4_10 = %v4 /\ %fa5_10 = %v5 /\ %fa6_10 = %v6 /\ %fa7_10 = %v7 /\
    %fa8_10 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_10 = [arr1000, arr1001, arr1002, arr1003, arr1004, arr1005, arr1006, arr1007] /\
    %fa1_10 = [arr1010, arr1011, arr1012, arr1013, arr1014, arr1015, arr1016, arr1017] /\
    %fa2_10 = [arr1020, arr1021, arr1022, arr1023, arr1024, arr1025, arr1026, arr1027] /\
    %fa3_10 = [arr1030, arr1031, arr1032, arr1033, arr1034, arr1035, arr1036, arr1037] /\
    %fa4_10 = [arr1040, arr1041, arr1042, arr1043, arr1044, arr1045, arr1046, arr1047] /\
    %fa5_10 = [arr1050, arr1051, arr1052, arr1053, arr1054, arr1055, arr1056, arr1057] /\
    %fa6_10 = [arr1060, arr1061, arr1062, arr1063, arr1064, arr1065, arr1066, arr1067] /\
    %fa7_10 = [arr1070, arr1071, arr1072, arr1073, arr1074, arr1075, arr1076, arr1077] /\
    %fa8_10 = [arr1080, arr1081, arr1082, arr1083, arr1084, arr1085, arr1086, arr1087];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 8 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_10 +
        %fa3_10 +
        %fa6_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_10 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_10 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_10 +
        %fa7_10 +
        %fa4_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_10 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_10 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_10 +
        %fa2_10 +
        %fa5_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_10 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_10 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 7], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 9 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_10 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_10 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_10 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_10 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_10 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_10 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_10 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_10 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_10 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_10 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_10 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_10 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_10 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_10 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_10 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_10 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_10 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_10 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_10 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_10 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_10 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_10 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_10 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_10 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_10 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_10 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_10 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_10 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_10 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_10 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_10 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_10 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_10 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_10 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_10 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_10 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_10 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_10 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_10 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_10 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_10 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_10 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_10 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_10 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_10 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_10 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_10 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_10 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_10 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_10 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_10 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_10 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_10 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_10 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_10 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_10 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_10 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_10 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_10 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_10 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_10 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_10
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[8]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x5555551344 *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19]                                   #! EA = L0x7fffffdb50; PC = 0x5555551348 *)
mov [L0x7fffffdb50,L0x7fffffdb52,L0x7fffffdb54,L0x7fffffdb56,L0x7fffffdb58,L0x7fffffdb5a,L0x7fffffdb5c,L0x7fffffdb5e] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x555555134c *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #16]                              #! EA = L0x7fffffdb60; PC = 0x5555551350 *)
mov [L0x7fffffdb60,L0x7fffffdb62,L0x7fffffdb64,L0x7fffffdb66,L0x7fffffdb68,L0x7fffffdb6a,L0x7fffffdb6c,L0x7fffffdb6e] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x5555551354 *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #32]                              #! EA = L0x7fffffdb70; PC = 0x5555551358 *)
mov [L0x7fffffdb70,L0x7fffffdb72,L0x7fffffdb74,L0x7fffffdb76,L0x7fffffdb78,L0x7fffffdb7a,L0x7fffffdb7c,L0x7fffffdb7e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x555555135c *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #48]                              #! EA = L0x7fffffdb80; PC = 0x5555551360 *)
mov [L0x7fffffdb80,L0x7fffffdb82,L0x7fffffdb84,L0x7fffffdb86,L0x7fffffdb88,L0x7fffffdb8a,L0x7fffffdb8c,L0x7fffffdb8e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x5555551364 *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #64]                              #! EA = L0x7fffffdb90; PC = 0x5555551368 *)
mov [L0x7fffffdb90,L0x7fffffdb92,L0x7fffffdb94,L0x7fffffdb96,L0x7fffffdb98,L0x7fffffdb9a,L0x7fffffdb9c,L0x7fffffdb9e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x555555136c *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #80]                              #! EA = L0x7fffffdba0; PC = 0x5555551370 *)
mov [L0x7fffffdba0,L0x7fffffdba2,L0x7fffffdba4,L0x7fffffdba6,L0x7fffffdba8,L0x7fffffdbaa,L0x7fffffdbac,L0x7fffffdbae] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x5555551374 *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #96]                              #! EA = L0x7fffffdbb0; PC = 0x5555551378 *)
mov [L0x7fffffdbb0,L0x7fffffdbb2,L0x7fffffdbb4,L0x7fffffdbb6,L0x7fffffdbb8,L0x7fffffdbba,L0x7fffffdbbc,L0x7fffffdbbe] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x555555137c *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #112]                             #! EA = L0x7fffffdbc0; PC = 0x5555551380 *)
mov [L0x7fffffdbc0,L0x7fffffdbc2,L0x7fffffdbc4,L0x7fffffdbc6,L0x7fffffdbc8,L0x7fffffdbca,L0x7fffffdbcc,L0x7fffffdbce] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x5555551384 *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #128]                             #! EA = L0x7fffffdbd0; PC = 0x5555551388 *)
mov [L0x7fffffdbd0,L0x7fffffdbd2,L0x7fffffdbd4,L0x7fffffdbd6,L0x7fffffdbd8,L0x7fffffdbda,L0x7fffffdbdc,L0x7fffffdbde] %v0;


### k0_iter


#### load

(* ldr	q7, [x19, #256]                             #! EA = L0x7fffffdc50; Value = 0x0000000000000000; PC = 0x555555138c *)
mov %v7 [L0x7fffffdc50,L0x7fffffdc52,L0x7fffffdc54,L0x7fffffdc56,L0x7fffffdc58,L0x7fffffdc5a,L0x7fffffdc5c,L0x7fffffdc5e];
(* ldr	q6, [x19, #240]                             #! EA = L0x7fffffdc40; Value = 0x0000000000000000; PC = 0x5555551390 *)
mov %v6 [L0x7fffffdc40,L0x7fffffdc42,L0x7fffffdc44,L0x7fffffdc46,L0x7fffffdc48,L0x7fffffdc4a,L0x7fffffdc4c,L0x7fffffdc4e];
(* ldr	q5, [x19, #224]                             #! EA = L0x7fffffdc30; Value = 0x0000000000000000; PC = 0x5555551394 *)
mov %v5 [L0x7fffffdc30,L0x7fffffdc32,L0x7fffffdc34,L0x7fffffdc36,L0x7fffffdc38,L0x7fffffdc3a,L0x7fffffdc3c,L0x7fffffdc3e];
(* ldr	q4, [x19, #208]                             #! EA = L0x7fffffdc20; Value = 0x0000000000000000; PC = 0x5555551398 *)
mov %v4 [L0x7fffffdc20,L0x7fffffdc22,L0x7fffffdc24,L0x7fffffdc26,L0x7fffffdc28,L0x7fffffdc2a,L0x7fffffdc2c,L0x7fffffdc2e];
(* ldr	q3, [x19, #192]                             #! EA = L0x7fffffdc10; Value = 0x0000000000000000; PC = 0x555555139c *)
mov %v3 [L0x7fffffdc10,L0x7fffffdc12,L0x7fffffdc14,L0x7fffffdc16,L0x7fffffdc18,L0x7fffffdc1a,L0x7fffffdc1c,L0x7fffffdc1e];
(* ldr	q2, [x19, #176]                             #! EA = L0x7fffffdc00; Value = 0x0000000000000000; PC = 0x55555513a0 *)
mov %v2 [L0x7fffffdc00,L0x7fffffdc02,L0x7fffffdc04,L0x7fffffdc06,L0x7fffffdc08,L0x7fffffdc0a,L0x7fffffdc0c,L0x7fffffdc0e];
(* ldr	q1, [x19, #160]                             #! EA = L0x7fffffdbf0; Value = 0x0000000000000000; PC = 0x55555513a4 *)
mov %v1 [L0x7fffffdbf0,L0x7fffffdbf2,L0x7fffffdbf4,L0x7fffffdbf6,L0x7fffffdbf8,L0x7fffffdbfa,L0x7fffffdbfc,L0x7fffffdbfe];
(* ldr	q0, [x19, #144]                             #! EA = L0x7fffffdbe0; Value = 0x0000000000000000; PC = 0x55555513a8 *)
mov %v0 [L0x7fffffdbe0,L0x7fffffdbe2,L0x7fffffdbe4,L0x7fffffdbe6,L0x7fffffdbe8,L0x7fffffdbea,L0x7fffffdbec,L0x7fffffdbee];
(* ldr	q16, [x19, #272]                            #! EA = L0x7fffffdc60; Value = 0x0000000000000000; PC = 0x55555513b0 *)
mov %v16 [L0x7fffffdc60,L0x7fffffdc62,L0x7fffffdc64,L0x7fffffdc66,L0x7fffffdc68,L0x7fffffdc6a,L0x7fffffdc6c,L0x7fffffdc6e];
(* str	q16, [sp]                                   #! EA = L0x7fffffc260; PC = 0x55555513b4 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v16;
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x55555513d8 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x55555513d8 = 0x55555513d8;

ghost %fa0_11@sint16[8], %fa1_11@sint16[8], %fa2_11@sint16[8], %fa3_11@sint16[8], %fa4_11@sint16[8], %fa5_11@sint16[8], %fa6_11@sint16[8], %fa7_11@sint16[8], %fa8_11@sint16[8] :
    %fa0_11 = %v0 /\ %fa1_11 = %v1 /\ %fa2_11 = %v2 /\ %fa3_11 = %v3 /\ %fa4_11 = %v4 /\ %fa5_11 = %v5 /\ %fa6_11 = %v6 /\ %fa7_11 = %v7 /\
    %fa8_11 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_11 = %v0 /\ %fa1_11 = %v1 /\ %fa2_11 = %v2 /\ %fa3_11 = %v3 /\ %fa4_11 = %v4 /\ %fa5_11 = %v5 /\ %fa6_11 = %v6 /\ %fa7_11 = %v7 /\
    %fa8_11 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 10 *)
    %fa0_11 = %v0 /\ %fa1_11 = %v1 /\ %fa2_11 = %v2 /\ %fa3_11 = %v3 /\ %fa4_11 = %v4 /\ %fa5_11 = %v5 /\ %fa6_11 = %v6 /\ %fa7_11 = %v7 /\
    %fa8_11 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_11 = [arr1100, arr1101, arr1102, arr1103, arr1104, arr1105, arr1106, arr1107] /\
    %fa1_11 = [arr1110, arr1111, arr1112, arr1113, arr1114, arr1115, arr1116, arr1117] /\
    %fa2_11 = [arr1120, arr1121, arr1122, arr1123, arr1124, arr1125, arr1126, arr1127] /\
    %fa3_11 = [arr1130, arr1131, arr1132, arr1133, arr1134, arr1135, arr1136, arr1137] /\
    %fa4_11 = [arr1140, arr1141, arr1142, arr1143, arr1144, arr1145, arr1146, arr1147] /\
    %fa5_11 = [arr1150, arr1151, arr1152, arr1153, arr1154, arr1155, arr1156, arr1157] /\
    %fa6_11 = [arr1160, arr1161, arr1162, arr1163, arr1164, arr1165, arr1166, arr1167] /\
    %fa7_11 = [arr1170, arr1171, arr1172, arr1173, arr1174, arr1175, arr1176, arr1177] /\
    %fa8_11 = [arr1180, arr1181, arr1182, arr1183, arr1184, arr1185, arr1186, arr1187]
  &&
    %fa0_11 = %v0 /\ %fa1_11 = %v1 /\ %fa2_11 = %v2 /\ %fa3_11 = %v3 /\ %fa4_11 = %v4 /\ %fa5_11 = %v5 /\ %fa6_11 = %v6 /\ %fa7_11 = %v7 /\
    %fa8_11 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_11 = [arr1100, arr1101, arr1102, arr1103, arr1104, arr1105, arr1106, arr1107] /\
    %fa1_11 = [arr1110, arr1111, arr1112, arr1113, arr1114, arr1115, arr1116, arr1117] /\
    %fa2_11 = [arr1120, arr1121, arr1122, arr1123, arr1124, arr1125, arr1126, arr1127] /\
    %fa3_11 = [arr1130, arr1131, arr1132, arr1133, arr1134, arr1135, arr1136, arr1137] /\
    %fa4_11 = [arr1140, arr1141, arr1142, arr1143, arr1144, arr1145, arr1146, arr1147] /\
    %fa5_11 = [arr1150, arr1151, arr1152, arr1153, arr1154, arr1155, arr1156, arr1157] /\
    %fa6_11 = [arr1160, arr1161, arr1162, arr1163, arr1164, arr1165, arr1166, arr1167] /\
    %fa7_11 = [arr1170, arr1171, arr1172, arr1173, arr1174, arr1175, arr1176, arr1177] /\
    %fa8_11 = [arr1180, arr1181, arr1182, arr1183, arr1184, arr1185, arr1186, arr1187];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 11 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_11 +
        %fa3_11 +
        %fa6_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_11 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_11 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_11 +
        %fa7_11 +
        %fa4_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_11 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_11 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_11 +
        %fa2_11 +
        %fa5_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_11 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_11 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 10], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 12 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_11 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_11 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_11 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_11 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_11 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_11 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_11 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_11 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_11 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_11 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_11 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_11 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_11 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_11 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_11 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_11 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_11 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_11 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_11 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_11 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_11 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_11 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_11 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_11 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_11 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_11 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_11 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_11 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_11 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_11 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_11 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_11 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_11 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_11 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_11 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_11 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_11 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_11 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_11 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_11 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_11 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_11 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_11 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_11 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_11 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_11 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_11 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_11 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_11 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_11 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_11 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_11 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_11 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_11 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_11 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_11 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_11 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_11 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_11 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_11 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_11 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_11
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[11]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x55555513dc *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19, #144]                             #! EA = L0x7fffffdbe0; PC = 0x55555513e0 *)
mov [L0x7fffffdbe0,L0x7fffffdbe2,L0x7fffffdbe4,L0x7fffffdbe6,L0x7fffffdbe8,L0x7fffffdbea,L0x7fffffdbec,L0x7fffffdbee] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x55555513e4 *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #160]                             #! EA = L0x7fffffdbf0; PC = 0x55555513e8 *)
mov [L0x7fffffdbf0,L0x7fffffdbf2,L0x7fffffdbf4,L0x7fffffdbf6,L0x7fffffdbf8,L0x7fffffdbfa,L0x7fffffdbfc,L0x7fffffdbfe] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x55555513ec *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #176]                             #! EA = L0x7fffffdc00; PC = 0x55555513f0 *)
mov [L0x7fffffdc00,L0x7fffffdc02,L0x7fffffdc04,L0x7fffffdc06,L0x7fffffdc08,L0x7fffffdc0a,L0x7fffffdc0c,L0x7fffffdc0e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x55555513f4 *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #192]                             #! EA = L0x7fffffdc10; PC = 0x55555513f8 *)
mov [L0x7fffffdc10,L0x7fffffdc12,L0x7fffffdc14,L0x7fffffdc16,L0x7fffffdc18,L0x7fffffdc1a,L0x7fffffdc1c,L0x7fffffdc1e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x55555513fc *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #208]                             #! EA = L0x7fffffdc20; PC = 0x5555551400 *)
mov [L0x7fffffdc20,L0x7fffffdc22,L0x7fffffdc24,L0x7fffffdc26,L0x7fffffdc28,L0x7fffffdc2a,L0x7fffffdc2c,L0x7fffffdc2e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x5555551404 *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #224]                             #! EA = L0x7fffffdc30; PC = 0x5555551408 *)
mov [L0x7fffffdc30,L0x7fffffdc32,L0x7fffffdc34,L0x7fffffdc36,L0x7fffffdc38,L0x7fffffdc3a,L0x7fffffdc3c,L0x7fffffdc3e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x555555140c *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #240]                             #! EA = L0x7fffffdc40; PC = 0x5555551410 *)
mov [L0x7fffffdc40,L0x7fffffdc42,L0x7fffffdc44,L0x7fffffdc46,L0x7fffffdc48,L0x7fffffdc4a,L0x7fffffdc4c,L0x7fffffdc4e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x5555551414 *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #256]                             #! EA = L0x7fffffdc50; PC = 0x5555551418 *)
mov [L0x7fffffdc50,L0x7fffffdc52,L0x7fffffdc54,L0x7fffffdc56,L0x7fffffdc58,L0x7fffffdc5a,L0x7fffffdc5c,L0x7fffffdc5e] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x555555141c *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #272]                             #! EA = L0x7fffffdc60; PC = 0x5555551420 *)
mov [L0x7fffffdc60,L0x7fffffdc62,L0x7fffffdc64,L0x7fffffdc66,L0x7fffffdc68,L0x7fffffdc6a,L0x7fffffdc6c,L0x7fffffdc6e] %v0;


### epilogue

(* #b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! PC = 0x5555551430 *)
#b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! 0x5555551430 = 0x5555551430;


## i_iter


### k0_iter


#### load

(* ldr	q7, [x19, #112]                             #! EA = L0x7fffffdce0; Value = 0x0000000000000000; PC = 0x55555512f0 *)
mov %v7 [L0x7fffffdce0,L0x7fffffdce2,L0x7fffffdce4,L0x7fffffdce6,L0x7fffffdce8,L0x7fffffdcea,L0x7fffffdcec,L0x7fffffdcee];
(* ldr	q6, [x19, #96]                              #! EA = L0x7fffffdcd0; Value = 0x0000000000000000; PC = 0x55555512f4 *)
mov %v6 [L0x7fffffdcd0,L0x7fffffdcd2,L0x7fffffdcd4,L0x7fffffdcd6,L0x7fffffdcd8,L0x7fffffdcda,L0x7fffffdcdc,L0x7fffffdcde];
(* ldr	q5, [x19, #80]                              #! EA = L0x7fffffdcc0; Value = 0x0000000000000000; PC = 0x55555512f8 *)
mov %v5 [L0x7fffffdcc0,L0x7fffffdcc2,L0x7fffffdcc4,L0x7fffffdcc6,L0x7fffffdcc8,L0x7fffffdcca,L0x7fffffdccc,L0x7fffffdcce];
(* ldr	q4, [x19, #64]                              #! EA = L0x7fffffdcb0; Value = 0x0000000000000000; PC = 0x55555512fc *)
mov %v4 [L0x7fffffdcb0,L0x7fffffdcb2,L0x7fffffdcb4,L0x7fffffdcb6,L0x7fffffdcb8,L0x7fffffdcba,L0x7fffffdcbc,L0x7fffffdcbe];
(* ldr	q3, [x19, #48]                              #! EA = L0x7fffffdca0; Value = 0x0000000000000000; PC = 0x5555551300 *)
mov %v3 [L0x7fffffdca0,L0x7fffffdca2,L0x7fffffdca4,L0x7fffffdca6,L0x7fffffdca8,L0x7fffffdcaa,L0x7fffffdcac,L0x7fffffdcae];
(* ldr	q2, [x19, #32]                              #! EA = L0x7fffffdc90; Value = 0x0000000000000000; PC = 0x5555551304 *)
mov %v2 [L0x7fffffdc90,L0x7fffffdc92,L0x7fffffdc94,L0x7fffffdc96,L0x7fffffdc98,L0x7fffffdc9a,L0x7fffffdc9c,L0x7fffffdc9e];
(* ldr	q1, [x19, #16]                              #! EA = L0x7fffffdc80; Value = 0x0000000000000000; PC = 0x5555551308 *)
mov %v1 [L0x7fffffdc80,L0x7fffffdc82,L0x7fffffdc84,L0x7fffffdc86,L0x7fffffdc88,L0x7fffffdc8a,L0x7fffffdc8c,L0x7fffffdc8e];
(* ldr	q0, [x19, #128]                             #! EA = L0x7fffffdcf0; Value = 0x0000000000000000; PC = 0x5555551314 *)
mov %v0 [L0x7fffffdcf0,L0x7fffffdcf2,L0x7fffffdcf4,L0x7fffffdcf6,L0x7fffffdcf8,L0x7fffffdcfa,L0x7fffffdcfc,L0x7fffffdcfe];
(* str	q0, [sp]                                    #! EA = L0x7fffffc260; PC = 0x5555551318 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v0;
(* ldr	q0, [x19]                                   #! EA = L0x7fffffdc70; Value = 0x0000000000000000; PC = 0x555555133c *)
mov %v0 [L0x7fffffdc70,L0x7fffffdc72,L0x7fffffdc74,L0x7fffffdc76,L0x7fffffdc78,L0x7fffffdc7a,L0x7fffffdc7c,L0x7fffffdc7e];
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x5555551340 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x5555551340 = 0x5555551340;

ghost %fa0_20@sint16[8], %fa1_20@sint16[8], %fa2_20@sint16[8], %fa3_20@sint16[8], %fa4_20@sint16[8], %fa5_20@sint16[8], %fa6_20@sint16[8], %fa7_20@sint16[8], %fa8_20@sint16[8] :
    %fa0_20 = %v0 /\ %fa1_20 = %v1 /\ %fa2_20 = %v2 /\ %fa3_20 = %v3 /\ %fa4_20 = %v4 /\ %fa5_20 = %v5 /\ %fa6_20 = %v6 /\ %fa7_20 = %v7 /\
    %fa8_20 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_20 = %v0 /\ %fa1_20 = %v1 /\ %fa2_20 = %v2 /\ %fa3_20 = %v3 /\ %fa4_20 = %v4 /\ %fa5_20 = %v5 /\ %fa6_20 = %v6 /\ %fa7_20 = %v7 /\
    %fa8_20 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 13 *)
    %fa0_20 = %v0 /\ %fa1_20 = %v1 /\ %fa2_20 = %v2 /\ %fa3_20 = %v3 /\ %fa4_20 = %v4 /\ %fa5_20 = %v5 /\ %fa6_20 = %v6 /\ %fa7_20 = %v7 /\
    %fa8_20 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_20 = [arr2000, arr2001, arr2002, arr2003, arr2004, arr2005, arr2006, arr2007] /\
    %fa1_20 = [arr2010, arr2011, arr2012, arr2013, arr2014, arr2015, arr2016, arr2017] /\
    %fa2_20 = [arr2020, arr2021, arr2022, arr2023, arr2024, arr2025, arr2026, arr2027] /\
    %fa3_20 = [arr2030, arr2031, arr2032, arr2033, arr2034, arr2035, arr2036, arr2037] /\
    %fa4_20 = [arr2040, arr2041, arr2042, arr2043, arr2044, arr2045, arr2046, arr2047] /\
    %fa5_20 = [arr2050, arr2051, arr2052, arr2053, arr2054, arr2055, arr2056, arr2057] /\
    %fa6_20 = [arr2060, arr2061, arr2062, arr2063, arr2064, arr2065, arr2066, arr2067] /\
    %fa7_20 = [arr2070, arr2071, arr2072, arr2073, arr2074, arr2075, arr2076, arr2077] /\
    %fa8_20 = [arr2080, arr2081, arr2082, arr2083, arr2084, arr2085, arr2086, arr2087]
  &&
    %fa0_20 = %v0 /\ %fa1_20 = %v1 /\ %fa2_20 = %v2 /\ %fa3_20 = %v3 /\ %fa4_20 = %v4 /\ %fa5_20 = %v5 /\ %fa6_20 = %v6 /\ %fa7_20 = %v7 /\
    %fa8_20 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_20 = [arr2000, arr2001, arr2002, arr2003, arr2004, arr2005, arr2006, arr2007] /\
    %fa1_20 = [arr2010, arr2011, arr2012, arr2013, arr2014, arr2015, arr2016, arr2017] /\
    %fa2_20 = [arr2020, arr2021, arr2022, arr2023, arr2024, arr2025, arr2026, arr2027] /\
    %fa3_20 = [arr2030, arr2031, arr2032, arr2033, arr2034, arr2035, arr2036, arr2037] /\
    %fa4_20 = [arr2040, arr2041, arr2042, arr2043, arr2044, arr2045, arr2046, arr2047] /\
    %fa5_20 = [arr2050, arr2051, arr2052, arr2053, arr2054, arr2055, arr2056, arr2057] /\
    %fa6_20 = [arr2060, arr2061, arr2062, arr2063, arr2064, arr2065, arr2066, arr2067] /\
    %fa7_20 = [arr2070, arr2071, arr2072, arr2073, arr2074, arr2075, arr2076, arr2077] /\
    %fa8_20 = [arr2080, arr2081, arr2082, arr2083, arr2084, arr2085, arr2086, arr2087];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 14 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_20 +
        %fa3_20 +
        %fa6_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_20 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_20 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_20 +
        %fa7_20 +
        %fa4_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_20 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_20 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_20 +
        %fa2_20 +
        %fa5_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_20 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_20 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 13], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 15 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_20 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_20 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_20 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_20 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_20 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_20 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_20 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_20 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_20 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_20 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_20 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_20 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_20 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_20 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_20 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_20 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_20 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_20 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_20 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_20 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_20 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_20 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_20 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_20 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_20 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_20 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_20 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_20 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_20 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_20 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_20 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_20 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_20 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_20 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_20 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_20 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_20 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_20 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_20 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_20 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_20 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_20 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_20 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_20 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_20 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_20 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_20 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_20 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_20 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_20 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_20 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_20 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_20 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_20 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_20 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_20 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_20 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_20 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_20 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_20 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_20 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_20
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[14]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x5555551344 *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19]                                   #! EA = L0x7fffffdc70; PC = 0x5555551348 *)
mov [L0x7fffffdc70,L0x7fffffdc72,L0x7fffffdc74,L0x7fffffdc76,L0x7fffffdc78,L0x7fffffdc7a,L0x7fffffdc7c,L0x7fffffdc7e] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x555555134c *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #16]                              #! EA = L0x7fffffdc80; PC = 0x5555551350 *)
mov [L0x7fffffdc80,L0x7fffffdc82,L0x7fffffdc84,L0x7fffffdc86,L0x7fffffdc88,L0x7fffffdc8a,L0x7fffffdc8c,L0x7fffffdc8e] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x5555551354 *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #32]                              #! EA = L0x7fffffdc90; PC = 0x5555551358 *)
mov [L0x7fffffdc90,L0x7fffffdc92,L0x7fffffdc94,L0x7fffffdc96,L0x7fffffdc98,L0x7fffffdc9a,L0x7fffffdc9c,L0x7fffffdc9e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x555555135c *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #48]                              #! EA = L0x7fffffdca0; PC = 0x5555551360 *)
mov [L0x7fffffdca0,L0x7fffffdca2,L0x7fffffdca4,L0x7fffffdca6,L0x7fffffdca8,L0x7fffffdcaa,L0x7fffffdcac,L0x7fffffdcae] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x5555551364 *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #64]                              #! EA = L0x7fffffdcb0; PC = 0x5555551368 *)
mov [L0x7fffffdcb0,L0x7fffffdcb2,L0x7fffffdcb4,L0x7fffffdcb6,L0x7fffffdcb8,L0x7fffffdcba,L0x7fffffdcbc,L0x7fffffdcbe] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x555555136c *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #80]                              #! EA = L0x7fffffdcc0; PC = 0x5555551370 *)
mov [L0x7fffffdcc0,L0x7fffffdcc2,L0x7fffffdcc4,L0x7fffffdcc6,L0x7fffffdcc8,L0x7fffffdcca,L0x7fffffdccc,L0x7fffffdcce] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x5555551374 *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #96]                              #! EA = L0x7fffffdcd0; PC = 0x5555551378 *)
mov [L0x7fffffdcd0,L0x7fffffdcd2,L0x7fffffdcd4,L0x7fffffdcd6,L0x7fffffdcd8,L0x7fffffdcda,L0x7fffffdcdc,L0x7fffffdcde] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x555555137c *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #112]                             #! EA = L0x7fffffdce0; PC = 0x5555551380 *)
mov [L0x7fffffdce0,L0x7fffffdce2,L0x7fffffdce4,L0x7fffffdce6,L0x7fffffdce8,L0x7fffffdcea,L0x7fffffdcec,L0x7fffffdcee] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x5555551384 *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #128]                             #! EA = L0x7fffffdcf0; PC = 0x5555551388 *)
mov [L0x7fffffdcf0,L0x7fffffdcf2,L0x7fffffdcf4,L0x7fffffdcf6,L0x7fffffdcf8,L0x7fffffdcfa,L0x7fffffdcfc,L0x7fffffdcfe] %v0;


### k0_iter


#### load

(* ldr	q7, [x19, #256]                             #! EA = L0x7fffffdd70; Value = 0x0000000000000000; PC = 0x555555138c *)
mov %v7 [L0x7fffffdd70,L0x7fffffdd72,L0x7fffffdd74,L0x7fffffdd76,L0x7fffffdd78,L0x7fffffdd7a,L0x7fffffdd7c,L0x7fffffdd7e];
(* ldr	q6, [x19, #240]                             #! EA = L0x7fffffdd60; Value = 0x0000000000000000; PC = 0x5555551390 *)
mov %v6 [L0x7fffffdd60,L0x7fffffdd62,L0x7fffffdd64,L0x7fffffdd66,L0x7fffffdd68,L0x7fffffdd6a,L0x7fffffdd6c,L0x7fffffdd6e];
(* ldr	q5, [x19, #224]                             #! EA = L0x7fffffdd50; Value = 0x0000000000000000; PC = 0x5555551394 *)
mov %v5 [L0x7fffffdd50,L0x7fffffdd52,L0x7fffffdd54,L0x7fffffdd56,L0x7fffffdd58,L0x7fffffdd5a,L0x7fffffdd5c,L0x7fffffdd5e];
(* ldr	q4, [x19, #208]                             #! EA = L0x7fffffdd40; Value = 0x0000000000000000; PC = 0x5555551398 *)
mov %v4 [L0x7fffffdd40,L0x7fffffdd42,L0x7fffffdd44,L0x7fffffdd46,L0x7fffffdd48,L0x7fffffdd4a,L0x7fffffdd4c,L0x7fffffdd4e];
(* ldr	q3, [x19, #192]                             #! EA = L0x7fffffdd30; Value = 0x0000000000000000; PC = 0x555555139c *)
mov %v3 [L0x7fffffdd30,L0x7fffffdd32,L0x7fffffdd34,L0x7fffffdd36,L0x7fffffdd38,L0x7fffffdd3a,L0x7fffffdd3c,L0x7fffffdd3e];
(* ldr	q2, [x19, #176]                             #! EA = L0x7fffffdd20; Value = 0x0000000000000000; PC = 0x55555513a0 *)
mov %v2 [L0x7fffffdd20,L0x7fffffdd22,L0x7fffffdd24,L0x7fffffdd26,L0x7fffffdd28,L0x7fffffdd2a,L0x7fffffdd2c,L0x7fffffdd2e];
(* ldr	q1, [x19, #160]                             #! EA = L0x7fffffdd10; Value = 0x0000000000000000; PC = 0x55555513a4 *)
mov %v1 [L0x7fffffdd10,L0x7fffffdd12,L0x7fffffdd14,L0x7fffffdd16,L0x7fffffdd18,L0x7fffffdd1a,L0x7fffffdd1c,L0x7fffffdd1e];
(* ldr	q0, [x19, #144]                             #! EA = L0x7fffffdd00; Value = 0x0000000000000000; PC = 0x55555513a8 *)
mov %v0 [L0x7fffffdd00,L0x7fffffdd02,L0x7fffffdd04,L0x7fffffdd06,L0x7fffffdd08,L0x7fffffdd0a,L0x7fffffdd0c,L0x7fffffdd0e];
(* ldr	q16, [x19, #272]                            #! EA = L0x7fffffdd80; Value = 0x0000000000000000; PC = 0x55555513b0 *)
mov %v16 [L0x7fffffdd80,L0x7fffffdd82,L0x7fffffdd84,L0x7fffffdd86,L0x7fffffdd88,L0x7fffffdd8a,L0x7fffffdd8c,L0x7fffffdd8e];
(* str	q16, [sp]                                   #! EA = L0x7fffffc260; PC = 0x55555513b4 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v16;
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x55555513d8 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x55555513d8 = 0x55555513d8;

ghost %fa0_21@sint16[8], %fa1_21@sint16[8], %fa2_21@sint16[8], %fa3_21@sint16[8], %fa4_21@sint16[8], %fa5_21@sint16[8], %fa6_21@sint16[8], %fa7_21@sint16[8], %fa8_21@sint16[8] :
    %fa0_21 = %v0 /\ %fa1_21 = %v1 /\ %fa2_21 = %v2 /\ %fa3_21 = %v3 /\ %fa4_21 = %v4 /\ %fa5_21 = %v5 /\ %fa6_21 = %v6 /\ %fa7_21 = %v7 /\
    %fa8_21 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_21 = %v0 /\ %fa1_21 = %v1 /\ %fa2_21 = %v2 /\ %fa3_21 = %v3 /\ %fa4_21 = %v4 /\ %fa5_21 = %v5 /\ %fa6_21 = %v6 /\ %fa7_21 = %v7 /\
    %fa8_21 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 16 *)
    %fa0_21 = %v0 /\ %fa1_21 = %v1 /\ %fa2_21 = %v2 /\ %fa3_21 = %v3 /\ %fa4_21 = %v4 /\ %fa5_21 = %v5 /\ %fa6_21 = %v6 /\ %fa7_21 = %v7 /\
    %fa8_21 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_21 = [arr2100, arr2101, arr2102, arr2103, arr2104, arr2105, arr2106, arr2107] /\
    %fa1_21 = [arr2110, arr2111, arr2112, arr2113, arr2114, arr2115, arr2116, arr2117] /\
    %fa2_21 = [arr2120, arr2121, arr2122, arr2123, arr2124, arr2125, arr2126, arr2127] /\
    %fa3_21 = [arr2130, arr2131, arr2132, arr2133, arr2134, arr2135, arr2136, arr2137] /\
    %fa4_21 = [arr2140, arr2141, arr2142, arr2143, arr2144, arr2145, arr2146, arr2147] /\
    %fa5_21 = [arr2150, arr2151, arr2152, arr2153, arr2154, arr2155, arr2156, arr2157] /\
    %fa6_21 = [arr2160, arr2161, arr2162, arr2163, arr2164, arr2165, arr2166, arr2167] /\
    %fa7_21 = [arr2170, arr2171, arr2172, arr2173, arr2174, arr2175, arr2176, arr2177] /\
    %fa8_21 = [arr2180, arr2181, arr2182, arr2183, arr2184, arr2185, arr2186, arr2187]
  &&
    %fa0_21 = %v0 /\ %fa1_21 = %v1 /\ %fa2_21 = %v2 /\ %fa3_21 = %v3 /\ %fa4_21 = %v4 /\ %fa5_21 = %v5 /\ %fa6_21 = %v6 /\ %fa7_21 = %v7 /\
    %fa8_21 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_21 = [arr2100, arr2101, arr2102, arr2103, arr2104, arr2105, arr2106, arr2107] /\
    %fa1_21 = [arr2110, arr2111, arr2112, arr2113, arr2114, arr2115, arr2116, arr2117] /\
    %fa2_21 = [arr2120, arr2121, arr2122, arr2123, arr2124, arr2125, arr2126, arr2127] /\
    %fa3_21 = [arr2130, arr2131, arr2132, arr2133, arr2134, arr2135, arr2136, arr2137] /\
    %fa4_21 = [arr2140, arr2141, arr2142, arr2143, arr2144, arr2145, arr2146, arr2147] /\
    %fa5_21 = [arr2150, arr2151, arr2152, arr2153, arr2154, arr2155, arr2156, arr2157] /\
    %fa6_21 = [arr2160, arr2161, arr2162, arr2163, arr2164, arr2165, arr2166, arr2167] /\
    %fa7_21 = [arr2170, arr2171, arr2172, arr2173, arr2174, arr2175, arr2176, arr2177] /\
    %fa8_21 = [arr2180, arr2181, arr2182, arr2183, arr2184, arr2185, arr2186, arr2187];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 17 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_21 +
        %fa3_21 +
        %fa6_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_21 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_21 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_21 +
        %fa7_21 +
        %fa4_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_21 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_21 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_21 +
        %fa2_21 +
        %fa5_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_21 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_21 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 16], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 18 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_21 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_21 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_21 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_21 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_21 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_21 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_21 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_21 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_21 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_21 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_21 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_21 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_21 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_21 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_21 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_21 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_21 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_21 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_21 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_21 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_21 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_21 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_21 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_21 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_21 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_21 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_21 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_21 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_21 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_21 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_21 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_21 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_21 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_21 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_21 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_21 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_21 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_21 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_21 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_21 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_21 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_21 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_21 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_21 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_21 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_21 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_21 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_21 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_21 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_21 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_21 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_21 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_21 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_21 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_21 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_21 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_21 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_21 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_21 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_21 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_21 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_21
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[17]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x55555513dc *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19, #144]                             #! EA = L0x7fffffdd00; PC = 0x55555513e0 *)
mov [L0x7fffffdd00,L0x7fffffdd02,L0x7fffffdd04,L0x7fffffdd06,L0x7fffffdd08,L0x7fffffdd0a,L0x7fffffdd0c,L0x7fffffdd0e] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x55555513e4 *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #160]                             #! EA = L0x7fffffdd10; PC = 0x55555513e8 *)
mov [L0x7fffffdd10,L0x7fffffdd12,L0x7fffffdd14,L0x7fffffdd16,L0x7fffffdd18,L0x7fffffdd1a,L0x7fffffdd1c,L0x7fffffdd1e] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x55555513ec *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #176]                             #! EA = L0x7fffffdd20; PC = 0x55555513f0 *)
mov [L0x7fffffdd20,L0x7fffffdd22,L0x7fffffdd24,L0x7fffffdd26,L0x7fffffdd28,L0x7fffffdd2a,L0x7fffffdd2c,L0x7fffffdd2e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x55555513f4 *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #192]                             #! EA = L0x7fffffdd30; PC = 0x55555513f8 *)
mov [L0x7fffffdd30,L0x7fffffdd32,L0x7fffffdd34,L0x7fffffdd36,L0x7fffffdd38,L0x7fffffdd3a,L0x7fffffdd3c,L0x7fffffdd3e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x55555513fc *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #208]                             #! EA = L0x7fffffdd40; PC = 0x5555551400 *)
mov [L0x7fffffdd40,L0x7fffffdd42,L0x7fffffdd44,L0x7fffffdd46,L0x7fffffdd48,L0x7fffffdd4a,L0x7fffffdd4c,L0x7fffffdd4e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x5555551404 *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #224]                             #! EA = L0x7fffffdd50; PC = 0x5555551408 *)
mov [L0x7fffffdd50,L0x7fffffdd52,L0x7fffffdd54,L0x7fffffdd56,L0x7fffffdd58,L0x7fffffdd5a,L0x7fffffdd5c,L0x7fffffdd5e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x555555140c *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #240]                             #! EA = L0x7fffffdd60; PC = 0x5555551410 *)
mov [L0x7fffffdd60,L0x7fffffdd62,L0x7fffffdd64,L0x7fffffdd66,L0x7fffffdd68,L0x7fffffdd6a,L0x7fffffdd6c,L0x7fffffdd6e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x5555551414 *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #256]                             #! EA = L0x7fffffdd70; PC = 0x5555551418 *)
mov [L0x7fffffdd70,L0x7fffffdd72,L0x7fffffdd74,L0x7fffffdd76,L0x7fffffdd78,L0x7fffffdd7a,L0x7fffffdd7c,L0x7fffffdd7e] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x555555141c *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #272]                             #! EA = L0x7fffffdd80; PC = 0x5555551420 *)
mov [L0x7fffffdd80,L0x7fffffdd82,L0x7fffffdd84,L0x7fffffdd86,L0x7fffffdd88,L0x7fffffdd8a,L0x7fffffdd8c,L0x7fffffdd8e] %v0;


### epilogue

(* #b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! PC = 0x5555551430 *)
#b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! 0x5555551430 = 0x5555551430;


## i_iter


### k0_iter


#### load

(* ldr	q7, [x19, #112]                             #! EA = L0x7fffffde00; Value = 0x0000000000000000; PC = 0x55555512f0 *)
mov %v7 [L0x7fffffde00,L0x7fffffde02,L0x7fffffde04,L0x7fffffde06,L0x7fffffde08,L0x7fffffde0a,L0x7fffffde0c,L0x7fffffde0e];
(* ldr	q6, [x19, #96]                              #! EA = L0x7fffffddf0; Value = 0x0000000000000000; PC = 0x55555512f4 *)
mov %v6 [L0x7fffffddf0,L0x7fffffddf2,L0x7fffffddf4,L0x7fffffddf6,L0x7fffffddf8,L0x7fffffddfa,L0x7fffffddfc,L0x7fffffddfe];
(* ldr	q5, [x19, #80]                              #! EA = L0x7fffffdde0; Value = 0x0000000000000000; PC = 0x55555512f8 *)
mov %v5 [L0x7fffffdde0,L0x7fffffdde2,L0x7fffffdde4,L0x7fffffdde6,L0x7fffffdde8,L0x7fffffddea,L0x7fffffddec,L0x7fffffddee];
(* ldr	q4, [x19, #64]                              #! EA = L0x7fffffddd0; Value = 0x0000000000000000; PC = 0x55555512fc *)
mov %v4 [L0x7fffffddd0,L0x7fffffddd2,L0x7fffffddd4,L0x7fffffddd6,L0x7fffffddd8,L0x7fffffddda,L0x7fffffdddc,L0x7fffffddde];
(* ldr	q3, [x19, #48]                              #! EA = L0x7fffffddc0; Value = 0x0000000000000000; PC = 0x5555551300 *)
mov %v3 [L0x7fffffddc0,L0x7fffffddc2,L0x7fffffddc4,L0x7fffffddc6,L0x7fffffddc8,L0x7fffffddca,L0x7fffffddcc,L0x7fffffddce];
(* ldr	q2, [x19, #32]                              #! EA = L0x7fffffddb0; Value = 0x0000000000000000; PC = 0x5555551304 *)
mov %v2 [L0x7fffffddb0,L0x7fffffddb2,L0x7fffffddb4,L0x7fffffddb6,L0x7fffffddb8,L0x7fffffddba,L0x7fffffddbc,L0x7fffffddbe];
(* ldr	q1, [x19, #16]                              #! EA = L0x7fffffdda0; Value = 0x0000000000000000; PC = 0x5555551308 *)
mov %v1 [L0x7fffffdda0,L0x7fffffdda2,L0x7fffffdda4,L0x7fffffdda6,L0x7fffffdda8,L0x7fffffddaa,L0x7fffffddac,L0x7fffffddae];
(* ldr	q0, [x19, #128]                             #! EA = L0x7fffffde10; Value = 0x0000000000000000; PC = 0x5555551314 *)
mov %v0 [L0x7fffffde10,L0x7fffffde12,L0x7fffffde14,L0x7fffffde16,L0x7fffffde18,L0x7fffffde1a,L0x7fffffde1c,L0x7fffffde1e];
(* str	q0, [sp]                                    #! EA = L0x7fffffc260; PC = 0x5555551318 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v0;
(* ldr	q0, [x19]                                   #! EA = L0x7fffffdd90; Value = 0x0000000000000000; PC = 0x555555133c *)
mov %v0 [L0x7fffffdd90,L0x7fffffdd92,L0x7fffffdd94,L0x7fffffdd96,L0x7fffffdd98,L0x7fffffdd9a,L0x7fffffdd9c,L0x7fffffdd9e];
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x5555551340 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x5555551340 = 0x5555551340;

ghost %fa0_30@sint16[8], %fa1_30@sint16[8], %fa2_30@sint16[8], %fa3_30@sint16[8], %fa4_30@sint16[8], %fa5_30@sint16[8], %fa6_30@sint16[8], %fa7_30@sint16[8], %fa8_30@sint16[8] :
    %fa0_30 = %v0 /\ %fa1_30 = %v1 /\ %fa2_30 = %v2 /\ %fa3_30 = %v3 /\ %fa4_30 = %v4 /\ %fa5_30 = %v5 /\ %fa6_30 = %v6 /\ %fa7_30 = %v7 /\
    %fa8_30 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_30 = %v0 /\ %fa1_30 = %v1 /\ %fa2_30 = %v2 /\ %fa3_30 = %v3 /\ %fa4_30 = %v4 /\ %fa5_30 = %v5 /\ %fa6_30 = %v6 /\ %fa7_30 = %v7 /\
    %fa8_30 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 19 *)
    %fa0_30 = %v0 /\ %fa1_30 = %v1 /\ %fa2_30 = %v2 /\ %fa3_30 = %v3 /\ %fa4_30 = %v4 /\ %fa5_30 = %v5 /\ %fa6_30 = %v6 /\ %fa7_30 = %v7 /\
    %fa8_30 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_30 = [arr3000, arr3001, arr3002, arr3003, arr3004, arr3005, arr3006, arr3007] /\
    %fa1_30 = [arr3010, arr3011, arr3012, arr3013, arr3014, arr3015, arr3016, arr3017] /\
    %fa2_30 = [arr3020, arr3021, arr3022, arr3023, arr3024, arr3025, arr3026, arr3027] /\
    %fa3_30 = [arr3030, arr3031, arr3032, arr3033, arr3034, arr3035, arr3036, arr3037] /\
    %fa4_30 = [arr3040, arr3041, arr3042, arr3043, arr3044, arr3045, arr3046, arr3047] /\
    %fa5_30 = [arr3050, arr3051, arr3052, arr3053, arr3054, arr3055, arr3056, arr3057] /\
    %fa6_30 = [arr3060, arr3061, arr3062, arr3063, arr3064, arr3065, arr3066, arr3067] /\
    %fa7_30 = [arr3070, arr3071, arr3072, arr3073, arr3074, arr3075, arr3076, arr3077] /\
    %fa8_30 = [arr3080, arr3081, arr3082, arr3083, arr3084, arr3085, arr3086, arr3087]
  &&
    %fa0_30 = %v0 /\ %fa1_30 = %v1 /\ %fa2_30 = %v2 /\ %fa3_30 = %v3 /\ %fa4_30 = %v4 /\ %fa5_30 = %v5 /\ %fa6_30 = %v6 /\ %fa7_30 = %v7 /\
    %fa8_30 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_30 = [arr3000, arr3001, arr3002, arr3003, arr3004, arr3005, arr3006, arr3007] /\
    %fa1_30 = [arr3010, arr3011, arr3012, arr3013, arr3014, arr3015, arr3016, arr3017] /\
    %fa2_30 = [arr3020, arr3021, arr3022, arr3023, arr3024, arr3025, arr3026, arr3027] /\
    %fa3_30 = [arr3030, arr3031, arr3032, arr3033, arr3034, arr3035, arr3036, arr3037] /\
    %fa4_30 = [arr3040, arr3041, arr3042, arr3043, arr3044, arr3045, arr3046, arr3047] /\
    %fa5_30 = [arr3050, arr3051, arr3052, arr3053, arr3054, arr3055, arr3056, arr3057] /\
    %fa6_30 = [arr3060, arr3061, arr3062, arr3063, arr3064, arr3065, arr3066, arr3067] /\
    %fa7_30 = [arr3070, arr3071, arr3072, arr3073, arr3074, arr3075, arr3076, arr3077] /\
    %fa8_30 = [arr3080, arr3081, arr3082, arr3083, arr3084, arr3085, arr3086, arr3087];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 20 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_30 +
        %fa3_30 +
        %fa6_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_30 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_30 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_30 +
        %fa7_30 +
        %fa4_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_30 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_30 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_30 +
        %fa2_30 +
        %fa5_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_30 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_30 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 19], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 21 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_30 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_30 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_30 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_30 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_30 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_30 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_30 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_30 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_30 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_30 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_30 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_30 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_30 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_30 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_30 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_30 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_30 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_30 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_30 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_30 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_30 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_30 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_30 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_30 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_30 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_30 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_30 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_30 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_30 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_30 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_30 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_30 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_30 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_30 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_30 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_30 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_30 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_30 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_30 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_30 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_30 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_30 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_30 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_30 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_30 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_30 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_30 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_30 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_30 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_30 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_30 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_30 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_30 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_30 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_30 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_30 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_30 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_30 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_30 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_30 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_30 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_30
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[20]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x5555551344 *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19]                                   #! EA = L0x7fffffdd90; PC = 0x5555551348 *)
mov [L0x7fffffdd90,L0x7fffffdd92,L0x7fffffdd94,L0x7fffffdd96,L0x7fffffdd98,L0x7fffffdd9a,L0x7fffffdd9c,L0x7fffffdd9e] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x555555134c *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #16]                              #! EA = L0x7fffffdda0; PC = 0x5555551350 *)
mov [L0x7fffffdda0,L0x7fffffdda2,L0x7fffffdda4,L0x7fffffdda6,L0x7fffffdda8,L0x7fffffddaa,L0x7fffffddac,L0x7fffffddae] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x5555551354 *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #32]                              #! EA = L0x7fffffddb0; PC = 0x5555551358 *)
mov [L0x7fffffddb0,L0x7fffffddb2,L0x7fffffddb4,L0x7fffffddb6,L0x7fffffddb8,L0x7fffffddba,L0x7fffffddbc,L0x7fffffddbe] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x555555135c *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #48]                              #! EA = L0x7fffffddc0; PC = 0x5555551360 *)
mov [L0x7fffffddc0,L0x7fffffddc2,L0x7fffffddc4,L0x7fffffddc6,L0x7fffffddc8,L0x7fffffddca,L0x7fffffddcc,L0x7fffffddce] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x5555551364 *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #64]                              #! EA = L0x7fffffddd0; PC = 0x5555551368 *)
mov [L0x7fffffddd0,L0x7fffffddd2,L0x7fffffddd4,L0x7fffffddd6,L0x7fffffddd8,L0x7fffffddda,L0x7fffffdddc,L0x7fffffddde] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x555555136c *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #80]                              #! EA = L0x7fffffdde0; PC = 0x5555551370 *)
mov [L0x7fffffdde0,L0x7fffffdde2,L0x7fffffdde4,L0x7fffffdde6,L0x7fffffdde8,L0x7fffffddea,L0x7fffffddec,L0x7fffffddee] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x5555551374 *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #96]                              #! EA = L0x7fffffddf0; PC = 0x5555551378 *)
mov [L0x7fffffddf0,L0x7fffffddf2,L0x7fffffddf4,L0x7fffffddf6,L0x7fffffddf8,L0x7fffffddfa,L0x7fffffddfc,L0x7fffffddfe] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x555555137c *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #112]                             #! EA = L0x7fffffde00; PC = 0x5555551380 *)
mov [L0x7fffffde00,L0x7fffffde02,L0x7fffffde04,L0x7fffffde06,L0x7fffffde08,L0x7fffffde0a,L0x7fffffde0c,L0x7fffffde0e] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x5555551384 *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #128]                             #! EA = L0x7fffffde10; PC = 0x5555551388 *)
mov [L0x7fffffde10,L0x7fffffde12,L0x7fffffde14,L0x7fffffde16,L0x7fffffde18,L0x7fffffde1a,L0x7fffffde1c,L0x7fffffde1e] %v0;


### k0_iter


#### load

(* ldr	q7, [x19, #256]                             #! EA = L0x7fffffde90; Value = 0x0000000000000000; PC = 0x555555138c *)
mov %v7 [L0x7fffffde90,L0x7fffffde92,L0x7fffffde94,L0x7fffffde96,L0x7fffffde98,L0x7fffffde9a,L0x7fffffde9c,L0x7fffffde9e];
(* ldr	q6, [x19, #240]                             #! EA = L0x7fffffde80; Value = 0x0000000000000000; PC = 0x5555551390 *)
mov %v6 [L0x7fffffde80,L0x7fffffde82,L0x7fffffde84,L0x7fffffde86,L0x7fffffde88,L0x7fffffde8a,L0x7fffffde8c,L0x7fffffde8e];
(* ldr	q5, [x19, #224]                             #! EA = L0x7fffffde70; Value = 0x0000000000000000; PC = 0x5555551394 *)
mov %v5 [L0x7fffffde70,L0x7fffffde72,L0x7fffffde74,L0x7fffffde76,L0x7fffffde78,L0x7fffffde7a,L0x7fffffde7c,L0x7fffffde7e];
(* ldr	q4, [x19, #208]                             #! EA = L0x7fffffde60; Value = 0x0000000000000000; PC = 0x5555551398 *)
mov %v4 [L0x7fffffde60,L0x7fffffde62,L0x7fffffde64,L0x7fffffde66,L0x7fffffde68,L0x7fffffde6a,L0x7fffffde6c,L0x7fffffde6e];
(* ldr	q3, [x19, #192]                             #! EA = L0x7fffffde50; Value = 0x0000000000000000; PC = 0x555555139c *)
mov %v3 [L0x7fffffde50,L0x7fffffde52,L0x7fffffde54,L0x7fffffde56,L0x7fffffde58,L0x7fffffde5a,L0x7fffffde5c,L0x7fffffde5e];
(* ldr	q2, [x19, #176]                             #! EA = L0x7fffffde40; Value = 0x0000000000000000; PC = 0x55555513a0 *)
mov %v2 [L0x7fffffde40,L0x7fffffde42,L0x7fffffde44,L0x7fffffde46,L0x7fffffde48,L0x7fffffde4a,L0x7fffffde4c,L0x7fffffde4e];
(* ldr	q1, [x19, #160]                             #! EA = L0x7fffffde30; Value = 0x0000000000000000; PC = 0x55555513a4 *)
mov %v1 [L0x7fffffde30,L0x7fffffde32,L0x7fffffde34,L0x7fffffde36,L0x7fffffde38,L0x7fffffde3a,L0x7fffffde3c,L0x7fffffde3e];
(* ldr	q0, [x19, #144]                             #! EA = L0x7fffffde20; Value = 0x0000000000000000; PC = 0x55555513a8 *)
mov %v0 [L0x7fffffde20,L0x7fffffde22,L0x7fffffde24,L0x7fffffde26,L0x7fffffde28,L0x7fffffde2a,L0x7fffffde2c,L0x7fffffde2e];
(* ldr	q16, [x19, #272]                            #! EA = L0x7fffffdea0; Value = 0x0000000000000000; PC = 0x55555513b0 *)
mov %v16 [L0x7fffffdea0,L0x7fffffdea2,L0x7fffffdea4,L0x7fffffdea6,L0x7fffffdea8,L0x7fffffdeaa,L0x7fffffdeac,L0x7fffffdeae];
(* str	q16, [sp]                                   #! EA = L0x7fffffc260; PC = 0x55555513b4 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v16;
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x55555513d8 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x55555513d8 = 0x55555513d8;

ghost %fa0_31@sint16[8], %fa1_31@sint16[8], %fa2_31@sint16[8], %fa3_31@sint16[8], %fa4_31@sint16[8], %fa5_31@sint16[8], %fa6_31@sint16[8], %fa7_31@sint16[8], %fa8_31@sint16[8] :
    %fa0_31 = %v0 /\ %fa1_31 = %v1 /\ %fa2_31 = %v2 /\ %fa3_31 = %v3 /\ %fa4_31 = %v4 /\ %fa5_31 = %v5 /\ %fa6_31 = %v6 /\ %fa7_31 = %v7 /\
    %fa8_31 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_31 = %v0 /\ %fa1_31 = %v1 /\ %fa2_31 = %v2 /\ %fa3_31 = %v3 /\ %fa4_31 = %v4 /\ %fa5_31 = %v5 /\ %fa6_31 = %v6 /\ %fa7_31 = %v7 /\
    %fa8_31 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 22 *)
    %fa0_31 = %v0 /\ %fa1_31 = %v1 /\ %fa2_31 = %v2 /\ %fa3_31 = %v3 /\ %fa4_31 = %v4 /\ %fa5_31 = %v5 /\ %fa6_31 = %v6 /\ %fa7_31 = %v7 /\
    %fa8_31 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_31 = [arr3100, arr3101, arr3102, arr3103, arr3104, arr3105, arr3106, arr3107] /\
    %fa1_31 = [arr3110, arr3111, arr3112, arr3113, arr3114, arr3115, arr3116, arr3117] /\
    %fa2_31 = [arr3120, arr3121, arr3122, arr3123, arr3124, arr3125, arr3126, arr3127] /\
    %fa3_31 = [arr3130, arr3131, arr3132, arr3133, arr3134, arr3135, arr3136, arr3137] /\
    %fa4_31 = [arr3140, arr3141, arr3142, arr3143, arr3144, arr3145, arr3146, arr3147] /\
    %fa5_31 = [arr3150, arr3151, arr3152, arr3153, arr3154, arr3155, arr3156, arr3157] /\
    %fa6_31 = [arr3160, arr3161, arr3162, arr3163, arr3164, arr3165, arr3166, arr3167] /\
    %fa7_31 = [arr3170, arr3171, arr3172, arr3173, arr3174, arr3175, arr3176, arr3177] /\
    %fa8_31 = [arr3180, arr3181, arr3182, arr3183, arr3184, arr3185, arr3186, arr3187]
  &&
    %fa0_31 = %v0 /\ %fa1_31 = %v1 /\ %fa2_31 = %v2 /\ %fa3_31 = %v3 /\ %fa4_31 = %v4 /\ %fa5_31 = %v5 /\ %fa6_31 = %v6 /\ %fa7_31 = %v7 /\
    %fa8_31 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_31 = [arr3100, arr3101, arr3102, arr3103, arr3104, arr3105, arr3106, arr3107] /\
    %fa1_31 = [arr3110, arr3111, arr3112, arr3113, arr3114, arr3115, arr3116, arr3117] /\
    %fa2_31 = [arr3120, arr3121, arr3122, arr3123, arr3124, arr3125, arr3126, arr3127] /\
    %fa3_31 = [arr3130, arr3131, arr3132, arr3133, arr3134, arr3135, arr3136, arr3137] /\
    %fa4_31 = [arr3140, arr3141, arr3142, arr3143, arr3144, arr3145, arr3146, arr3147] /\
    %fa5_31 = [arr3150, arr3151, arr3152, arr3153, arr3154, arr3155, arr3156, arr3157] /\
    %fa6_31 = [arr3160, arr3161, arr3162, arr3163, arr3164, arr3165, arr3166, arr3167] /\
    %fa7_31 = [arr3170, arr3171, arr3172, arr3173, arr3174, arr3175, arr3176, arr3177] /\
    %fa8_31 = [arr3180, arr3181, arr3182, arr3183, arr3184, arr3185, arr3186, arr3187];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 23 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_31 +
        %fa3_31 +
        %fa6_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_31 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_31 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_31 +
        %fa7_31 +
        %fa4_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_31 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_31 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_31 +
        %fa2_31 +
        %fa5_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_31 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_31 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 22], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 24 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_31 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_31 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_31 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_31 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_31 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_31 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_31 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_31 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_31 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_31 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_31 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_31 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_31 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_31 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_31 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_31 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_31 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_31 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_31 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_31 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_31 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_31 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_31 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_31 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_31 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_31 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_31 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_31 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_31 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_31 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_31 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_31 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_31 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_31 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_31 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_31 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_31 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_31 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_31 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_31 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_31 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_31 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_31 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_31 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_31 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_31 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_31 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_31 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_31 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_31 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_31 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_31 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_31 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_31 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_31 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_31 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_31 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_31 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_31 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_31 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_31 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_31
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[23]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x55555513dc *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19, #144]                             #! EA = L0x7fffffde20; PC = 0x55555513e0 *)
mov [L0x7fffffde20,L0x7fffffde22,L0x7fffffde24,L0x7fffffde26,L0x7fffffde28,L0x7fffffde2a,L0x7fffffde2c,L0x7fffffde2e] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x55555513e4 *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #160]                             #! EA = L0x7fffffde30; PC = 0x55555513e8 *)
mov [L0x7fffffde30,L0x7fffffde32,L0x7fffffde34,L0x7fffffde36,L0x7fffffde38,L0x7fffffde3a,L0x7fffffde3c,L0x7fffffde3e] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x55555513ec *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #176]                             #! EA = L0x7fffffde40; PC = 0x55555513f0 *)
mov [L0x7fffffde40,L0x7fffffde42,L0x7fffffde44,L0x7fffffde46,L0x7fffffde48,L0x7fffffde4a,L0x7fffffde4c,L0x7fffffde4e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x55555513f4 *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #192]                             #! EA = L0x7fffffde50; PC = 0x55555513f8 *)
mov [L0x7fffffde50,L0x7fffffde52,L0x7fffffde54,L0x7fffffde56,L0x7fffffde58,L0x7fffffde5a,L0x7fffffde5c,L0x7fffffde5e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x55555513fc *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #208]                             #! EA = L0x7fffffde60; PC = 0x5555551400 *)
mov [L0x7fffffde60,L0x7fffffde62,L0x7fffffde64,L0x7fffffde66,L0x7fffffde68,L0x7fffffde6a,L0x7fffffde6c,L0x7fffffde6e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x5555551404 *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #224]                             #! EA = L0x7fffffde70; PC = 0x5555551408 *)
mov [L0x7fffffde70,L0x7fffffde72,L0x7fffffde74,L0x7fffffde76,L0x7fffffde78,L0x7fffffde7a,L0x7fffffde7c,L0x7fffffde7e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x555555140c *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #240]                             #! EA = L0x7fffffde80; PC = 0x5555551410 *)
mov [L0x7fffffde80,L0x7fffffde82,L0x7fffffde84,L0x7fffffde86,L0x7fffffde88,L0x7fffffde8a,L0x7fffffde8c,L0x7fffffde8e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x5555551414 *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #256]                             #! EA = L0x7fffffde90; PC = 0x5555551418 *)
mov [L0x7fffffde90,L0x7fffffde92,L0x7fffffde94,L0x7fffffde96,L0x7fffffde98,L0x7fffffde9a,L0x7fffffde9c,L0x7fffffde9e] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x555555141c *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #272]                             #! EA = L0x7fffffdea0; PC = 0x5555551420 *)
mov [L0x7fffffdea0,L0x7fffffdea2,L0x7fffffdea4,L0x7fffffdea6,L0x7fffffdea8,L0x7fffffdeaa,L0x7fffffdeac,L0x7fffffdeae] %v0;


### epilogue

(* #b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! PC = 0x5555551430 *)
#b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! 0x5555551430 = 0x5555551430;


## i_iter


### k0_iter


#### load

(* ldr	q7, [x19, #112]                             #! EA = L0x7fffffdf20; Value = 0x0000000000000000; PC = 0x55555512f0 *)
mov %v7 [L0x7fffffdf20,L0x7fffffdf22,L0x7fffffdf24,L0x7fffffdf26,L0x7fffffdf28,L0x7fffffdf2a,L0x7fffffdf2c,L0x7fffffdf2e];
(* ldr	q6, [x19, #96]                              #! EA = L0x7fffffdf10; Value = 0x0000000000000000; PC = 0x55555512f4 *)
mov %v6 [L0x7fffffdf10,L0x7fffffdf12,L0x7fffffdf14,L0x7fffffdf16,L0x7fffffdf18,L0x7fffffdf1a,L0x7fffffdf1c,L0x7fffffdf1e];
(* ldr	q5, [x19, #80]                              #! EA = L0x7fffffdf00; Value = 0x0000000000000000; PC = 0x55555512f8 *)
mov %v5 [L0x7fffffdf00,L0x7fffffdf02,L0x7fffffdf04,L0x7fffffdf06,L0x7fffffdf08,L0x7fffffdf0a,L0x7fffffdf0c,L0x7fffffdf0e];
(* ldr	q4, [x19, #64]                              #! EA = L0x7fffffdef0; Value = 0x0000000000000000; PC = 0x55555512fc *)
mov %v4 [L0x7fffffdef0,L0x7fffffdef2,L0x7fffffdef4,L0x7fffffdef6,L0x7fffffdef8,L0x7fffffdefa,L0x7fffffdefc,L0x7fffffdefe];
(* ldr	q3, [x19, #48]                              #! EA = L0x7fffffdee0; Value = 0x0000000000000000; PC = 0x5555551300 *)
mov %v3 [L0x7fffffdee0,L0x7fffffdee2,L0x7fffffdee4,L0x7fffffdee6,L0x7fffffdee8,L0x7fffffdeea,L0x7fffffdeec,L0x7fffffdeee];
(* ldr	q2, [x19, #32]                              #! EA = L0x7fffffded0; Value = 0x0000000000000000; PC = 0x5555551304 *)
mov %v2 [L0x7fffffded0,L0x7fffffded2,L0x7fffffded4,L0x7fffffded6,L0x7fffffded8,L0x7fffffdeda,L0x7fffffdedc,L0x7fffffdede];
(* ldr	q1, [x19, #16]                              #! EA = L0x7fffffdec0; Value = 0x0000000000000000; PC = 0x5555551308 *)
mov %v1 [L0x7fffffdec0,L0x7fffffdec2,L0x7fffffdec4,L0x7fffffdec6,L0x7fffffdec8,L0x7fffffdeca,L0x7fffffdecc,L0x7fffffdece];
(* ldr	q0, [x19, #128]                             #! EA = L0x7fffffdf30; Value = 0x0000000000000000; PC = 0x5555551314 *)
mov %v0 [L0x7fffffdf30,L0x7fffffdf32,L0x7fffffdf34,L0x7fffffdf36,L0x7fffffdf38,L0x7fffffdf3a,L0x7fffffdf3c,L0x7fffffdf3e];
(* str	q0, [sp]                                    #! EA = L0x7fffffc260; PC = 0x5555551318 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v0;
(* ldr	q0, [x19]                                   #! EA = L0x7fffffdeb0; Value = 0x0000000000000000; PC = 0x555555133c *)
mov %v0 [L0x7fffffdeb0,L0x7fffffdeb2,L0x7fffffdeb4,L0x7fffffdeb6,L0x7fffffdeb8,L0x7fffffdeba,L0x7fffffdebc,L0x7fffffdebe];
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x5555551340 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x5555551340 = 0x5555551340;

ghost %fa0_40@sint16[8], %fa1_40@sint16[8], %fa2_40@sint16[8], %fa3_40@sint16[8], %fa4_40@sint16[8], %fa5_40@sint16[8], %fa6_40@sint16[8], %fa7_40@sint16[8], %fa8_40@sint16[8] :
    %fa0_40 = %v0 /\ %fa1_40 = %v1 /\ %fa2_40 = %v2 /\ %fa3_40 = %v3 /\ %fa4_40 = %v4 /\ %fa5_40 = %v5 /\ %fa6_40 = %v6 /\ %fa7_40 = %v7 /\
    %fa8_40 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_40 = %v0 /\ %fa1_40 = %v1 /\ %fa2_40 = %v2 /\ %fa3_40 = %v3 /\ %fa4_40 = %v4 /\ %fa5_40 = %v5 /\ %fa6_40 = %v6 /\ %fa7_40 = %v7 /\
    %fa8_40 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 25 *)
    %fa0_40 = %v0 /\ %fa1_40 = %v1 /\ %fa2_40 = %v2 /\ %fa3_40 = %v3 /\ %fa4_40 = %v4 /\ %fa5_40 = %v5 /\ %fa6_40 = %v6 /\ %fa7_40 = %v7 /\
    %fa8_40 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_40 = [arr4000, arr4001, arr4002, arr4003, arr4004, arr4005, arr4006, arr4007] /\
    %fa1_40 = [arr4010, arr4011, arr4012, arr4013, arr4014, arr4015, arr4016, arr4017] /\
    %fa2_40 = [arr4020, arr4021, arr4022, arr4023, arr4024, arr4025, arr4026, arr4027] /\
    %fa3_40 = [arr4030, arr4031, arr4032, arr4033, arr4034, arr4035, arr4036, arr4037] /\
    %fa4_40 = [arr4040, arr4041, arr4042, arr4043, arr4044, arr4045, arr4046, arr4047] /\
    %fa5_40 = [arr4050, arr4051, arr4052, arr4053, arr4054, arr4055, arr4056, arr4057] /\
    %fa6_40 = [arr4060, arr4061, arr4062, arr4063, arr4064, arr4065, arr4066, arr4067] /\
    %fa7_40 = [arr4070, arr4071, arr4072, arr4073, arr4074, arr4075, arr4076, arr4077] /\
    %fa8_40 = [arr4080, arr4081, arr4082, arr4083, arr4084, arr4085, arr4086, arr4087]
  &&
    %fa0_40 = %v0 /\ %fa1_40 = %v1 /\ %fa2_40 = %v2 /\ %fa3_40 = %v3 /\ %fa4_40 = %v4 /\ %fa5_40 = %v5 /\ %fa6_40 = %v6 /\ %fa7_40 = %v7 /\
    %fa8_40 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_40 = [arr4000, arr4001, arr4002, arr4003, arr4004, arr4005, arr4006, arr4007] /\
    %fa1_40 = [arr4010, arr4011, arr4012, arr4013, arr4014, arr4015, arr4016, arr4017] /\
    %fa2_40 = [arr4020, arr4021, arr4022, arr4023, arr4024, arr4025, arr4026, arr4027] /\
    %fa3_40 = [arr4030, arr4031, arr4032, arr4033, arr4034, arr4035, arr4036, arr4037] /\
    %fa4_40 = [arr4040, arr4041, arr4042, arr4043, arr4044, arr4045, arr4046, arr4047] /\
    %fa5_40 = [arr4050, arr4051, arr4052, arr4053, arr4054, arr4055, arr4056, arr4057] /\
    %fa6_40 = [arr4060, arr4061, arr4062, arr4063, arr4064, arr4065, arr4066, arr4067] /\
    %fa7_40 = [arr4070, arr4071, arr4072, arr4073, arr4074, arr4075, arr4076, arr4077] /\
    %fa8_40 = [arr4080, arr4081, arr4082, arr4083, arr4084, arr4085, arr4086, arr4087];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 26 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_40 +
        %fa3_40 +
        %fa6_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_40 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_40 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_40 +
        %fa7_40 +
        %fa4_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_40 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_40 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_40 +
        %fa2_40 +
        %fa5_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_40 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_40 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 25], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 27 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_40 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_40 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_40 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_40 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_40 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_40 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_40 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_40 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_40 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_40 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_40 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_40 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_40 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_40 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_40 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_40 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_40 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_40 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_40 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_40 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_40 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_40 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_40 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_40 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_40 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_40 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_40 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_40 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_40 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_40 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_40 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_40 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_40 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_40 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_40 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_40 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_40 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_40 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_40 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_40 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_40 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_40 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_40 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_40 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_40 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_40 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_40 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_40 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_40 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_40 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_40 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_40 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_40 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_40 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_40 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_40 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_40 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_40 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_40 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_40 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_40 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_40
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[26]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x5555551344 *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19]                                   #! EA = L0x7fffffdeb0; PC = 0x5555551348 *)
mov [L0x7fffffdeb0,L0x7fffffdeb2,L0x7fffffdeb4,L0x7fffffdeb6,L0x7fffffdeb8,L0x7fffffdeba,L0x7fffffdebc,L0x7fffffdebe] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x555555134c *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #16]                              #! EA = L0x7fffffdec0; PC = 0x5555551350 *)
mov [L0x7fffffdec0,L0x7fffffdec2,L0x7fffffdec4,L0x7fffffdec6,L0x7fffffdec8,L0x7fffffdeca,L0x7fffffdecc,L0x7fffffdece] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x5555551354 *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #32]                              #! EA = L0x7fffffded0; PC = 0x5555551358 *)
mov [L0x7fffffded0,L0x7fffffded2,L0x7fffffded4,L0x7fffffded6,L0x7fffffded8,L0x7fffffdeda,L0x7fffffdedc,L0x7fffffdede] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x555555135c *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #48]                              #! EA = L0x7fffffdee0; PC = 0x5555551360 *)
mov [L0x7fffffdee0,L0x7fffffdee2,L0x7fffffdee4,L0x7fffffdee6,L0x7fffffdee8,L0x7fffffdeea,L0x7fffffdeec,L0x7fffffdeee] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x5555551364 *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #64]                              #! EA = L0x7fffffdef0; PC = 0x5555551368 *)
mov [L0x7fffffdef0,L0x7fffffdef2,L0x7fffffdef4,L0x7fffffdef6,L0x7fffffdef8,L0x7fffffdefa,L0x7fffffdefc,L0x7fffffdefe] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x555555136c *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #80]                              #! EA = L0x7fffffdf00; PC = 0x5555551370 *)
mov [L0x7fffffdf00,L0x7fffffdf02,L0x7fffffdf04,L0x7fffffdf06,L0x7fffffdf08,L0x7fffffdf0a,L0x7fffffdf0c,L0x7fffffdf0e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x5555551374 *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #96]                              #! EA = L0x7fffffdf10; PC = 0x5555551378 *)
mov [L0x7fffffdf10,L0x7fffffdf12,L0x7fffffdf14,L0x7fffffdf16,L0x7fffffdf18,L0x7fffffdf1a,L0x7fffffdf1c,L0x7fffffdf1e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x555555137c *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #112]                             #! EA = L0x7fffffdf20; PC = 0x5555551380 *)
mov [L0x7fffffdf20,L0x7fffffdf22,L0x7fffffdf24,L0x7fffffdf26,L0x7fffffdf28,L0x7fffffdf2a,L0x7fffffdf2c,L0x7fffffdf2e] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x5555551384 *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #128]                             #! EA = L0x7fffffdf30; PC = 0x5555551388 *)
mov [L0x7fffffdf30,L0x7fffffdf32,L0x7fffffdf34,L0x7fffffdf36,L0x7fffffdf38,L0x7fffffdf3a,L0x7fffffdf3c,L0x7fffffdf3e] %v0;


### k0_iter


#### load

(* ldr	q7, [x19, #256]                             #! EA = L0x7fffffdfb0; Value = 0x0000000000000000; PC = 0x555555138c *)
mov %v7 [L0x7fffffdfb0,L0x7fffffdfb2,L0x7fffffdfb4,L0x7fffffdfb6,L0x7fffffdfb8,L0x7fffffdfba,L0x7fffffdfbc,L0x7fffffdfbe];
(* ldr	q6, [x19, #240]                             #! EA = L0x7fffffdfa0; Value = 0x0000000000000000; PC = 0x5555551390 *)
mov %v6 [L0x7fffffdfa0,L0x7fffffdfa2,L0x7fffffdfa4,L0x7fffffdfa6,L0x7fffffdfa8,L0x7fffffdfaa,L0x7fffffdfac,L0x7fffffdfae];
(* ldr	q5, [x19, #224]                             #! EA = L0x7fffffdf90; Value = 0x0000000000000000; PC = 0x5555551394 *)
mov %v5 [L0x7fffffdf90,L0x7fffffdf92,L0x7fffffdf94,L0x7fffffdf96,L0x7fffffdf98,L0x7fffffdf9a,L0x7fffffdf9c,L0x7fffffdf9e];
(* ldr	q4, [x19, #208]                             #! EA = L0x7fffffdf80; Value = 0x0000000000000000; PC = 0x5555551398 *)
mov %v4 [L0x7fffffdf80,L0x7fffffdf82,L0x7fffffdf84,L0x7fffffdf86,L0x7fffffdf88,L0x7fffffdf8a,L0x7fffffdf8c,L0x7fffffdf8e];
(* ldr	q3, [x19, #192]                             #! EA = L0x7fffffdf70; Value = 0x0000000000000000; PC = 0x555555139c *)
mov %v3 [L0x7fffffdf70,L0x7fffffdf72,L0x7fffffdf74,L0x7fffffdf76,L0x7fffffdf78,L0x7fffffdf7a,L0x7fffffdf7c,L0x7fffffdf7e];
(* ldr	q2, [x19, #176]                             #! EA = L0x7fffffdf60; Value = 0x0000000000000000; PC = 0x55555513a0 *)
mov %v2 [L0x7fffffdf60,L0x7fffffdf62,L0x7fffffdf64,L0x7fffffdf66,L0x7fffffdf68,L0x7fffffdf6a,L0x7fffffdf6c,L0x7fffffdf6e];
(* ldr	q1, [x19, #160]                             #! EA = L0x7fffffdf50; Value = 0x0000000000000000; PC = 0x55555513a4 *)
mov %v1 [L0x7fffffdf50,L0x7fffffdf52,L0x7fffffdf54,L0x7fffffdf56,L0x7fffffdf58,L0x7fffffdf5a,L0x7fffffdf5c,L0x7fffffdf5e];
(* ldr	q0, [x19, #144]                             #! EA = L0x7fffffdf40; Value = 0x0000000000000000; PC = 0x55555513a8 *)
mov %v0 [L0x7fffffdf40,L0x7fffffdf42,L0x7fffffdf44,L0x7fffffdf46,L0x7fffffdf48,L0x7fffffdf4a,L0x7fffffdf4c,L0x7fffffdf4e];
(* ldr	q16, [x19, #272]                            #! EA = L0x7fffffdfc0; Value = 0x0000000000000000; PC = 0x55555513b0 *)
mov %v16 [L0x7fffffdfc0,L0x7fffffdfc2,L0x7fffffdfc4,L0x7fffffdfc6,L0x7fffffdfc8,L0x7fffffdfca,L0x7fffffdfcc,L0x7fffffdfce];
(* str	q16, [sp]                                   #! EA = L0x7fffffc260; PC = 0x55555513b4 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v16;
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x55555513d8 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x55555513d8 = 0x55555513d8;

ghost %fa0_41@sint16[8], %fa1_41@sint16[8], %fa2_41@sint16[8], %fa3_41@sint16[8], %fa4_41@sint16[8], %fa5_41@sint16[8], %fa6_41@sint16[8], %fa7_41@sint16[8], %fa8_41@sint16[8] :
    %fa0_41 = %v0 /\ %fa1_41 = %v1 /\ %fa2_41 = %v2 /\ %fa3_41 = %v3 /\ %fa4_41 = %v4 /\ %fa5_41 = %v5 /\ %fa6_41 = %v6 /\ %fa7_41 = %v7 /\
    %fa8_41 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_41 = %v0 /\ %fa1_41 = %v1 /\ %fa2_41 = %v2 /\ %fa3_41 = %v3 /\ %fa4_41 = %v4 /\ %fa5_41 = %v5 /\ %fa6_41 = %v6 /\ %fa7_41 = %v7 /\
    %fa8_41 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 28 *)
    %fa0_41 = %v0 /\ %fa1_41 = %v1 /\ %fa2_41 = %v2 /\ %fa3_41 = %v3 /\ %fa4_41 = %v4 /\ %fa5_41 = %v5 /\ %fa6_41 = %v6 /\ %fa7_41 = %v7 /\
    %fa8_41 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_41 = [arr4100, arr4101, arr4102, arr4103, arr4104, arr4105, arr4106, arr4107] /\
    %fa1_41 = [arr4110, arr4111, arr4112, arr4113, arr4114, arr4115, arr4116, arr4117] /\
    %fa2_41 = [arr4120, arr4121, arr4122, arr4123, arr4124, arr4125, arr4126, arr4127] /\
    %fa3_41 = [arr4130, arr4131, arr4132, arr4133, arr4134, arr4135, arr4136, arr4137] /\
    %fa4_41 = [arr4140, arr4141, arr4142, arr4143, arr4144, arr4145, arr4146, arr4147] /\
    %fa5_41 = [arr4150, arr4151, arr4152, arr4153, arr4154, arr4155, arr4156, arr4157] /\
    %fa6_41 = [arr4160, arr4161, arr4162, arr4163, arr4164, arr4165, arr4166, arr4167] /\
    %fa7_41 = [arr4170, arr4171, arr4172, arr4173, arr4174, arr4175, arr4176, arr4177] /\
    %fa8_41 = [arr4180, arr4181, arr4182, arr4183, arr4184, arr4185, arr4186, arr4187]
  &&
    %fa0_41 = %v0 /\ %fa1_41 = %v1 /\ %fa2_41 = %v2 /\ %fa3_41 = %v3 /\ %fa4_41 = %v4 /\ %fa5_41 = %v5 /\ %fa6_41 = %v6 /\ %fa7_41 = %v7 /\
    %fa8_41 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_41 = [arr4100, arr4101, arr4102, arr4103, arr4104, arr4105, arr4106, arr4107] /\
    %fa1_41 = [arr4110, arr4111, arr4112, arr4113, arr4114, arr4115, arr4116, arr4117] /\
    %fa2_41 = [arr4120, arr4121, arr4122, arr4123, arr4124, arr4125, arr4126, arr4127] /\
    %fa3_41 = [arr4130, arr4131, arr4132, arr4133, arr4134, arr4135, arr4136, arr4137] /\
    %fa4_41 = [arr4140, arr4141, arr4142, arr4143, arr4144, arr4145, arr4146, arr4147] /\
    %fa5_41 = [arr4150, arr4151, arr4152, arr4153, arr4154, arr4155, arr4156, arr4157] /\
    %fa6_41 = [arr4160, arr4161, arr4162, arr4163, arr4164, arr4165, arr4166, arr4167] /\
    %fa7_41 = [arr4170, arr4171, arr4172, arr4173, arr4174, arr4175, arr4176, arr4177] /\
    %fa8_41 = [arr4180, arr4181, arr4182, arr4183, arr4184, arr4185, arr4186, arr4187];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 29 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_41 +
        %fa3_41 +
        %fa6_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_41 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_41 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_41 +
        %fa7_41 +
        %fa4_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_41 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_41 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_41 +
        %fa2_41 +
        %fa5_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_41 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_41 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 28], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 30 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_41 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_41 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_41 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_41 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_41 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_41 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_41 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_41 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_41 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_41 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_41 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_41 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_41 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_41 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_41 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_41 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_41 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_41 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_41 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_41 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_41 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_41 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_41 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_41 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_41 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_41 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_41 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_41 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_41 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_41 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_41 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_41 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_41 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_41 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_41 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_41 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_41 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_41 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_41 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_41 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_41 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_41 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_41 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_41 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_41 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_41 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_41 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_41 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_41 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_41 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_41 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_41 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_41 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_41 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_41 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_41 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_41 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_41 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_41 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_41 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_41 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_41
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[29]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x55555513dc *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19, #144]                             #! EA = L0x7fffffdf40; PC = 0x55555513e0 *)
mov [L0x7fffffdf40,L0x7fffffdf42,L0x7fffffdf44,L0x7fffffdf46,L0x7fffffdf48,L0x7fffffdf4a,L0x7fffffdf4c,L0x7fffffdf4e] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x55555513e4 *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #160]                             #! EA = L0x7fffffdf50; PC = 0x55555513e8 *)
mov [L0x7fffffdf50,L0x7fffffdf52,L0x7fffffdf54,L0x7fffffdf56,L0x7fffffdf58,L0x7fffffdf5a,L0x7fffffdf5c,L0x7fffffdf5e] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x55555513ec *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #176]                             #! EA = L0x7fffffdf60; PC = 0x55555513f0 *)
mov [L0x7fffffdf60,L0x7fffffdf62,L0x7fffffdf64,L0x7fffffdf66,L0x7fffffdf68,L0x7fffffdf6a,L0x7fffffdf6c,L0x7fffffdf6e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x55555513f4 *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #192]                             #! EA = L0x7fffffdf70; PC = 0x55555513f8 *)
mov [L0x7fffffdf70,L0x7fffffdf72,L0x7fffffdf74,L0x7fffffdf76,L0x7fffffdf78,L0x7fffffdf7a,L0x7fffffdf7c,L0x7fffffdf7e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x55555513fc *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #208]                             #! EA = L0x7fffffdf80; PC = 0x5555551400 *)
mov [L0x7fffffdf80,L0x7fffffdf82,L0x7fffffdf84,L0x7fffffdf86,L0x7fffffdf88,L0x7fffffdf8a,L0x7fffffdf8c,L0x7fffffdf8e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x5555551404 *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #224]                             #! EA = L0x7fffffdf90; PC = 0x5555551408 *)
mov [L0x7fffffdf90,L0x7fffffdf92,L0x7fffffdf94,L0x7fffffdf96,L0x7fffffdf98,L0x7fffffdf9a,L0x7fffffdf9c,L0x7fffffdf9e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x555555140c *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #240]                             #! EA = L0x7fffffdfa0; PC = 0x5555551410 *)
mov [L0x7fffffdfa0,L0x7fffffdfa2,L0x7fffffdfa4,L0x7fffffdfa6,L0x7fffffdfa8,L0x7fffffdfaa,L0x7fffffdfac,L0x7fffffdfae] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x5555551414 *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #256]                             #! EA = L0x7fffffdfb0; PC = 0x5555551418 *)
mov [L0x7fffffdfb0,L0x7fffffdfb2,L0x7fffffdfb4,L0x7fffffdfb6,L0x7fffffdfb8,L0x7fffffdfba,L0x7fffffdfbc,L0x7fffffdfbe] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x555555141c *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #272]                             #! EA = L0x7fffffdfc0; PC = 0x5555551420 *)
mov [L0x7fffffdfc0,L0x7fffffdfc2,L0x7fffffdfc4,L0x7fffffdfc6,L0x7fffffdfc8,L0x7fffffdfca,L0x7fffffdfcc,L0x7fffffdfce] %v0;


### epilogue

(* #b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! PC = 0x5555551430 *)
#b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! 0x5555551430 = 0x5555551430;


## i_iter


### k0_iter


#### load

(* ldr	q7, [x19, #112]                             #! EA = L0x7fffffe040; Value = 0x0000000000000000; PC = 0x55555512f0 *)
mov %v7 [L0x7fffffe040,L0x7fffffe042,L0x7fffffe044,L0x7fffffe046,L0x7fffffe048,L0x7fffffe04a,L0x7fffffe04c,L0x7fffffe04e];
(* ldr	q6, [x19, #96]                              #! EA = L0x7fffffe030; Value = 0x0000000000000000; PC = 0x55555512f4 *)
mov %v6 [L0x7fffffe030,L0x7fffffe032,L0x7fffffe034,L0x7fffffe036,L0x7fffffe038,L0x7fffffe03a,L0x7fffffe03c,L0x7fffffe03e];
(* ldr	q5, [x19, #80]                              #! EA = L0x7fffffe020; Value = 0x0000000000000000; PC = 0x55555512f8 *)
mov %v5 [L0x7fffffe020,L0x7fffffe022,L0x7fffffe024,L0x7fffffe026,L0x7fffffe028,L0x7fffffe02a,L0x7fffffe02c,L0x7fffffe02e];
(* ldr	q4, [x19, #64]                              #! EA = L0x7fffffe010; Value = 0x0000000000000000; PC = 0x55555512fc *)
mov %v4 [L0x7fffffe010,L0x7fffffe012,L0x7fffffe014,L0x7fffffe016,L0x7fffffe018,L0x7fffffe01a,L0x7fffffe01c,L0x7fffffe01e];
(* ldr	q3, [x19, #48]                              #! EA = L0x7fffffe000; Value = 0x0000000000000000; PC = 0x5555551300 *)
mov %v3 [L0x7fffffe000,L0x7fffffe002,L0x7fffffe004,L0x7fffffe006,L0x7fffffe008,L0x7fffffe00a,L0x7fffffe00c,L0x7fffffe00e];
(* ldr	q2, [x19, #32]                              #! EA = L0x7fffffdff0; Value = 0x0000000000000000; PC = 0x5555551304 *)
mov %v2 [L0x7fffffdff0,L0x7fffffdff2,L0x7fffffdff4,L0x7fffffdff6,L0x7fffffdff8,L0x7fffffdffa,L0x7fffffdffc,L0x7fffffdffe];
(* ldr	q1, [x19, #16]                              #! EA = L0x7fffffdfe0; Value = 0x0000000000000000; PC = 0x5555551308 *)
mov %v1 [L0x7fffffdfe0,L0x7fffffdfe2,L0x7fffffdfe4,L0x7fffffdfe6,L0x7fffffdfe8,L0x7fffffdfea,L0x7fffffdfec,L0x7fffffdfee];
(* ldr	q0, [x19, #128]                             #! EA = L0x7fffffe050; Value = 0x0000000000000000; PC = 0x5555551314 *)
mov %v0 [L0x7fffffe050,L0x7fffffe052,L0x7fffffe054,L0x7fffffe056,L0x7fffffe058,L0x7fffffe05a,L0x7fffffe05c,L0x7fffffe05e];
(* str	q0, [sp]                                    #! EA = L0x7fffffc260; PC = 0x5555551318 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v0;
(* ldr	q0, [x19]                                   #! EA = L0x7fffffdfd0; Value = 0x0000000000000000; PC = 0x555555133c *)
mov %v0 [L0x7fffffdfd0,L0x7fffffdfd2,L0x7fffffdfd4,L0x7fffffdfd6,L0x7fffffdfd8,L0x7fffffdfda,L0x7fffffdfdc,L0x7fffffdfde];
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x5555551340 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x5555551340 = 0x5555551340;

ghost %fa0_50@sint16[8], %fa1_50@sint16[8], %fa2_50@sint16[8], %fa3_50@sint16[8], %fa4_50@sint16[8], %fa5_50@sint16[8], %fa6_50@sint16[8], %fa7_50@sint16[8], %fa8_50@sint16[8] :
    %fa0_50 = %v0 /\ %fa1_50 = %v1 /\ %fa2_50 = %v2 /\ %fa3_50 = %v3 /\ %fa4_50 = %v4 /\ %fa5_50 = %v5 /\ %fa6_50 = %v6 /\ %fa7_50 = %v7 /\
    %fa8_50 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_50 = %v0 /\ %fa1_50 = %v1 /\ %fa2_50 = %v2 /\ %fa3_50 = %v3 /\ %fa4_50 = %v4 /\ %fa5_50 = %v5 /\ %fa6_50 = %v6 /\ %fa7_50 = %v7 /\
    %fa8_50 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 31 *)
    %fa0_50 = %v0 /\ %fa1_50 = %v1 /\ %fa2_50 = %v2 /\ %fa3_50 = %v3 /\ %fa4_50 = %v4 /\ %fa5_50 = %v5 /\ %fa6_50 = %v6 /\ %fa7_50 = %v7 /\
    %fa8_50 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_50 = [arr5000, arr5001, arr5002, arr5003, arr5004, arr5005, arr5006, arr5007] /\
    %fa1_50 = [arr5010, arr5011, arr5012, arr5013, arr5014, arr5015, arr5016, arr5017] /\
    %fa2_50 = [arr5020, arr5021, arr5022, arr5023, arr5024, arr5025, arr5026, arr5027] /\
    %fa3_50 = [arr5030, arr5031, arr5032, arr5033, arr5034, arr5035, arr5036, arr5037] /\
    %fa4_50 = [arr5040, arr5041, arr5042, arr5043, arr5044, arr5045, arr5046, arr5047] /\
    %fa5_50 = [arr5050, arr5051, arr5052, arr5053, arr5054, arr5055, arr5056, arr5057] /\
    %fa6_50 = [arr5060, arr5061, arr5062, arr5063, arr5064, arr5065, arr5066, arr5067] /\
    %fa7_50 = [arr5070, arr5071, arr5072, arr5073, arr5074, arr5075, arr5076, arr5077] /\
    %fa8_50 = [arr5080, arr5081, arr5082, arr5083, arr5084, arr5085, arr5086, arr5087]
  &&
    %fa0_50 = %v0 /\ %fa1_50 = %v1 /\ %fa2_50 = %v2 /\ %fa3_50 = %v3 /\ %fa4_50 = %v4 /\ %fa5_50 = %v5 /\ %fa6_50 = %v6 /\ %fa7_50 = %v7 /\
    %fa8_50 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_50 = [arr5000, arr5001, arr5002, arr5003, arr5004, arr5005, arr5006, arr5007] /\
    %fa1_50 = [arr5010, arr5011, arr5012, arr5013, arr5014, arr5015, arr5016, arr5017] /\
    %fa2_50 = [arr5020, arr5021, arr5022, arr5023, arr5024, arr5025, arr5026, arr5027] /\
    %fa3_50 = [arr5030, arr5031, arr5032, arr5033, arr5034, arr5035, arr5036, arr5037] /\
    %fa4_50 = [arr5040, arr5041, arr5042, arr5043, arr5044, arr5045, arr5046, arr5047] /\
    %fa5_50 = [arr5050, arr5051, arr5052, arr5053, arr5054, arr5055, arr5056, arr5057] /\
    %fa6_50 = [arr5060, arr5061, arr5062, arr5063, arr5064, arr5065, arr5066, arr5067] /\
    %fa7_50 = [arr5070, arr5071, arr5072, arr5073, arr5074, arr5075, arr5076, arr5077] /\
    %fa8_50 = [arr5080, arr5081, arr5082, arr5083, arr5084, arr5085, arr5086, arr5087];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 32 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_50 +
        %fa3_50 +
        %fa6_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_50 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_50 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_50 +
        %fa7_50 +
        %fa4_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_50 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_50 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_50 +
        %fa2_50 +
        %fa5_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_50 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_50 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 31], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 33 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_50 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_50 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_50 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_50 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_50 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_50 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_50 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_50 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_50 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_50 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_50 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_50 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_50 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_50 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_50 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_50 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_50 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_50 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_50 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_50 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_50 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_50 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_50 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_50 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_50 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_50 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_50 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_50 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_50 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_50 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_50 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_50 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_50 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_50 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_50 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_50 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_50 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_50 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_50 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_50 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_50 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_50 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_50 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_50 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_50 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_50 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_50 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_50 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_50 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_50 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_50 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_50 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_50 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_50 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_50 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_50 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_50 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_50 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_50 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_50 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_50 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_50
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[32]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x5555551344 *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19]                                   #! EA = L0x7fffffdfd0; PC = 0x5555551348 *)
mov [L0x7fffffdfd0,L0x7fffffdfd2,L0x7fffffdfd4,L0x7fffffdfd6,L0x7fffffdfd8,L0x7fffffdfda,L0x7fffffdfdc,L0x7fffffdfde] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x555555134c *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #16]                              #! EA = L0x7fffffdfe0; PC = 0x5555551350 *)
mov [L0x7fffffdfe0,L0x7fffffdfe2,L0x7fffffdfe4,L0x7fffffdfe6,L0x7fffffdfe8,L0x7fffffdfea,L0x7fffffdfec,L0x7fffffdfee] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x5555551354 *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #32]                              #! EA = L0x7fffffdff0; PC = 0x5555551358 *)
mov [L0x7fffffdff0,L0x7fffffdff2,L0x7fffffdff4,L0x7fffffdff6,L0x7fffffdff8,L0x7fffffdffa,L0x7fffffdffc,L0x7fffffdffe] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x555555135c *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #48]                              #! EA = L0x7fffffe000; PC = 0x5555551360 *)
mov [L0x7fffffe000,L0x7fffffe002,L0x7fffffe004,L0x7fffffe006,L0x7fffffe008,L0x7fffffe00a,L0x7fffffe00c,L0x7fffffe00e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x5555551364 *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #64]                              #! EA = L0x7fffffe010; PC = 0x5555551368 *)
mov [L0x7fffffe010,L0x7fffffe012,L0x7fffffe014,L0x7fffffe016,L0x7fffffe018,L0x7fffffe01a,L0x7fffffe01c,L0x7fffffe01e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x555555136c *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #80]                              #! EA = L0x7fffffe020; PC = 0x5555551370 *)
mov [L0x7fffffe020,L0x7fffffe022,L0x7fffffe024,L0x7fffffe026,L0x7fffffe028,L0x7fffffe02a,L0x7fffffe02c,L0x7fffffe02e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x5555551374 *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #96]                              #! EA = L0x7fffffe030; PC = 0x5555551378 *)
mov [L0x7fffffe030,L0x7fffffe032,L0x7fffffe034,L0x7fffffe036,L0x7fffffe038,L0x7fffffe03a,L0x7fffffe03c,L0x7fffffe03e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x555555137c *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #112]                             #! EA = L0x7fffffe040; PC = 0x5555551380 *)
mov [L0x7fffffe040,L0x7fffffe042,L0x7fffffe044,L0x7fffffe046,L0x7fffffe048,L0x7fffffe04a,L0x7fffffe04c,L0x7fffffe04e] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x5555551384 *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #128]                             #! EA = L0x7fffffe050; PC = 0x5555551388 *)
mov [L0x7fffffe050,L0x7fffffe052,L0x7fffffe054,L0x7fffffe056,L0x7fffffe058,L0x7fffffe05a,L0x7fffffe05c,L0x7fffffe05e] %v0;


### k0_iter


#### load

(* ldr	q7, [x19, #256]                             #! EA = L0x7fffffe0d0; Value = 0x0000000000000000; PC = 0x555555138c *)
mov %v7 [L0x7fffffe0d0,L0x7fffffe0d2,L0x7fffffe0d4,L0x7fffffe0d6,L0x7fffffe0d8,L0x7fffffe0da,L0x7fffffe0dc,L0x7fffffe0de];
(* ldr	q6, [x19, #240]                             #! EA = L0x7fffffe0c0; Value = 0x0000000000000000; PC = 0x5555551390 *)
mov %v6 [L0x7fffffe0c0,L0x7fffffe0c2,L0x7fffffe0c4,L0x7fffffe0c6,L0x7fffffe0c8,L0x7fffffe0ca,L0x7fffffe0cc,L0x7fffffe0ce];
(* ldr	q5, [x19, #224]                             #! EA = L0x7fffffe0b0; Value = 0x0000000000000000; PC = 0x5555551394 *)
mov %v5 [L0x7fffffe0b0,L0x7fffffe0b2,L0x7fffffe0b4,L0x7fffffe0b6,L0x7fffffe0b8,L0x7fffffe0ba,L0x7fffffe0bc,L0x7fffffe0be];
(* ldr	q4, [x19, #208]                             #! EA = L0x7fffffe0a0; Value = 0x0000000000000000; PC = 0x5555551398 *)
mov %v4 [L0x7fffffe0a0,L0x7fffffe0a2,L0x7fffffe0a4,L0x7fffffe0a6,L0x7fffffe0a8,L0x7fffffe0aa,L0x7fffffe0ac,L0x7fffffe0ae];
(* ldr	q3, [x19, #192]                             #! EA = L0x7fffffe090; Value = 0x0000000000000000; PC = 0x555555139c *)
mov %v3 [L0x7fffffe090,L0x7fffffe092,L0x7fffffe094,L0x7fffffe096,L0x7fffffe098,L0x7fffffe09a,L0x7fffffe09c,L0x7fffffe09e];
(* ldr	q2, [x19, #176]                             #! EA = L0x7fffffe080; Value = 0x0000000000000000; PC = 0x55555513a0 *)
mov %v2 [L0x7fffffe080,L0x7fffffe082,L0x7fffffe084,L0x7fffffe086,L0x7fffffe088,L0x7fffffe08a,L0x7fffffe08c,L0x7fffffe08e];
(* ldr	q1, [x19, #160]                             #! EA = L0x7fffffe070; Value = 0x0000000000000000; PC = 0x55555513a4 *)
mov %v1 [L0x7fffffe070,L0x7fffffe072,L0x7fffffe074,L0x7fffffe076,L0x7fffffe078,L0x7fffffe07a,L0x7fffffe07c,L0x7fffffe07e];
(* ldr	q0, [x19, #144]                             #! EA = L0x7fffffe060; Value = 0x0000000000000000; PC = 0x55555513a8 *)
mov %v0 [L0x7fffffe060,L0x7fffffe062,L0x7fffffe064,L0x7fffffe066,L0x7fffffe068,L0x7fffffe06a,L0x7fffffe06c,L0x7fffffe06e];
(* ldr	q16, [x19, #272]                            #! EA = L0x7fffffe0e0; Value = 0x0000000000000000; PC = 0x55555513b0 *)
mov %v16 [L0x7fffffe0e0,L0x7fffffe0e2,L0x7fffffe0e4,L0x7fffffe0e6,L0x7fffffe0e8,L0x7fffffe0ea,L0x7fffffe0ec,L0x7fffffe0ee];
(* str	q16, [sp]                                   #! EA = L0x7fffffc260; PC = 0x55555513b4 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v16;
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x55555513d8 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x55555513d8 = 0x55555513d8;

ghost %fa0_51@sint16[8], %fa1_51@sint16[8], %fa2_51@sint16[8], %fa3_51@sint16[8], %fa4_51@sint16[8], %fa5_51@sint16[8], %fa6_51@sint16[8], %fa7_51@sint16[8], %fa8_51@sint16[8] :
    %fa0_51 = %v0 /\ %fa1_51 = %v1 /\ %fa2_51 = %v2 /\ %fa3_51 = %v3 /\ %fa4_51 = %v4 /\ %fa5_51 = %v5 /\ %fa6_51 = %v6 /\ %fa7_51 = %v7 /\
    %fa8_51 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_51 = %v0 /\ %fa1_51 = %v1 /\ %fa2_51 = %v2 /\ %fa3_51 = %v3 /\ %fa4_51 = %v4 /\ %fa5_51 = %v5 /\ %fa6_51 = %v6 /\ %fa7_51 = %v7 /\
    %fa8_51 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 34 *)
    %fa0_51 = %v0 /\ %fa1_51 = %v1 /\ %fa2_51 = %v2 /\ %fa3_51 = %v3 /\ %fa4_51 = %v4 /\ %fa5_51 = %v5 /\ %fa6_51 = %v6 /\ %fa7_51 = %v7 /\
    %fa8_51 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_51 = [arr5100, arr5101, arr5102, arr5103, arr5104, arr5105, arr5106, arr5107] /\
    %fa1_51 = [arr5110, arr5111, arr5112, arr5113, arr5114, arr5115, arr5116, arr5117] /\
    %fa2_51 = [arr5120, arr5121, arr5122, arr5123, arr5124, arr5125, arr5126, arr5127] /\
    %fa3_51 = [arr5130, arr5131, arr5132, arr5133, arr5134, arr5135, arr5136, arr5137] /\
    %fa4_51 = [arr5140, arr5141, arr5142, arr5143, arr5144, arr5145, arr5146, arr5147] /\
    %fa5_51 = [arr5150, arr5151, arr5152, arr5153, arr5154, arr5155, arr5156, arr5157] /\
    %fa6_51 = [arr5160, arr5161, arr5162, arr5163, arr5164, arr5165, arr5166, arr5167] /\
    %fa7_51 = [arr5170, arr5171, arr5172, arr5173, arr5174, arr5175, arr5176, arr5177] /\
    %fa8_51 = [arr5180, arr5181, arr5182, arr5183, arr5184, arr5185, arr5186, arr5187]
  &&
    %fa0_51 = %v0 /\ %fa1_51 = %v1 /\ %fa2_51 = %v2 /\ %fa3_51 = %v3 /\ %fa4_51 = %v4 /\ %fa5_51 = %v5 /\ %fa6_51 = %v6 /\ %fa7_51 = %v7 /\
    %fa8_51 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_51 = [arr5100, arr5101, arr5102, arr5103, arr5104, arr5105, arr5106, arr5107] /\
    %fa1_51 = [arr5110, arr5111, arr5112, arr5113, arr5114, arr5115, arr5116, arr5117] /\
    %fa2_51 = [arr5120, arr5121, arr5122, arr5123, arr5124, arr5125, arr5126, arr5127] /\
    %fa3_51 = [arr5130, arr5131, arr5132, arr5133, arr5134, arr5135, arr5136, arr5137] /\
    %fa4_51 = [arr5140, arr5141, arr5142, arr5143, arr5144, arr5145, arr5146, arr5147] /\
    %fa5_51 = [arr5150, arr5151, arr5152, arr5153, arr5154, arr5155, arr5156, arr5157] /\
    %fa6_51 = [arr5160, arr5161, arr5162, arr5163, arr5164, arr5165, arr5166, arr5167] /\
    %fa7_51 = [arr5170, arr5171, arr5172, arr5173, arr5174, arr5175, arr5176, arr5177] /\
    %fa8_51 = [arr5180, arr5181, arr5182, arr5183, arr5184, arr5185, arr5186, arr5187];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 35 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_51 +
        %fa3_51 +
        %fa6_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_51 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_51 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_51 +
        %fa7_51 +
        %fa4_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_51 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_51 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_51 +
        %fa2_51 +
        %fa5_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_51 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_51 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 34], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 36 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_51 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_51 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_51 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_51 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_51 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_51 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_51 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_51 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_51 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_51 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_51 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_51 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_51 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_51 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_51 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_51 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_51 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_51 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_51 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_51 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_51 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_51 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_51 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_51 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_51 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_51 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_51 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_51 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_51 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_51 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_51 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_51 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_51 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_51 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_51 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_51 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_51 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_51 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_51 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_51 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_51 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_51 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_51 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_51 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_51 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_51 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_51 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_51 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_51 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_51 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_51 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_51 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_51 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_51 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_51 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_51 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_51 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_51 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_51 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_51 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_51 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_51
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[35]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x55555513dc *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19, #144]                             #! EA = L0x7fffffe060; PC = 0x55555513e0 *)
mov [L0x7fffffe060,L0x7fffffe062,L0x7fffffe064,L0x7fffffe066,L0x7fffffe068,L0x7fffffe06a,L0x7fffffe06c,L0x7fffffe06e] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x55555513e4 *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #160]                             #! EA = L0x7fffffe070; PC = 0x55555513e8 *)
mov [L0x7fffffe070,L0x7fffffe072,L0x7fffffe074,L0x7fffffe076,L0x7fffffe078,L0x7fffffe07a,L0x7fffffe07c,L0x7fffffe07e] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x55555513ec *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #176]                             #! EA = L0x7fffffe080; PC = 0x55555513f0 *)
mov [L0x7fffffe080,L0x7fffffe082,L0x7fffffe084,L0x7fffffe086,L0x7fffffe088,L0x7fffffe08a,L0x7fffffe08c,L0x7fffffe08e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x55555513f4 *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #192]                             #! EA = L0x7fffffe090; PC = 0x55555513f8 *)
mov [L0x7fffffe090,L0x7fffffe092,L0x7fffffe094,L0x7fffffe096,L0x7fffffe098,L0x7fffffe09a,L0x7fffffe09c,L0x7fffffe09e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x55555513fc *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #208]                             #! EA = L0x7fffffe0a0; PC = 0x5555551400 *)
mov [L0x7fffffe0a0,L0x7fffffe0a2,L0x7fffffe0a4,L0x7fffffe0a6,L0x7fffffe0a8,L0x7fffffe0aa,L0x7fffffe0ac,L0x7fffffe0ae] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x5555551404 *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #224]                             #! EA = L0x7fffffe0b0; PC = 0x5555551408 *)
mov [L0x7fffffe0b0,L0x7fffffe0b2,L0x7fffffe0b4,L0x7fffffe0b6,L0x7fffffe0b8,L0x7fffffe0ba,L0x7fffffe0bc,L0x7fffffe0be] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x555555140c *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #240]                             #! EA = L0x7fffffe0c0; PC = 0x5555551410 *)
mov [L0x7fffffe0c0,L0x7fffffe0c2,L0x7fffffe0c4,L0x7fffffe0c6,L0x7fffffe0c8,L0x7fffffe0ca,L0x7fffffe0cc,L0x7fffffe0ce] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x5555551414 *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #256]                             #! EA = L0x7fffffe0d0; PC = 0x5555551418 *)
mov [L0x7fffffe0d0,L0x7fffffe0d2,L0x7fffffe0d4,L0x7fffffe0d6,L0x7fffffe0d8,L0x7fffffe0da,L0x7fffffe0dc,L0x7fffffe0de] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x555555141c *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #272]                             #! EA = L0x7fffffe0e0; PC = 0x5555551420 *)
mov [L0x7fffffe0e0,L0x7fffffe0e2,L0x7fffffe0e4,L0x7fffffe0e6,L0x7fffffe0e8,L0x7fffffe0ea,L0x7fffffe0ec,L0x7fffffe0ee] %v0;


### epilogue

(* #b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! PC = 0x5555551430 *)
#b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! 0x5555551430 = 0x5555551430;


## i_iter


### k0_iter


#### load

(* ldr	q7, [x19, #112]                             #! EA = L0x7fffffe160; Value = 0x0000000000000000; PC = 0x55555512f0 *)
mov %v7 [L0x7fffffe160,L0x7fffffe162,L0x7fffffe164,L0x7fffffe166,L0x7fffffe168,L0x7fffffe16a,L0x7fffffe16c,L0x7fffffe16e];
(* ldr	q6, [x19, #96]                              #! EA = L0x7fffffe150; Value = 0x0000000000000000; PC = 0x55555512f4 *)
mov %v6 [L0x7fffffe150,L0x7fffffe152,L0x7fffffe154,L0x7fffffe156,L0x7fffffe158,L0x7fffffe15a,L0x7fffffe15c,L0x7fffffe15e];
(* ldr	q5, [x19, #80]                              #! EA = L0x7fffffe140; Value = 0x0000000000000000; PC = 0x55555512f8 *)
mov %v5 [L0x7fffffe140,L0x7fffffe142,L0x7fffffe144,L0x7fffffe146,L0x7fffffe148,L0x7fffffe14a,L0x7fffffe14c,L0x7fffffe14e];
(* ldr	q4, [x19, #64]                              #! EA = L0x7fffffe130; Value = 0x0000000000000000; PC = 0x55555512fc *)
mov %v4 [L0x7fffffe130,L0x7fffffe132,L0x7fffffe134,L0x7fffffe136,L0x7fffffe138,L0x7fffffe13a,L0x7fffffe13c,L0x7fffffe13e];
(* ldr	q3, [x19, #48]                              #! EA = L0x7fffffe120; Value = 0x0000000000000000; PC = 0x5555551300 *)
mov %v3 [L0x7fffffe120,L0x7fffffe122,L0x7fffffe124,L0x7fffffe126,L0x7fffffe128,L0x7fffffe12a,L0x7fffffe12c,L0x7fffffe12e];
(* ldr	q2, [x19, #32]                              #! EA = L0x7fffffe110; Value = 0x0000000000000000; PC = 0x5555551304 *)
mov %v2 [L0x7fffffe110,L0x7fffffe112,L0x7fffffe114,L0x7fffffe116,L0x7fffffe118,L0x7fffffe11a,L0x7fffffe11c,L0x7fffffe11e];
(* ldr	q1, [x19, #16]                              #! EA = L0x7fffffe100; Value = 0x0000000000000000; PC = 0x5555551308 *)
mov %v1 [L0x7fffffe100,L0x7fffffe102,L0x7fffffe104,L0x7fffffe106,L0x7fffffe108,L0x7fffffe10a,L0x7fffffe10c,L0x7fffffe10e];
(* ldr	q0, [x19, #128]                             #! EA = L0x7fffffe170; Value = 0x0000000000000000; PC = 0x5555551314 *)
mov %v0 [L0x7fffffe170,L0x7fffffe172,L0x7fffffe174,L0x7fffffe176,L0x7fffffe178,L0x7fffffe17a,L0x7fffffe17c,L0x7fffffe17e];
(* str	q0, [sp]                                    #! EA = L0x7fffffc260; PC = 0x5555551318 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v0;
(* ldr	q0, [x19]                                   #! EA = L0x7fffffe0f0; Value = 0x0000000000000000; PC = 0x555555133c *)
mov %v0 [L0x7fffffe0f0,L0x7fffffe0f2,L0x7fffffe0f4,L0x7fffffe0f6,L0x7fffffe0f8,L0x7fffffe0fa,L0x7fffffe0fc,L0x7fffffe0fe];
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x5555551340 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x5555551340 = 0x5555551340;

ghost %fa0_60@sint16[8], %fa1_60@sint16[8], %fa2_60@sint16[8], %fa3_60@sint16[8], %fa4_60@sint16[8], %fa5_60@sint16[8], %fa6_60@sint16[8], %fa7_60@sint16[8], %fa8_60@sint16[8] :
    %fa0_60 = %v0 /\ %fa1_60 = %v1 /\ %fa2_60 = %v2 /\ %fa3_60 = %v3 /\ %fa4_60 = %v4 /\ %fa5_60 = %v5 /\ %fa6_60 = %v6 /\ %fa7_60 = %v7 /\
    %fa8_60 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_60 = %v0 /\ %fa1_60 = %v1 /\ %fa2_60 = %v2 /\ %fa3_60 = %v3 /\ %fa4_60 = %v4 /\ %fa5_60 = %v5 /\ %fa6_60 = %v6 /\ %fa7_60 = %v7 /\
    %fa8_60 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 37 *)
    %fa0_60 = %v0 /\ %fa1_60 = %v1 /\ %fa2_60 = %v2 /\ %fa3_60 = %v3 /\ %fa4_60 = %v4 /\ %fa5_60 = %v5 /\ %fa6_60 = %v6 /\ %fa7_60 = %v7 /\
    %fa8_60 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_60 = [arr6000, arr6001, arr6002, arr6003, arr6004, arr6005, arr6006, arr6007] /\
    %fa1_60 = [arr6010, arr6011, arr6012, arr6013, arr6014, arr6015, arr6016, arr6017] /\
    %fa2_60 = [arr6020, arr6021, arr6022, arr6023, arr6024, arr6025, arr6026, arr6027] /\
    %fa3_60 = [arr6030, arr6031, arr6032, arr6033, arr6034, arr6035, arr6036, arr6037] /\
    %fa4_60 = [arr6040, arr6041, arr6042, arr6043, arr6044, arr6045, arr6046, arr6047] /\
    %fa5_60 = [arr6050, arr6051, arr6052, arr6053, arr6054, arr6055, arr6056, arr6057] /\
    %fa6_60 = [arr6060, arr6061, arr6062, arr6063, arr6064, arr6065, arr6066, arr6067] /\
    %fa7_60 = [arr6070, arr6071, arr6072, arr6073, arr6074, arr6075, arr6076, arr6077] /\
    %fa8_60 = [arr6080, arr6081, arr6082, arr6083, arr6084, arr6085, arr6086, arr6087]
  &&
    %fa0_60 = %v0 /\ %fa1_60 = %v1 /\ %fa2_60 = %v2 /\ %fa3_60 = %v3 /\ %fa4_60 = %v4 /\ %fa5_60 = %v5 /\ %fa6_60 = %v6 /\ %fa7_60 = %v7 /\
    %fa8_60 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_60 = [arr6000, arr6001, arr6002, arr6003, arr6004, arr6005, arr6006, arr6007] /\
    %fa1_60 = [arr6010, arr6011, arr6012, arr6013, arr6014, arr6015, arr6016, arr6017] /\
    %fa2_60 = [arr6020, arr6021, arr6022, arr6023, arr6024, arr6025, arr6026, arr6027] /\
    %fa3_60 = [arr6030, arr6031, arr6032, arr6033, arr6034, arr6035, arr6036, arr6037] /\
    %fa4_60 = [arr6040, arr6041, arr6042, arr6043, arr6044, arr6045, arr6046, arr6047] /\
    %fa5_60 = [arr6050, arr6051, arr6052, arr6053, arr6054, arr6055, arr6056, arr6057] /\
    %fa6_60 = [arr6060, arr6061, arr6062, arr6063, arr6064, arr6065, arr6066, arr6067] /\
    %fa7_60 = [arr6070, arr6071, arr6072, arr6073, arr6074, arr6075, arr6076, arr6077] /\
    %fa8_60 = [arr6080, arr6081, arr6082, arr6083, arr6084, arr6085, arr6086, arr6087];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 38 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_60 +
        %fa3_60 +
        %fa6_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_60 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_60 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_60 +
        %fa7_60 +
        %fa4_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_60 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_60 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_60 +
        %fa2_60 +
        %fa5_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_60 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_60 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 37], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 39 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_60 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_60 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_60 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_60 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_60 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_60 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_60 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_60 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_60 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_60 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_60 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_60 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_60 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_60 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_60 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_60 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_60 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_60 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_60 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_60 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_60 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_60 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_60 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_60 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_60 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_60 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_60 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_60 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_60 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_60 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_60 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_60 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_60 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_60 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_60 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_60 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_60 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_60 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_60 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_60 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_60 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_60 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_60 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_60 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_60 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_60 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_60 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_60 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_60 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_60 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_60 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_60 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_60 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_60 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_60 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_60 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_60 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_60 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_60 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_60 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_60 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_60
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[38]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x5555551344 *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19]                                   #! EA = L0x7fffffe0f0; PC = 0x5555551348 *)
mov [L0x7fffffe0f0,L0x7fffffe0f2,L0x7fffffe0f4,L0x7fffffe0f6,L0x7fffffe0f8,L0x7fffffe0fa,L0x7fffffe0fc,L0x7fffffe0fe] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x555555134c *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #16]                              #! EA = L0x7fffffe100; PC = 0x5555551350 *)
mov [L0x7fffffe100,L0x7fffffe102,L0x7fffffe104,L0x7fffffe106,L0x7fffffe108,L0x7fffffe10a,L0x7fffffe10c,L0x7fffffe10e] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x5555551354 *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #32]                              #! EA = L0x7fffffe110; PC = 0x5555551358 *)
mov [L0x7fffffe110,L0x7fffffe112,L0x7fffffe114,L0x7fffffe116,L0x7fffffe118,L0x7fffffe11a,L0x7fffffe11c,L0x7fffffe11e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x555555135c *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #48]                              #! EA = L0x7fffffe120; PC = 0x5555551360 *)
mov [L0x7fffffe120,L0x7fffffe122,L0x7fffffe124,L0x7fffffe126,L0x7fffffe128,L0x7fffffe12a,L0x7fffffe12c,L0x7fffffe12e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x5555551364 *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #64]                              #! EA = L0x7fffffe130; PC = 0x5555551368 *)
mov [L0x7fffffe130,L0x7fffffe132,L0x7fffffe134,L0x7fffffe136,L0x7fffffe138,L0x7fffffe13a,L0x7fffffe13c,L0x7fffffe13e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x555555136c *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #80]                              #! EA = L0x7fffffe140; PC = 0x5555551370 *)
mov [L0x7fffffe140,L0x7fffffe142,L0x7fffffe144,L0x7fffffe146,L0x7fffffe148,L0x7fffffe14a,L0x7fffffe14c,L0x7fffffe14e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x5555551374 *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #96]                              #! EA = L0x7fffffe150; PC = 0x5555551378 *)
mov [L0x7fffffe150,L0x7fffffe152,L0x7fffffe154,L0x7fffffe156,L0x7fffffe158,L0x7fffffe15a,L0x7fffffe15c,L0x7fffffe15e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x555555137c *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #112]                             #! EA = L0x7fffffe160; PC = 0x5555551380 *)
mov [L0x7fffffe160,L0x7fffffe162,L0x7fffffe164,L0x7fffffe166,L0x7fffffe168,L0x7fffffe16a,L0x7fffffe16c,L0x7fffffe16e] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x5555551384 *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #128]                             #! EA = L0x7fffffe170; PC = 0x5555551388 *)
mov [L0x7fffffe170,L0x7fffffe172,L0x7fffffe174,L0x7fffffe176,L0x7fffffe178,L0x7fffffe17a,L0x7fffffe17c,L0x7fffffe17e] %v0;


### k0_iter


#### load

(* ldr	q7, [x19, #256]                             #! EA = L0x7fffffe1f0; Value = 0x0000000000000000; PC = 0x555555138c *)
mov %v7 [L0x7fffffe1f0,L0x7fffffe1f2,L0x7fffffe1f4,L0x7fffffe1f6,L0x7fffffe1f8,L0x7fffffe1fa,L0x7fffffe1fc,L0x7fffffe1fe];
(* ldr	q6, [x19, #240]                             #! EA = L0x7fffffe1e0; Value = 0x0000000000000000; PC = 0x5555551390 *)
mov %v6 [L0x7fffffe1e0,L0x7fffffe1e2,L0x7fffffe1e4,L0x7fffffe1e6,L0x7fffffe1e8,L0x7fffffe1ea,L0x7fffffe1ec,L0x7fffffe1ee];
(* ldr	q5, [x19, #224]                             #! EA = L0x7fffffe1d0; Value = 0x0000000000000000; PC = 0x5555551394 *)
mov %v5 [L0x7fffffe1d0,L0x7fffffe1d2,L0x7fffffe1d4,L0x7fffffe1d6,L0x7fffffe1d8,L0x7fffffe1da,L0x7fffffe1dc,L0x7fffffe1de];
(* ldr	q4, [x19, #208]                             #! EA = L0x7fffffe1c0; Value = 0x0000000000000000; PC = 0x5555551398 *)
mov %v4 [L0x7fffffe1c0,L0x7fffffe1c2,L0x7fffffe1c4,L0x7fffffe1c6,L0x7fffffe1c8,L0x7fffffe1ca,L0x7fffffe1cc,L0x7fffffe1ce];
(* ldr	q3, [x19, #192]                             #! EA = L0x7fffffe1b0; Value = 0x0000000000000000; PC = 0x555555139c *)
mov %v3 [L0x7fffffe1b0,L0x7fffffe1b2,L0x7fffffe1b4,L0x7fffffe1b6,L0x7fffffe1b8,L0x7fffffe1ba,L0x7fffffe1bc,L0x7fffffe1be];
(* ldr	q2, [x19, #176]                             #! EA = L0x7fffffe1a0; Value = 0x0000000000000000; PC = 0x55555513a0 *)
mov %v2 [L0x7fffffe1a0,L0x7fffffe1a2,L0x7fffffe1a4,L0x7fffffe1a6,L0x7fffffe1a8,L0x7fffffe1aa,L0x7fffffe1ac,L0x7fffffe1ae];
(* ldr	q1, [x19, #160]                             #! EA = L0x7fffffe190; Value = 0x0000000000000000; PC = 0x55555513a4 *)
mov %v1 [L0x7fffffe190,L0x7fffffe192,L0x7fffffe194,L0x7fffffe196,L0x7fffffe198,L0x7fffffe19a,L0x7fffffe19c,L0x7fffffe19e];
(* ldr	q0, [x19, #144]                             #! EA = L0x7fffffe180; Value = 0x0000000000000000; PC = 0x55555513a8 *)
mov %v0 [L0x7fffffe180,L0x7fffffe182,L0x7fffffe184,L0x7fffffe186,L0x7fffffe188,L0x7fffffe18a,L0x7fffffe18c,L0x7fffffe18e];
(* ldr	q16, [x19, #272]                            #! EA = L0x7fffffe200; Value = 0x0000000000000000; PC = 0x55555513b0 *)
mov %v16 [L0x7fffffe200,L0x7fffffe202,L0x7fffffe204,L0x7fffffe206,L0x7fffffe208,L0x7fffffe20a,L0x7fffffe20c,L0x7fffffe20e];
(* str	q16, [sp]                                   #! EA = L0x7fffffc260; PC = 0x55555513b4 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v16;
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x55555513d8 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x55555513d8 = 0x55555513d8;

ghost %fa0_61@sint16[8], %fa1_61@sint16[8], %fa2_61@sint16[8], %fa3_61@sint16[8], %fa4_61@sint16[8], %fa5_61@sint16[8], %fa6_61@sint16[8], %fa7_61@sint16[8], %fa8_61@sint16[8] :
    %fa0_61 = %v0 /\ %fa1_61 = %v1 /\ %fa2_61 = %v2 /\ %fa3_61 = %v3 /\ %fa4_61 = %v4 /\ %fa5_61 = %v5 /\ %fa6_61 = %v6 /\ %fa7_61 = %v7 /\
    %fa8_61 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_61 = %v0 /\ %fa1_61 = %v1 /\ %fa2_61 = %v2 /\ %fa3_61 = %v3 /\ %fa4_61 = %v4 /\ %fa5_61 = %v5 /\ %fa6_61 = %v6 /\ %fa7_61 = %v7 /\
    %fa8_61 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 40 *)
    %fa0_61 = %v0 /\ %fa1_61 = %v1 /\ %fa2_61 = %v2 /\ %fa3_61 = %v3 /\ %fa4_61 = %v4 /\ %fa5_61 = %v5 /\ %fa6_61 = %v6 /\ %fa7_61 = %v7 /\
    %fa8_61 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_61 = [arr6100, arr6101, arr6102, arr6103, arr6104, arr6105, arr6106, arr6107] /\
    %fa1_61 = [arr6110, arr6111, arr6112, arr6113, arr6114, arr6115, arr6116, arr6117] /\
    %fa2_61 = [arr6120, arr6121, arr6122, arr6123, arr6124, arr6125, arr6126, arr6127] /\
    %fa3_61 = [arr6130, arr6131, arr6132, arr6133, arr6134, arr6135, arr6136, arr6137] /\
    %fa4_61 = [arr6140, arr6141, arr6142, arr6143, arr6144, arr6145, arr6146, arr6147] /\
    %fa5_61 = [arr6150, arr6151, arr6152, arr6153, arr6154, arr6155, arr6156, arr6157] /\
    %fa6_61 = [arr6160, arr6161, arr6162, arr6163, arr6164, arr6165, arr6166, arr6167] /\
    %fa7_61 = [arr6170, arr6171, arr6172, arr6173, arr6174, arr6175, arr6176, arr6177] /\
    %fa8_61 = [arr6180, arr6181, arr6182, arr6183, arr6184, arr6185, arr6186, arr6187]
  &&
    %fa0_61 = %v0 /\ %fa1_61 = %v1 /\ %fa2_61 = %v2 /\ %fa3_61 = %v3 /\ %fa4_61 = %v4 /\ %fa5_61 = %v5 /\ %fa6_61 = %v6 /\ %fa7_61 = %v7 /\
    %fa8_61 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_61 = [arr6100, arr6101, arr6102, arr6103, arr6104, arr6105, arr6106, arr6107] /\
    %fa1_61 = [arr6110, arr6111, arr6112, arr6113, arr6114, arr6115, arr6116, arr6117] /\
    %fa2_61 = [arr6120, arr6121, arr6122, arr6123, arr6124, arr6125, arr6126, arr6127] /\
    %fa3_61 = [arr6130, arr6131, arr6132, arr6133, arr6134, arr6135, arr6136, arr6137] /\
    %fa4_61 = [arr6140, arr6141, arr6142, arr6143, arr6144, arr6145, arr6146, arr6147] /\
    %fa5_61 = [arr6150, arr6151, arr6152, arr6153, arr6154, arr6155, arr6156, arr6157] /\
    %fa6_61 = [arr6160, arr6161, arr6162, arr6163, arr6164, arr6165, arr6166, arr6167] /\
    %fa7_61 = [arr6170, arr6171, arr6172, arr6173, arr6174, arr6175, arr6176, arr6177] /\
    %fa8_61 = [arr6180, arr6181, arr6182, arr6183, arr6184, arr6185, arr6186, arr6187];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 41 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_61 +
        %fa3_61 +
        %fa6_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_61 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_61 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_61 +
        %fa7_61 +
        %fa4_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_61 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_61 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_61 +
        %fa2_61 +
        %fa5_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_61 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_61 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 40], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 42 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_61 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_61 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_61 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_61 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_61 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_61 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_61 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_61 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_61 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_61 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_61 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_61 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_61 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_61 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_61 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_61 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_61 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_61 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_61 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_61 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_61 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_61 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_61 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_61 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_61 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_61 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_61 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_61 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_61 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_61 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_61 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_61 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_61 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_61 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_61 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_61 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_61 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_61 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_61 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_61 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_61 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_61 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_61 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_61 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_61 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_61 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_61 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_61 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_61 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_61 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_61 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_61 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_61 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_61 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_61 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_61 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_61 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_61 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_61 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_61 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_61 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_61
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[41]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x55555513dc *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19, #144]                             #! EA = L0x7fffffe180; PC = 0x55555513e0 *)
mov [L0x7fffffe180,L0x7fffffe182,L0x7fffffe184,L0x7fffffe186,L0x7fffffe188,L0x7fffffe18a,L0x7fffffe18c,L0x7fffffe18e] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x55555513e4 *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #160]                             #! EA = L0x7fffffe190; PC = 0x55555513e8 *)
mov [L0x7fffffe190,L0x7fffffe192,L0x7fffffe194,L0x7fffffe196,L0x7fffffe198,L0x7fffffe19a,L0x7fffffe19c,L0x7fffffe19e] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x55555513ec *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #176]                             #! EA = L0x7fffffe1a0; PC = 0x55555513f0 *)
mov [L0x7fffffe1a0,L0x7fffffe1a2,L0x7fffffe1a4,L0x7fffffe1a6,L0x7fffffe1a8,L0x7fffffe1aa,L0x7fffffe1ac,L0x7fffffe1ae] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x55555513f4 *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #192]                             #! EA = L0x7fffffe1b0; PC = 0x55555513f8 *)
mov [L0x7fffffe1b0,L0x7fffffe1b2,L0x7fffffe1b4,L0x7fffffe1b6,L0x7fffffe1b8,L0x7fffffe1ba,L0x7fffffe1bc,L0x7fffffe1be] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x55555513fc *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #208]                             #! EA = L0x7fffffe1c0; PC = 0x5555551400 *)
mov [L0x7fffffe1c0,L0x7fffffe1c2,L0x7fffffe1c4,L0x7fffffe1c6,L0x7fffffe1c8,L0x7fffffe1ca,L0x7fffffe1cc,L0x7fffffe1ce] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x5555551404 *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #224]                             #! EA = L0x7fffffe1d0; PC = 0x5555551408 *)
mov [L0x7fffffe1d0,L0x7fffffe1d2,L0x7fffffe1d4,L0x7fffffe1d6,L0x7fffffe1d8,L0x7fffffe1da,L0x7fffffe1dc,L0x7fffffe1de] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x555555140c *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #240]                             #! EA = L0x7fffffe1e0; PC = 0x5555551410 *)
mov [L0x7fffffe1e0,L0x7fffffe1e2,L0x7fffffe1e4,L0x7fffffe1e6,L0x7fffffe1e8,L0x7fffffe1ea,L0x7fffffe1ec,L0x7fffffe1ee] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x5555551414 *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #256]                             #! EA = L0x7fffffe1f0; PC = 0x5555551418 *)
mov [L0x7fffffe1f0,L0x7fffffe1f2,L0x7fffffe1f4,L0x7fffffe1f6,L0x7fffffe1f8,L0x7fffffe1fa,L0x7fffffe1fc,L0x7fffffe1fe] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x555555141c *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #272]                             #! EA = L0x7fffffe200; PC = 0x5555551420 *)
mov [L0x7fffffe200,L0x7fffffe202,L0x7fffffe204,L0x7fffffe206,L0x7fffffe208,L0x7fffffe20a,L0x7fffffe20c,L0x7fffffe20e] %v0;


### epilogue

(* #b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! PC = 0x5555551430 *)
#b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! 0x5555551430 = 0x5555551430;


## i_iter


### k0_iter


#### load

(* ldr	q7, [x19, #112]                             #! EA = L0x7fffffe280; Value = 0x0000000000000000; PC = 0x55555512f0 *)
mov %v7 [L0x7fffffe280,L0x7fffffe282,L0x7fffffe284,L0x7fffffe286,L0x7fffffe288,L0x7fffffe28a,L0x7fffffe28c,L0x7fffffe28e];
(* ldr	q6, [x19, #96]                              #! EA = L0x7fffffe270; Value = 0x0000000000000000; PC = 0x55555512f4 *)
mov %v6 [L0x7fffffe270,L0x7fffffe272,L0x7fffffe274,L0x7fffffe276,L0x7fffffe278,L0x7fffffe27a,L0x7fffffe27c,L0x7fffffe27e];
(* ldr	q5, [x19, #80]                              #! EA = L0x7fffffe260; Value = 0x0000000000000000; PC = 0x55555512f8 *)
mov %v5 [L0x7fffffe260,L0x7fffffe262,L0x7fffffe264,L0x7fffffe266,L0x7fffffe268,L0x7fffffe26a,L0x7fffffe26c,L0x7fffffe26e];
(* ldr	q4, [x19, #64]                              #! EA = L0x7fffffe250; Value = 0x0000000000000000; PC = 0x55555512fc *)
mov %v4 [L0x7fffffe250,L0x7fffffe252,L0x7fffffe254,L0x7fffffe256,L0x7fffffe258,L0x7fffffe25a,L0x7fffffe25c,L0x7fffffe25e];
(* ldr	q3, [x19, #48]                              #! EA = L0x7fffffe240; Value = 0x0000000000000000; PC = 0x5555551300 *)
mov %v3 [L0x7fffffe240,L0x7fffffe242,L0x7fffffe244,L0x7fffffe246,L0x7fffffe248,L0x7fffffe24a,L0x7fffffe24c,L0x7fffffe24e];
(* ldr	q2, [x19, #32]                              #! EA = L0x7fffffe230; Value = 0x0000000000000000; PC = 0x5555551304 *)
mov %v2 [L0x7fffffe230,L0x7fffffe232,L0x7fffffe234,L0x7fffffe236,L0x7fffffe238,L0x7fffffe23a,L0x7fffffe23c,L0x7fffffe23e];
(* ldr	q1, [x19, #16]                              #! EA = L0x7fffffe220; Value = 0x0000000000000000; PC = 0x5555551308 *)
mov %v1 [L0x7fffffe220,L0x7fffffe222,L0x7fffffe224,L0x7fffffe226,L0x7fffffe228,L0x7fffffe22a,L0x7fffffe22c,L0x7fffffe22e];
(* ldr	q0, [x19, #128]                             #! EA = L0x7fffffe290; Value = 0x0000000000000000; PC = 0x5555551314 *)
mov %v0 [L0x7fffffe290,L0x7fffffe292,L0x7fffffe294,L0x7fffffe296,L0x7fffffe298,L0x7fffffe29a,L0x7fffffe29c,L0x7fffffe29e];
(* str	q0, [sp]                                    #! EA = L0x7fffffc260; PC = 0x5555551318 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v0;
(* ldr	q0, [x19]                                   #! EA = L0x7fffffe210; Value = 0x0000000000000000; PC = 0x555555133c *)
mov %v0 [L0x7fffffe210,L0x7fffffe212,L0x7fffffe214,L0x7fffffe216,L0x7fffffe218,L0x7fffffe21a,L0x7fffffe21c,L0x7fffffe21e];
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x5555551340 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x5555551340 = 0x5555551340;

ghost %fa0_70@sint16[8], %fa1_70@sint16[8], %fa2_70@sint16[8], %fa3_70@sint16[8], %fa4_70@sint16[8], %fa5_70@sint16[8], %fa6_70@sint16[8], %fa7_70@sint16[8], %fa8_70@sint16[8] :
    %fa0_70 = %v0 /\ %fa1_70 = %v1 /\ %fa2_70 = %v2 /\ %fa3_70 = %v3 /\ %fa4_70 = %v4 /\ %fa5_70 = %v5 /\ %fa6_70 = %v6 /\ %fa7_70 = %v7 /\
    %fa8_70 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_70 = %v0 /\ %fa1_70 = %v1 /\ %fa2_70 = %v2 /\ %fa3_70 = %v3 /\ %fa4_70 = %v4 /\ %fa5_70 = %v5 /\ %fa6_70 = %v6 /\ %fa7_70 = %v7 /\
    %fa8_70 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 43 *)
    %fa0_70 = %v0 /\ %fa1_70 = %v1 /\ %fa2_70 = %v2 /\ %fa3_70 = %v3 /\ %fa4_70 = %v4 /\ %fa5_70 = %v5 /\ %fa6_70 = %v6 /\ %fa7_70 = %v7 /\
    %fa8_70 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_70 = [arr7000, arr7001, arr7002, arr7003, arr7004, arr7005, arr7006, arr7007] /\
    %fa1_70 = [arr7010, arr7011, arr7012, arr7013, arr7014, arr7015, arr7016, arr7017] /\
    %fa2_70 = [arr7020, arr7021, arr7022, arr7023, arr7024, arr7025, arr7026, arr7027] /\
    %fa3_70 = [arr7030, arr7031, arr7032, arr7033, arr7034, arr7035, arr7036, arr7037] /\
    %fa4_70 = [arr7040, arr7041, arr7042, arr7043, arr7044, arr7045, arr7046, arr7047] /\
    %fa5_70 = [arr7050, arr7051, arr7052, arr7053, arr7054, arr7055, arr7056, arr7057] /\
    %fa6_70 = [arr7060, arr7061, arr7062, arr7063, arr7064, arr7065, arr7066, arr7067] /\
    %fa7_70 = [arr7070, arr7071, arr7072, arr7073, arr7074, arr7075, arr7076, arr7077] /\
    %fa8_70 = [arr7080, arr7081, arr7082, arr7083, arr7084, arr7085, arr7086, arr7087]
  &&
    %fa0_70 = %v0 /\ %fa1_70 = %v1 /\ %fa2_70 = %v2 /\ %fa3_70 = %v3 /\ %fa4_70 = %v4 /\ %fa5_70 = %v5 /\ %fa6_70 = %v6 /\ %fa7_70 = %v7 /\
    %fa8_70 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_70 = [arr7000, arr7001, arr7002, arr7003, arr7004, arr7005, arr7006, arr7007] /\
    %fa1_70 = [arr7010, arr7011, arr7012, arr7013, arr7014, arr7015, arr7016, arr7017] /\
    %fa2_70 = [arr7020, arr7021, arr7022, arr7023, arr7024, arr7025, arr7026, arr7027] /\
    %fa3_70 = [arr7030, arr7031, arr7032, arr7033, arr7034, arr7035, arr7036, arr7037] /\
    %fa4_70 = [arr7040, arr7041, arr7042, arr7043, arr7044, arr7045, arr7046, arr7047] /\
    %fa5_70 = [arr7050, arr7051, arr7052, arr7053, arr7054, arr7055, arr7056, arr7057] /\
    %fa6_70 = [arr7060, arr7061, arr7062, arr7063, arr7064, arr7065, arr7066, arr7067] /\
    %fa7_70 = [arr7070, arr7071, arr7072, arr7073, arr7074, arr7075, arr7076, arr7077] /\
    %fa8_70 = [arr7080, arr7081, arr7082, arr7083, arr7084, arr7085, arr7086, arr7087];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 44 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_70 +
        %fa3_70 +
        %fa6_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_70 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_70 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_70 +
        %fa7_70 +
        %fa4_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_70 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_70 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_70 +
        %fa2_70 +
        %fa5_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_70 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_70 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 43], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 45 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_70 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_70 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_70 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_70 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_70 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_70 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_70 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_70 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_70 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_70 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_70 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_70 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_70 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_70 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_70 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_70 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_70 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_70 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_70 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_70 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_70 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_70 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_70 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_70 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_70 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_70 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_70 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_70 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_70 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_70 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_70 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_70 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_70 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_70 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_70 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_70 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_70 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_70 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_70 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_70 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_70 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_70 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_70 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_70 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_70 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_70 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_70 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_70 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_70 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_70 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_70 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_70 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_70 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_70 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_70 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_70 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_70 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_70 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_70 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_70 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_70 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_70
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[44]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x5555551344 *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19]                                   #! EA = L0x7fffffe210; PC = 0x5555551348 *)
mov [L0x7fffffe210,L0x7fffffe212,L0x7fffffe214,L0x7fffffe216,L0x7fffffe218,L0x7fffffe21a,L0x7fffffe21c,L0x7fffffe21e] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x555555134c *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #16]                              #! EA = L0x7fffffe220; PC = 0x5555551350 *)
mov [L0x7fffffe220,L0x7fffffe222,L0x7fffffe224,L0x7fffffe226,L0x7fffffe228,L0x7fffffe22a,L0x7fffffe22c,L0x7fffffe22e] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x5555551354 *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #32]                              #! EA = L0x7fffffe230; PC = 0x5555551358 *)
mov [L0x7fffffe230,L0x7fffffe232,L0x7fffffe234,L0x7fffffe236,L0x7fffffe238,L0x7fffffe23a,L0x7fffffe23c,L0x7fffffe23e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x555555135c *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #48]                              #! EA = L0x7fffffe240; PC = 0x5555551360 *)
mov [L0x7fffffe240,L0x7fffffe242,L0x7fffffe244,L0x7fffffe246,L0x7fffffe248,L0x7fffffe24a,L0x7fffffe24c,L0x7fffffe24e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x5555551364 *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #64]                              #! EA = L0x7fffffe250; PC = 0x5555551368 *)
mov [L0x7fffffe250,L0x7fffffe252,L0x7fffffe254,L0x7fffffe256,L0x7fffffe258,L0x7fffffe25a,L0x7fffffe25c,L0x7fffffe25e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x555555136c *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #80]                              #! EA = L0x7fffffe260; PC = 0x5555551370 *)
mov [L0x7fffffe260,L0x7fffffe262,L0x7fffffe264,L0x7fffffe266,L0x7fffffe268,L0x7fffffe26a,L0x7fffffe26c,L0x7fffffe26e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x5555551374 *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #96]                              #! EA = L0x7fffffe270; PC = 0x5555551378 *)
mov [L0x7fffffe270,L0x7fffffe272,L0x7fffffe274,L0x7fffffe276,L0x7fffffe278,L0x7fffffe27a,L0x7fffffe27c,L0x7fffffe27e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x555555137c *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #112]                             #! EA = L0x7fffffe280; PC = 0x5555551380 *)
mov [L0x7fffffe280,L0x7fffffe282,L0x7fffffe284,L0x7fffffe286,L0x7fffffe288,L0x7fffffe28a,L0x7fffffe28c,L0x7fffffe28e] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x5555551384 *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #128]                             #! EA = L0x7fffffe290; PC = 0x5555551388 *)
mov [L0x7fffffe290,L0x7fffffe292,L0x7fffffe294,L0x7fffffe296,L0x7fffffe298,L0x7fffffe29a,L0x7fffffe29c,L0x7fffffe29e] %v0;


### k0_iter


#### load

(* ldr	q7, [x19, #256]                             #! EA = L0x7fffffe310; Value = 0x0000000000000000; PC = 0x555555138c *)
mov %v7 [L0x7fffffe310,L0x7fffffe312,L0x7fffffe314,L0x7fffffe316,L0x7fffffe318,L0x7fffffe31a,L0x7fffffe31c,L0x7fffffe31e];
(* ldr	q6, [x19, #240]                             #! EA = L0x7fffffe300; Value = 0x0000000000000000; PC = 0x5555551390 *)
mov %v6 [L0x7fffffe300,L0x7fffffe302,L0x7fffffe304,L0x7fffffe306,L0x7fffffe308,L0x7fffffe30a,L0x7fffffe30c,L0x7fffffe30e];
(* ldr	q5, [x19, #224]                             #! EA = L0x7fffffe2f0; Value = 0x0000000000000000; PC = 0x5555551394 *)
mov %v5 [L0x7fffffe2f0,L0x7fffffe2f2,L0x7fffffe2f4,L0x7fffffe2f6,L0x7fffffe2f8,L0x7fffffe2fa,L0x7fffffe2fc,L0x7fffffe2fe];
(* ldr	q4, [x19, #208]                             #! EA = L0x7fffffe2e0; Value = 0x0000000000000000; PC = 0x5555551398 *)
mov %v4 [L0x7fffffe2e0,L0x7fffffe2e2,L0x7fffffe2e4,L0x7fffffe2e6,L0x7fffffe2e8,L0x7fffffe2ea,L0x7fffffe2ec,L0x7fffffe2ee];
(* ldr	q3, [x19, #192]                             #! EA = L0x7fffffe2d0; Value = 0x0000000000000000; PC = 0x555555139c *)
mov %v3 [L0x7fffffe2d0,L0x7fffffe2d2,L0x7fffffe2d4,L0x7fffffe2d6,L0x7fffffe2d8,L0x7fffffe2da,L0x7fffffe2dc,L0x7fffffe2de];
(* ldr	q2, [x19, #176]                             #! EA = L0x7fffffe2c0; Value = 0x0000000000000000; PC = 0x55555513a0 *)
mov %v2 [L0x7fffffe2c0,L0x7fffffe2c2,L0x7fffffe2c4,L0x7fffffe2c6,L0x7fffffe2c8,L0x7fffffe2ca,L0x7fffffe2cc,L0x7fffffe2ce];
(* ldr	q1, [x19, #160]                             #! EA = L0x7fffffe2b0; Value = 0x0000000000000000; PC = 0x55555513a4 *)
mov %v1 [L0x7fffffe2b0,L0x7fffffe2b2,L0x7fffffe2b4,L0x7fffffe2b6,L0x7fffffe2b8,L0x7fffffe2ba,L0x7fffffe2bc,L0x7fffffe2be];
(* ldr	q0, [x19, #144]                             #! EA = L0x7fffffe2a0; Value = 0x0000000000000000; PC = 0x55555513a8 *)
mov %v0 [L0x7fffffe2a0,L0x7fffffe2a2,L0x7fffffe2a4,L0x7fffffe2a6,L0x7fffffe2a8,L0x7fffffe2aa,L0x7fffffe2ac,L0x7fffffe2ae];
(* ldr	q16, [x19, #272]                            #! EA = L0x7fffffe320; Value = 0x0000000000000000; PC = 0x55555513b0 *)
mov %v16 [L0x7fffffe320,L0x7fffffe322,L0x7fffffe324,L0x7fffffe326,L0x7fffffe328,L0x7fffffe32a,L0x7fffffe32c,L0x7fffffe32e];
(* str	q16, [sp]                                   #! EA = L0x7fffffc260; PC = 0x55555513b4 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v16;
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x55555513d8 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x55555513d8 = 0x55555513d8;

ghost %fa0_71@sint16[8], %fa1_71@sint16[8], %fa2_71@sint16[8], %fa3_71@sint16[8], %fa4_71@sint16[8], %fa5_71@sint16[8], %fa6_71@sint16[8], %fa7_71@sint16[8], %fa8_71@sint16[8] :
    %fa0_71 = %v0 /\ %fa1_71 = %v1 /\ %fa2_71 = %v2 /\ %fa3_71 = %v3 /\ %fa4_71 = %v4 /\ %fa5_71 = %v5 /\ %fa6_71 = %v6 /\ %fa7_71 = %v7 /\
    %fa8_71 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_71 = %v0 /\ %fa1_71 = %v1 /\ %fa2_71 = %v2 /\ %fa3_71 = %v3 /\ %fa4_71 = %v4 /\ %fa5_71 = %v5 /\ %fa6_71 = %v6 /\ %fa7_71 = %v7 /\
    %fa8_71 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 46 *)
    %fa0_71 = %v0 /\ %fa1_71 = %v1 /\ %fa2_71 = %v2 /\ %fa3_71 = %v3 /\ %fa4_71 = %v4 /\ %fa5_71 = %v5 /\ %fa6_71 = %v6 /\ %fa7_71 = %v7 /\
    %fa8_71 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_71 = [arr7100, arr7101, arr7102, arr7103, arr7104, arr7105, arr7106, arr7107] /\
    %fa1_71 = [arr7110, arr7111, arr7112, arr7113, arr7114, arr7115, arr7116, arr7117] /\
    %fa2_71 = [arr7120, arr7121, arr7122, arr7123, arr7124, arr7125, arr7126, arr7127] /\
    %fa3_71 = [arr7130, arr7131, arr7132, arr7133, arr7134, arr7135, arr7136, arr7137] /\
    %fa4_71 = [arr7140, arr7141, arr7142, arr7143, arr7144, arr7145, arr7146, arr7147] /\
    %fa5_71 = [arr7150, arr7151, arr7152, arr7153, arr7154, arr7155, arr7156, arr7157] /\
    %fa6_71 = [arr7160, arr7161, arr7162, arr7163, arr7164, arr7165, arr7166, arr7167] /\
    %fa7_71 = [arr7170, arr7171, arr7172, arr7173, arr7174, arr7175, arr7176, arr7177] /\
    %fa8_71 = [arr7180, arr7181, arr7182, arr7183, arr7184, arr7185, arr7186, arr7187]
  &&
    %fa0_71 = %v0 /\ %fa1_71 = %v1 /\ %fa2_71 = %v2 /\ %fa3_71 = %v3 /\ %fa4_71 = %v4 /\ %fa5_71 = %v5 /\ %fa6_71 = %v6 /\ %fa7_71 = %v7 /\
    %fa8_71 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_71 = [arr7100, arr7101, arr7102, arr7103, arr7104, arr7105, arr7106, arr7107] /\
    %fa1_71 = [arr7110, arr7111, arr7112, arr7113, arr7114, arr7115, arr7116, arr7117] /\
    %fa2_71 = [arr7120, arr7121, arr7122, arr7123, arr7124, arr7125, arr7126, arr7127] /\
    %fa3_71 = [arr7130, arr7131, arr7132, arr7133, arr7134, arr7135, arr7136, arr7137] /\
    %fa4_71 = [arr7140, arr7141, arr7142, arr7143, arr7144, arr7145, arr7146, arr7147] /\
    %fa5_71 = [arr7150, arr7151, arr7152, arr7153, arr7154, arr7155, arr7156, arr7157] /\
    %fa6_71 = [arr7160, arr7161, arr7162, arr7163, arr7164, arr7165, arr7166, arr7167] /\
    %fa7_71 = [arr7170, arr7171, arr7172, arr7173, arr7174, arr7175, arr7176, arr7177] /\
    %fa8_71 = [arr7180, arr7181, arr7182, arr7183, arr7184, arr7185, arr7186, arr7187];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 47 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_71 +
        %fa3_71 +
        %fa6_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_71 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_71 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_71 +
        %fa7_71 +
        %fa4_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_71 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_71 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_71 +
        %fa2_71 +
        %fa5_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_71 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_71 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 46], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 48 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_71 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_71 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_71 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_71 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_71 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_71 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_71 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_71 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_71 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_71 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_71 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_71 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_71 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_71 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_71 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_71 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_71 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_71 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_71 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_71 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_71 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_71 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_71 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_71 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_71 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_71 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_71 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_71 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_71 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_71 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_71 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_71 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_71 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_71 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_71 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_71 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_71 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_71 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_71 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_71 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_71 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_71 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_71 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_71 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_71 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_71 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_71 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_71 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_71 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_71 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_71 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_71 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_71 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_71 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_71 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_71 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_71 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_71 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_71 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_71 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_71 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_71
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[47]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x55555513dc *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19, #144]                             #! EA = L0x7fffffe2a0; PC = 0x55555513e0 *)
mov [L0x7fffffe2a0,L0x7fffffe2a2,L0x7fffffe2a4,L0x7fffffe2a6,L0x7fffffe2a8,L0x7fffffe2aa,L0x7fffffe2ac,L0x7fffffe2ae] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x55555513e4 *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #160]                             #! EA = L0x7fffffe2b0; PC = 0x55555513e8 *)
mov [L0x7fffffe2b0,L0x7fffffe2b2,L0x7fffffe2b4,L0x7fffffe2b6,L0x7fffffe2b8,L0x7fffffe2ba,L0x7fffffe2bc,L0x7fffffe2be] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x55555513ec *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #176]                             #! EA = L0x7fffffe2c0; PC = 0x55555513f0 *)
mov [L0x7fffffe2c0,L0x7fffffe2c2,L0x7fffffe2c4,L0x7fffffe2c6,L0x7fffffe2c8,L0x7fffffe2ca,L0x7fffffe2cc,L0x7fffffe2ce] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x55555513f4 *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #192]                             #! EA = L0x7fffffe2d0; PC = 0x55555513f8 *)
mov [L0x7fffffe2d0,L0x7fffffe2d2,L0x7fffffe2d4,L0x7fffffe2d6,L0x7fffffe2d8,L0x7fffffe2da,L0x7fffffe2dc,L0x7fffffe2de] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x55555513fc *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #208]                             #! EA = L0x7fffffe2e0; PC = 0x5555551400 *)
mov [L0x7fffffe2e0,L0x7fffffe2e2,L0x7fffffe2e4,L0x7fffffe2e6,L0x7fffffe2e8,L0x7fffffe2ea,L0x7fffffe2ec,L0x7fffffe2ee] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x5555551404 *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #224]                             #! EA = L0x7fffffe2f0; PC = 0x5555551408 *)
mov [L0x7fffffe2f0,L0x7fffffe2f2,L0x7fffffe2f4,L0x7fffffe2f6,L0x7fffffe2f8,L0x7fffffe2fa,L0x7fffffe2fc,L0x7fffffe2fe] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x555555140c *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #240]                             #! EA = L0x7fffffe300; PC = 0x5555551410 *)
mov [L0x7fffffe300,L0x7fffffe302,L0x7fffffe304,L0x7fffffe306,L0x7fffffe308,L0x7fffffe30a,L0x7fffffe30c,L0x7fffffe30e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x5555551414 *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #256]                             #! EA = L0x7fffffe310; PC = 0x5555551418 *)
mov [L0x7fffffe310,L0x7fffffe312,L0x7fffffe314,L0x7fffffe316,L0x7fffffe318,L0x7fffffe31a,L0x7fffffe31c,L0x7fffffe31e] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x555555141c *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #272]                             #! EA = L0x7fffffe320; PC = 0x5555551420 *)
mov [L0x7fffffe320,L0x7fffffe322,L0x7fffffe324,L0x7fffffe326,L0x7fffffe328,L0x7fffffe32a,L0x7fffffe32c,L0x7fffffe32e] %v0;


### epilogue

(* #b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! PC = 0x5555551430 *)
#b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! 0x5555551430 = 0x5555551430;


## i_iter


### k0_iter


#### load

(* ldr	q7, [x19, #112]                             #! EA = L0x7fffffe3a0; Value = 0x0000000000000000; PC = 0x55555512f0 *)
mov %v7 [L0x7fffffe3a0,L0x7fffffe3a2,L0x7fffffe3a4,L0x7fffffe3a6,L0x7fffffe3a8,L0x7fffffe3aa,L0x7fffffe3ac,L0x7fffffe3ae];
(* ldr	q6, [x19, #96]                              #! EA = L0x7fffffe390; Value = 0x0000000000000000; PC = 0x55555512f4 *)
mov %v6 [L0x7fffffe390,L0x7fffffe392,L0x7fffffe394,L0x7fffffe396,L0x7fffffe398,L0x7fffffe39a,L0x7fffffe39c,L0x7fffffe39e];
(* ldr	q5, [x19, #80]                              #! EA = L0x7fffffe380; Value = 0x0000000000000000; PC = 0x55555512f8 *)
mov %v5 [L0x7fffffe380,L0x7fffffe382,L0x7fffffe384,L0x7fffffe386,L0x7fffffe388,L0x7fffffe38a,L0x7fffffe38c,L0x7fffffe38e];
(* ldr	q4, [x19, #64]                              #! EA = L0x7fffffe370; Value = 0x0000000000000000; PC = 0x55555512fc *)
mov %v4 [L0x7fffffe370,L0x7fffffe372,L0x7fffffe374,L0x7fffffe376,L0x7fffffe378,L0x7fffffe37a,L0x7fffffe37c,L0x7fffffe37e];
(* ldr	q3, [x19, #48]                              #! EA = L0x7fffffe360; Value = 0x0000000000000000; PC = 0x5555551300 *)
mov %v3 [L0x7fffffe360,L0x7fffffe362,L0x7fffffe364,L0x7fffffe366,L0x7fffffe368,L0x7fffffe36a,L0x7fffffe36c,L0x7fffffe36e];
(* ldr	q2, [x19, #32]                              #! EA = L0x7fffffe350; Value = 0x0000000000000000; PC = 0x5555551304 *)
mov %v2 [L0x7fffffe350,L0x7fffffe352,L0x7fffffe354,L0x7fffffe356,L0x7fffffe358,L0x7fffffe35a,L0x7fffffe35c,L0x7fffffe35e];
(* ldr	q1, [x19, #16]                              #! EA = L0x7fffffe340; Value = 0x0000000000000000; PC = 0x5555551308 *)
mov %v1 [L0x7fffffe340,L0x7fffffe342,L0x7fffffe344,L0x7fffffe346,L0x7fffffe348,L0x7fffffe34a,L0x7fffffe34c,L0x7fffffe34e];
(* ldr	q0, [x19, #128]                             #! EA = L0x7fffffe3b0; Value = 0x0000000000000000; PC = 0x5555551314 *)
mov %v0 [L0x7fffffe3b0,L0x7fffffe3b2,L0x7fffffe3b4,L0x7fffffe3b6,L0x7fffffe3b8,L0x7fffffe3ba,L0x7fffffe3bc,L0x7fffffe3be];
(* str	q0, [sp]                                    #! EA = L0x7fffffc260; PC = 0x5555551318 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v0;
(* ldr	q0, [x19]                                   #! EA = L0x7fffffe330; Value = 0x0000000000000000; PC = 0x555555133c *)
mov %v0 [L0x7fffffe330,L0x7fffffe332,L0x7fffffe334,L0x7fffffe336,L0x7fffffe338,L0x7fffffe33a,L0x7fffffe33c,L0x7fffffe33e];
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x5555551340 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x5555551340 = 0x5555551340;

ghost %fa0_80@sint16[8], %fa1_80@sint16[8], %fa2_80@sint16[8], %fa3_80@sint16[8], %fa4_80@sint16[8], %fa5_80@sint16[8], %fa6_80@sint16[8], %fa7_80@sint16[8], %fa8_80@sint16[8] :
    %fa0_80 = %v0 /\ %fa1_80 = %v1 /\ %fa2_80 = %v2 /\ %fa3_80 = %v3 /\ %fa4_80 = %v4 /\ %fa5_80 = %v5 /\ %fa6_80 = %v6 /\ %fa7_80 = %v7 /\
    %fa8_80 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_80 = %v0 /\ %fa1_80 = %v1 /\ %fa2_80 = %v2 /\ %fa3_80 = %v3 /\ %fa4_80 = %v4 /\ %fa5_80 = %v5 /\ %fa6_80 = %v6 /\ %fa7_80 = %v7 /\
    %fa8_80 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 49 *)
    %fa0_80 = %v0 /\ %fa1_80 = %v1 /\ %fa2_80 = %v2 /\ %fa3_80 = %v3 /\ %fa4_80 = %v4 /\ %fa5_80 = %v5 /\ %fa6_80 = %v6 /\ %fa7_80 = %v7 /\
    %fa8_80 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_80 = [arr8000, arr8001, arr8002, arr8003, arr8004, arr8005, arr8006, arr8007] /\
    %fa1_80 = [arr8010, arr8011, arr8012, arr8013, arr8014, arr8015, arr8016, arr8017] /\
    %fa2_80 = [arr8020, arr8021, arr8022, arr8023, arr8024, arr8025, arr8026, arr8027] /\
    %fa3_80 = [arr8030, arr8031, arr8032, arr8033, arr8034, arr8035, arr8036, arr8037] /\
    %fa4_80 = [arr8040, arr8041, arr8042, arr8043, arr8044, arr8045, arr8046, arr8047] /\
    %fa5_80 = [arr8050, arr8051, arr8052, arr8053, arr8054, arr8055, arr8056, arr8057] /\
    %fa6_80 = [arr8060, arr8061, arr8062, arr8063, arr8064, arr8065, arr8066, arr8067] /\
    %fa7_80 = [arr8070, arr8071, arr8072, arr8073, arr8074, arr8075, arr8076, arr8077] /\
    %fa8_80 = [arr8080, arr8081, arr8082, arr8083, arr8084, arr8085, arr8086, arr8087]
  &&
    %fa0_80 = %v0 /\ %fa1_80 = %v1 /\ %fa2_80 = %v2 /\ %fa3_80 = %v3 /\ %fa4_80 = %v4 /\ %fa5_80 = %v5 /\ %fa6_80 = %v6 /\ %fa7_80 = %v7 /\
    %fa8_80 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_80 = [arr8000, arr8001, arr8002, arr8003, arr8004, arr8005, arr8006, arr8007] /\
    %fa1_80 = [arr8010, arr8011, arr8012, arr8013, arr8014, arr8015, arr8016, arr8017] /\
    %fa2_80 = [arr8020, arr8021, arr8022, arr8023, arr8024, arr8025, arr8026, arr8027] /\
    %fa3_80 = [arr8030, arr8031, arr8032, arr8033, arr8034, arr8035, arr8036, arr8037] /\
    %fa4_80 = [arr8040, arr8041, arr8042, arr8043, arr8044, arr8045, arr8046, arr8047] /\
    %fa5_80 = [arr8050, arr8051, arr8052, arr8053, arr8054, arr8055, arr8056, arr8057] /\
    %fa6_80 = [arr8060, arr8061, arr8062, arr8063, arr8064, arr8065, arr8066, arr8067] /\
    %fa7_80 = [arr8070, arr8071, arr8072, arr8073, arr8074, arr8075, arr8076, arr8077] /\
    %fa8_80 = [arr8080, arr8081, arr8082, arr8083, arr8084, arr8085, arr8086, arr8087];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 50 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_80 +
        %fa3_80 +
        %fa6_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_80 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_80 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_80 +
        %fa7_80 +
        %fa4_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_80 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_80 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_80 +
        %fa2_80 +
        %fa5_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_80 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_80 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 49], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 51 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_80 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_80 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_80 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_80 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_80 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_80 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_80 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_80 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_80 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_80 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_80 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_80 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_80 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_80 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_80 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_80 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_80 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_80 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_80 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_80 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_80 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_80 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_80 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_80 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_80 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_80 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_80 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_80 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_80 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_80 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_80 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_80 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_80 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_80 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_80 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_80 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_80 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_80 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_80 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_80 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_80 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_80 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_80 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_80 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_80 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_80 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_80 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_80 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_80 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_80 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_80 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_80 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_80 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_80 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_80 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_80 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_80 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_80 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_80 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_80 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_80 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_80
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[50]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x5555551344 *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19]                                   #! EA = L0x7fffffe330; PC = 0x5555551348 *)
mov [L0x7fffffe330,L0x7fffffe332,L0x7fffffe334,L0x7fffffe336,L0x7fffffe338,L0x7fffffe33a,L0x7fffffe33c,L0x7fffffe33e] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x555555134c *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #16]                              #! EA = L0x7fffffe340; PC = 0x5555551350 *)
mov [L0x7fffffe340,L0x7fffffe342,L0x7fffffe344,L0x7fffffe346,L0x7fffffe348,L0x7fffffe34a,L0x7fffffe34c,L0x7fffffe34e] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x5555551354 *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #32]                              #! EA = L0x7fffffe350; PC = 0x5555551358 *)
mov [L0x7fffffe350,L0x7fffffe352,L0x7fffffe354,L0x7fffffe356,L0x7fffffe358,L0x7fffffe35a,L0x7fffffe35c,L0x7fffffe35e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x555555135c *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #48]                              #! EA = L0x7fffffe360; PC = 0x5555551360 *)
mov [L0x7fffffe360,L0x7fffffe362,L0x7fffffe364,L0x7fffffe366,L0x7fffffe368,L0x7fffffe36a,L0x7fffffe36c,L0x7fffffe36e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x5555551364 *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #64]                              #! EA = L0x7fffffe370; PC = 0x5555551368 *)
mov [L0x7fffffe370,L0x7fffffe372,L0x7fffffe374,L0x7fffffe376,L0x7fffffe378,L0x7fffffe37a,L0x7fffffe37c,L0x7fffffe37e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x555555136c *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #80]                              #! EA = L0x7fffffe380; PC = 0x5555551370 *)
mov [L0x7fffffe380,L0x7fffffe382,L0x7fffffe384,L0x7fffffe386,L0x7fffffe388,L0x7fffffe38a,L0x7fffffe38c,L0x7fffffe38e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x5555551374 *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #96]                              #! EA = L0x7fffffe390; PC = 0x5555551378 *)
mov [L0x7fffffe390,L0x7fffffe392,L0x7fffffe394,L0x7fffffe396,L0x7fffffe398,L0x7fffffe39a,L0x7fffffe39c,L0x7fffffe39e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x555555137c *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #112]                             #! EA = L0x7fffffe3a0; PC = 0x5555551380 *)
mov [L0x7fffffe3a0,L0x7fffffe3a2,L0x7fffffe3a4,L0x7fffffe3a6,L0x7fffffe3a8,L0x7fffffe3aa,L0x7fffffe3ac,L0x7fffffe3ae] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x5555551384 *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #128]                             #! EA = L0x7fffffe3b0; PC = 0x5555551388 *)
mov [L0x7fffffe3b0,L0x7fffffe3b2,L0x7fffffe3b4,L0x7fffffe3b6,L0x7fffffe3b8,L0x7fffffe3ba,L0x7fffffe3bc,L0x7fffffe3be] %v0;


### k0_iter


#### load

(* ldr	q7, [x19, #256]                             #! EA = L0x7fffffe430; Value = 0x0000000000000000; PC = 0x555555138c *)
mov %v7 [L0x7fffffe430,L0x7fffffe432,L0x7fffffe434,L0x7fffffe436,L0x7fffffe438,L0x7fffffe43a,L0x7fffffe43c,L0x7fffffe43e];
(* ldr	q6, [x19, #240]                             #! EA = L0x7fffffe420; Value = 0x0000000000000000; PC = 0x5555551390 *)
mov %v6 [L0x7fffffe420,L0x7fffffe422,L0x7fffffe424,L0x7fffffe426,L0x7fffffe428,L0x7fffffe42a,L0x7fffffe42c,L0x7fffffe42e];
(* ldr	q5, [x19, #224]                             #! EA = L0x7fffffe410; Value = 0x0000000000000000; PC = 0x5555551394 *)
mov %v5 [L0x7fffffe410,L0x7fffffe412,L0x7fffffe414,L0x7fffffe416,L0x7fffffe418,L0x7fffffe41a,L0x7fffffe41c,L0x7fffffe41e];
(* ldr	q4, [x19, #208]                             #! EA = L0x7fffffe400; Value = 0x0000000000000000; PC = 0x5555551398 *)
mov %v4 [L0x7fffffe400,L0x7fffffe402,L0x7fffffe404,L0x7fffffe406,L0x7fffffe408,L0x7fffffe40a,L0x7fffffe40c,L0x7fffffe40e];
(* ldr	q3, [x19, #192]                             #! EA = L0x7fffffe3f0; Value = 0x0000000000000000; PC = 0x555555139c *)
mov %v3 [L0x7fffffe3f0,L0x7fffffe3f2,L0x7fffffe3f4,L0x7fffffe3f6,L0x7fffffe3f8,L0x7fffffe3fa,L0x7fffffe3fc,L0x7fffffe3fe];
(* ldr	q2, [x19, #176]                             #! EA = L0x7fffffe3e0; Value = 0x0000000000000000; PC = 0x55555513a0 *)
mov %v2 [L0x7fffffe3e0,L0x7fffffe3e2,L0x7fffffe3e4,L0x7fffffe3e6,L0x7fffffe3e8,L0x7fffffe3ea,L0x7fffffe3ec,L0x7fffffe3ee];
(* ldr	q1, [x19, #160]                             #! EA = L0x7fffffe3d0; Value = 0x0000000000000000; PC = 0x55555513a4 *)
mov %v1 [L0x7fffffe3d0,L0x7fffffe3d2,L0x7fffffe3d4,L0x7fffffe3d6,L0x7fffffe3d8,L0x7fffffe3da,L0x7fffffe3dc,L0x7fffffe3de];
(* ldr	q0, [x19, #144]                             #! EA = L0x7fffffe3c0; Value = 0x0000000000000000; PC = 0x55555513a8 *)
mov %v0 [L0x7fffffe3c0,L0x7fffffe3c2,L0x7fffffe3c4,L0x7fffffe3c6,L0x7fffffe3c8,L0x7fffffe3ca,L0x7fffffe3cc,L0x7fffffe3ce];
(* ldr	q16, [x19, #272]                            #! EA = L0x7fffffe440; Value = 0x0000000000000000; PC = 0x55555513b0 *)
mov %v16 [L0x7fffffe440,L0x7fffffe442,L0x7fffffe444,L0x7fffffe446,L0x7fffffe448,L0x7fffffe44a,L0x7fffffe44c,L0x7fffffe44e];
(* str	q16, [sp]                                   #! EA = L0x7fffffc260; PC = 0x55555513b4 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v16;
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x55555513d8 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x55555513d8 = 0x55555513d8;

ghost %fa0_81@sint16[8], %fa1_81@sint16[8], %fa2_81@sint16[8], %fa3_81@sint16[8], %fa4_81@sint16[8], %fa5_81@sint16[8], %fa6_81@sint16[8], %fa7_81@sint16[8], %fa8_81@sint16[8] :
    %fa0_81 = %v0 /\ %fa1_81 = %v1 /\ %fa2_81 = %v2 /\ %fa3_81 = %v3 /\ %fa4_81 = %v4 /\ %fa5_81 = %v5 /\ %fa6_81 = %v6 /\ %fa7_81 = %v7 /\
    %fa8_81 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_81 = %v0 /\ %fa1_81 = %v1 /\ %fa2_81 = %v2 /\ %fa3_81 = %v3 /\ %fa4_81 = %v4 /\ %fa5_81 = %v5 /\ %fa6_81 = %v6 /\ %fa7_81 = %v7 /\
    %fa8_81 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 52 *)
    %fa0_81 = %v0 /\ %fa1_81 = %v1 /\ %fa2_81 = %v2 /\ %fa3_81 = %v3 /\ %fa4_81 = %v4 /\ %fa5_81 = %v5 /\ %fa6_81 = %v6 /\ %fa7_81 = %v7 /\
    %fa8_81 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_81 = [arr8100, arr8101, arr8102, arr8103, arr8104, arr8105, arr8106, arr8107] /\
    %fa1_81 = [arr8110, arr8111, arr8112, arr8113, arr8114, arr8115, arr8116, arr8117] /\
    %fa2_81 = [arr8120, arr8121, arr8122, arr8123, arr8124, arr8125, arr8126, arr8127] /\
    %fa3_81 = [arr8130, arr8131, arr8132, arr8133, arr8134, arr8135, arr8136, arr8137] /\
    %fa4_81 = [arr8140, arr8141, arr8142, arr8143, arr8144, arr8145, arr8146, arr8147] /\
    %fa5_81 = [arr8150, arr8151, arr8152, arr8153, arr8154, arr8155, arr8156, arr8157] /\
    %fa6_81 = [arr8160, arr8161, arr8162, arr8163, arr8164, arr8165, arr8166, arr8167] /\
    %fa7_81 = [arr8170, arr8171, arr8172, arr8173, arr8174, arr8175, arr8176, arr8177] /\
    %fa8_81 = [arr8180, arr8181, arr8182, arr8183, arr8184, arr8185, arr8186, arr8187]
  &&
    %fa0_81 = %v0 /\ %fa1_81 = %v1 /\ %fa2_81 = %v2 /\ %fa3_81 = %v3 /\ %fa4_81 = %v4 /\ %fa5_81 = %v5 /\ %fa6_81 = %v6 /\ %fa7_81 = %v7 /\
    %fa8_81 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_81 = [arr8100, arr8101, arr8102, arr8103, arr8104, arr8105, arr8106, arr8107] /\
    %fa1_81 = [arr8110, arr8111, arr8112, arr8113, arr8114, arr8115, arr8116, arr8117] /\
    %fa2_81 = [arr8120, arr8121, arr8122, arr8123, arr8124, arr8125, arr8126, arr8127] /\
    %fa3_81 = [arr8130, arr8131, arr8132, arr8133, arr8134, arr8135, arr8136, arr8137] /\
    %fa4_81 = [arr8140, arr8141, arr8142, arr8143, arr8144, arr8145, arr8146, arr8147] /\
    %fa5_81 = [arr8150, arr8151, arr8152, arr8153, arr8154, arr8155, arr8156, arr8157] /\
    %fa6_81 = [arr8160, arr8161, arr8162, arr8163, arr8164, arr8165, arr8166, arr8167] /\
    %fa7_81 = [arr8170, arr8171, arr8172, arr8173, arr8174, arr8175, arr8176, arr8177] /\
    %fa8_81 = [arr8180, arr8181, arr8182, arr8183, arr8184, arr8185, arr8186, arr8187];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 53 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_81 +
        %fa3_81 +
        %fa6_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_81 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_81 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_81 +
        %fa7_81 +
        %fa4_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_81 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_81 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_81 +
        %fa2_81 +
        %fa5_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_81 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_81 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 52], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 54 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_81 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_81 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_81 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_81 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_81 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_81 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_81 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_81 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_81 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_81 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_81 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_81 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_81 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_81 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_81 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_81 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_81 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_81 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_81 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_81 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_81 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_81 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_81 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_81 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_81 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_81 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_81 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_81 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_81 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_81 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_81 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_81 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_81 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_81 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_81 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_81 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_81 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_81 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_81 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_81 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_81 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_81 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_81 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_81 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_81 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_81 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_81 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_81 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_81 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_81 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_81 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_81 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_81 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_81 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_81 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_81 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_81 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_81 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_81 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_81 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_81 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_81
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[53]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x55555513dc *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19, #144]                             #! EA = L0x7fffffe3c0; PC = 0x55555513e0 *)
mov [L0x7fffffe3c0,L0x7fffffe3c2,L0x7fffffe3c4,L0x7fffffe3c6,L0x7fffffe3c8,L0x7fffffe3ca,L0x7fffffe3cc,L0x7fffffe3ce] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x55555513e4 *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #160]                             #! EA = L0x7fffffe3d0; PC = 0x55555513e8 *)
mov [L0x7fffffe3d0,L0x7fffffe3d2,L0x7fffffe3d4,L0x7fffffe3d6,L0x7fffffe3d8,L0x7fffffe3da,L0x7fffffe3dc,L0x7fffffe3de] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x55555513ec *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #176]                             #! EA = L0x7fffffe3e0; PC = 0x55555513f0 *)
mov [L0x7fffffe3e0,L0x7fffffe3e2,L0x7fffffe3e4,L0x7fffffe3e6,L0x7fffffe3e8,L0x7fffffe3ea,L0x7fffffe3ec,L0x7fffffe3ee] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x55555513f4 *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #192]                             #! EA = L0x7fffffe3f0; PC = 0x55555513f8 *)
mov [L0x7fffffe3f0,L0x7fffffe3f2,L0x7fffffe3f4,L0x7fffffe3f6,L0x7fffffe3f8,L0x7fffffe3fa,L0x7fffffe3fc,L0x7fffffe3fe] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x55555513fc *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #208]                             #! EA = L0x7fffffe400; PC = 0x5555551400 *)
mov [L0x7fffffe400,L0x7fffffe402,L0x7fffffe404,L0x7fffffe406,L0x7fffffe408,L0x7fffffe40a,L0x7fffffe40c,L0x7fffffe40e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x5555551404 *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #224]                             #! EA = L0x7fffffe410; PC = 0x5555551408 *)
mov [L0x7fffffe410,L0x7fffffe412,L0x7fffffe414,L0x7fffffe416,L0x7fffffe418,L0x7fffffe41a,L0x7fffffe41c,L0x7fffffe41e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x555555140c *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #240]                             #! EA = L0x7fffffe420; PC = 0x5555551410 *)
mov [L0x7fffffe420,L0x7fffffe422,L0x7fffffe424,L0x7fffffe426,L0x7fffffe428,L0x7fffffe42a,L0x7fffffe42c,L0x7fffffe42e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x5555551414 *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #256]                             #! EA = L0x7fffffe430; PC = 0x5555551418 *)
mov [L0x7fffffe430,L0x7fffffe432,L0x7fffffe434,L0x7fffffe436,L0x7fffffe438,L0x7fffffe43a,L0x7fffffe43c,L0x7fffffe43e] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x555555141c *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #272]                             #! EA = L0x7fffffe440; PC = 0x5555551420 *)
mov [L0x7fffffe440,L0x7fffffe442,L0x7fffffe444,L0x7fffffe446,L0x7fffffe448,L0x7fffffe44a,L0x7fffffe44c,L0x7fffffe44e] %v0;


### epilogue

(* #b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! PC = 0x5555551430 *)
#b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! 0x5555551430 = 0x5555551430;


## i_iter


### k0_iter


#### load

(* ldr	q7, [x19, #112]                             #! EA = L0x7fffffe4c0; Value = 0x0000000000000000; PC = 0x55555512f0 *)
mov %v7 [L0x7fffffe4c0,L0x7fffffe4c2,L0x7fffffe4c4,L0x7fffffe4c6,L0x7fffffe4c8,L0x7fffffe4ca,L0x7fffffe4cc,L0x7fffffe4ce];
(* ldr	q6, [x19, #96]                              #! EA = L0x7fffffe4b0; Value = 0x0000000000000000; PC = 0x55555512f4 *)
mov %v6 [L0x7fffffe4b0,L0x7fffffe4b2,L0x7fffffe4b4,L0x7fffffe4b6,L0x7fffffe4b8,L0x7fffffe4ba,L0x7fffffe4bc,L0x7fffffe4be];
(* ldr	q5, [x19, #80]                              #! EA = L0x7fffffe4a0; Value = 0x0000000000000000; PC = 0x55555512f8 *)
mov %v5 [L0x7fffffe4a0,L0x7fffffe4a2,L0x7fffffe4a4,L0x7fffffe4a6,L0x7fffffe4a8,L0x7fffffe4aa,L0x7fffffe4ac,L0x7fffffe4ae];
(* ldr	q4, [x19, #64]                              #! EA = L0x7fffffe490; Value = 0x0000000000000000; PC = 0x55555512fc *)
mov %v4 [L0x7fffffe490,L0x7fffffe492,L0x7fffffe494,L0x7fffffe496,L0x7fffffe498,L0x7fffffe49a,L0x7fffffe49c,L0x7fffffe49e];
(* ldr	q3, [x19, #48]                              #! EA = L0x7fffffe480; Value = 0x0000000000000000; PC = 0x5555551300 *)
mov %v3 [L0x7fffffe480,L0x7fffffe482,L0x7fffffe484,L0x7fffffe486,L0x7fffffe488,L0x7fffffe48a,L0x7fffffe48c,L0x7fffffe48e];
(* ldr	q2, [x19, #32]                              #! EA = L0x7fffffe470; Value = 0x0000000000000000; PC = 0x5555551304 *)
mov %v2 [L0x7fffffe470,L0x7fffffe472,L0x7fffffe474,L0x7fffffe476,L0x7fffffe478,L0x7fffffe47a,L0x7fffffe47c,L0x7fffffe47e];
(* ldr	q1, [x19, #16]                              #! EA = L0x7fffffe460; Value = 0x0000000000000000; PC = 0x5555551308 *)
mov %v1 [L0x7fffffe460,L0x7fffffe462,L0x7fffffe464,L0x7fffffe466,L0x7fffffe468,L0x7fffffe46a,L0x7fffffe46c,L0x7fffffe46e];
(* ldr	q0, [x19, #128]                             #! EA = L0x7fffffe4d0; Value = 0x0000000000000000; PC = 0x5555551314 *)
mov %v0 [L0x7fffffe4d0,L0x7fffffe4d2,L0x7fffffe4d4,L0x7fffffe4d6,L0x7fffffe4d8,L0x7fffffe4da,L0x7fffffe4dc,L0x7fffffe4de];
(* str	q0, [sp]                                    #! EA = L0x7fffffc260; PC = 0x5555551318 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v0;
(* ldr	q0, [x19]                                   #! EA = L0x7fffffe450; Value = 0x0000000000000000; PC = 0x555555133c *)
mov %v0 [L0x7fffffe450,L0x7fffffe452,L0x7fffffe454,L0x7fffffe456,L0x7fffffe458,L0x7fffffe45a,L0x7fffffe45c,L0x7fffffe45e];
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x5555551340 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x5555551340 = 0x5555551340;

ghost %fa0_90@sint16[8], %fa1_90@sint16[8], %fa2_90@sint16[8], %fa3_90@sint16[8], %fa4_90@sint16[8], %fa5_90@sint16[8], %fa6_90@sint16[8], %fa7_90@sint16[8], %fa8_90@sint16[8] :
    %fa0_90 = %v0 /\ %fa1_90 = %v1 /\ %fa2_90 = %v2 /\ %fa3_90 = %v3 /\ %fa4_90 = %v4 /\ %fa5_90 = %v5 /\ %fa6_90 = %v6 /\ %fa7_90 = %v7 /\
    %fa8_90 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_90 = %v0 /\ %fa1_90 = %v1 /\ %fa2_90 = %v2 /\ %fa3_90 = %v3 /\ %fa4_90 = %v4 /\ %fa5_90 = %v5 /\ %fa6_90 = %v6 /\ %fa7_90 = %v7 /\
    %fa8_90 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 55 *)
    %fa0_90 = %v0 /\ %fa1_90 = %v1 /\ %fa2_90 = %v2 /\ %fa3_90 = %v3 /\ %fa4_90 = %v4 /\ %fa5_90 = %v5 /\ %fa6_90 = %v6 /\ %fa7_90 = %v7 /\
    %fa8_90 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_90 = [arr9000, arr9001, arr9002, arr9003, arr9004, arr9005, arr9006, arr9007] /\
    %fa1_90 = [arr9010, arr9011, arr9012, arr9013, arr9014, arr9015, arr9016, arr9017] /\
    %fa2_90 = [arr9020, arr9021, arr9022, arr9023, arr9024, arr9025, arr9026, arr9027] /\
    %fa3_90 = [arr9030, arr9031, arr9032, arr9033, arr9034, arr9035, arr9036, arr9037] /\
    %fa4_90 = [arr9040, arr9041, arr9042, arr9043, arr9044, arr9045, arr9046, arr9047] /\
    %fa5_90 = [arr9050, arr9051, arr9052, arr9053, arr9054, arr9055, arr9056, arr9057] /\
    %fa6_90 = [arr9060, arr9061, arr9062, arr9063, arr9064, arr9065, arr9066, arr9067] /\
    %fa7_90 = [arr9070, arr9071, arr9072, arr9073, arr9074, arr9075, arr9076, arr9077] /\
    %fa8_90 = [arr9080, arr9081, arr9082, arr9083, arr9084, arr9085, arr9086, arr9087]
  &&
    %fa0_90 = %v0 /\ %fa1_90 = %v1 /\ %fa2_90 = %v2 /\ %fa3_90 = %v3 /\ %fa4_90 = %v4 /\ %fa5_90 = %v5 /\ %fa6_90 = %v6 /\ %fa7_90 = %v7 /\
    %fa8_90 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_90 = [arr9000, arr9001, arr9002, arr9003, arr9004, arr9005, arr9006, arr9007] /\
    %fa1_90 = [arr9010, arr9011, arr9012, arr9013, arr9014, arr9015, arr9016, arr9017] /\
    %fa2_90 = [arr9020, arr9021, arr9022, arr9023, arr9024, arr9025, arr9026, arr9027] /\
    %fa3_90 = [arr9030, arr9031, arr9032, arr9033, arr9034, arr9035, arr9036, arr9037] /\
    %fa4_90 = [arr9040, arr9041, arr9042, arr9043, arr9044, arr9045, arr9046, arr9047] /\
    %fa5_90 = [arr9050, arr9051, arr9052, arr9053, arr9054, arr9055, arr9056, arr9057] /\
    %fa6_90 = [arr9060, arr9061, arr9062, arr9063, arr9064, arr9065, arr9066, arr9067] /\
    %fa7_90 = [arr9070, arr9071, arr9072, arr9073, arr9074, arr9075, arr9076, arr9077] /\
    %fa8_90 = [arr9080, arr9081, arr9082, arr9083, arr9084, arr9085, arr9086, arr9087];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 56 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_90 +
        %fa3_90 +
        %fa6_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_90 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_90 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_90 +
        %fa7_90 +
        %fa4_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_90 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_90 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_90 +
        %fa2_90 +
        %fa5_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_90 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_90 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 55], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 57 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_90 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_90 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_90 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_90 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_90 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_90 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_90 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_90 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_90 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_90 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_90 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_90 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_90 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_90 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_90 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_90 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_90 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_90 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_90 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_90 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_90 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_90 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_90 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_90 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_90 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_90 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_90 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_90 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_90 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_90 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_90 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_90 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_90 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_90 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_90 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_90 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_90 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_90 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_90 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_90 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_90 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_90 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_90 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_90 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_90 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_90 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_90 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_90 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_90 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_90 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_90 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_90 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_90 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_90 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_90 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_90 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_90 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_90 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_90 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_90 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_90 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_90
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[56]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x5555551344 *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19]                                   #! EA = L0x7fffffe450; PC = 0x5555551348 *)
mov [L0x7fffffe450,L0x7fffffe452,L0x7fffffe454,L0x7fffffe456,L0x7fffffe458,L0x7fffffe45a,L0x7fffffe45c,L0x7fffffe45e] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x555555134c *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #16]                              #! EA = L0x7fffffe460; PC = 0x5555551350 *)
mov [L0x7fffffe460,L0x7fffffe462,L0x7fffffe464,L0x7fffffe466,L0x7fffffe468,L0x7fffffe46a,L0x7fffffe46c,L0x7fffffe46e] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x5555551354 *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #32]                              #! EA = L0x7fffffe470; PC = 0x5555551358 *)
mov [L0x7fffffe470,L0x7fffffe472,L0x7fffffe474,L0x7fffffe476,L0x7fffffe478,L0x7fffffe47a,L0x7fffffe47c,L0x7fffffe47e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x555555135c *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #48]                              #! EA = L0x7fffffe480; PC = 0x5555551360 *)
mov [L0x7fffffe480,L0x7fffffe482,L0x7fffffe484,L0x7fffffe486,L0x7fffffe488,L0x7fffffe48a,L0x7fffffe48c,L0x7fffffe48e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x5555551364 *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #64]                              #! EA = L0x7fffffe490; PC = 0x5555551368 *)
mov [L0x7fffffe490,L0x7fffffe492,L0x7fffffe494,L0x7fffffe496,L0x7fffffe498,L0x7fffffe49a,L0x7fffffe49c,L0x7fffffe49e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x555555136c *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #80]                              #! EA = L0x7fffffe4a0; PC = 0x5555551370 *)
mov [L0x7fffffe4a0,L0x7fffffe4a2,L0x7fffffe4a4,L0x7fffffe4a6,L0x7fffffe4a8,L0x7fffffe4aa,L0x7fffffe4ac,L0x7fffffe4ae] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x5555551374 *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #96]                              #! EA = L0x7fffffe4b0; PC = 0x5555551378 *)
mov [L0x7fffffe4b0,L0x7fffffe4b2,L0x7fffffe4b4,L0x7fffffe4b6,L0x7fffffe4b8,L0x7fffffe4ba,L0x7fffffe4bc,L0x7fffffe4be] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x555555137c *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #112]                             #! EA = L0x7fffffe4c0; PC = 0x5555551380 *)
mov [L0x7fffffe4c0,L0x7fffffe4c2,L0x7fffffe4c4,L0x7fffffe4c6,L0x7fffffe4c8,L0x7fffffe4ca,L0x7fffffe4cc,L0x7fffffe4ce] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x5555551384 *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #128]                             #! EA = L0x7fffffe4d0; PC = 0x5555551388 *)
mov [L0x7fffffe4d0,L0x7fffffe4d2,L0x7fffffe4d4,L0x7fffffe4d6,L0x7fffffe4d8,L0x7fffffe4da,L0x7fffffe4dc,L0x7fffffe4de] %v0;


### k0_iter


#### load

(* ldr	q7, [x19, #256]                             #! EA = L0x7fffffe550; Value = 0x0000000000000000; PC = 0x555555138c *)
mov %v7 [L0x7fffffe550,L0x7fffffe552,L0x7fffffe554,L0x7fffffe556,L0x7fffffe558,L0x7fffffe55a,L0x7fffffe55c,L0x7fffffe55e];
(* ldr	q6, [x19, #240]                             #! EA = L0x7fffffe540; Value = 0x0000000000000000; PC = 0x5555551390 *)
mov %v6 [L0x7fffffe540,L0x7fffffe542,L0x7fffffe544,L0x7fffffe546,L0x7fffffe548,L0x7fffffe54a,L0x7fffffe54c,L0x7fffffe54e];
(* ldr	q5, [x19, #224]                             #! EA = L0x7fffffe530; Value = 0x0000000000000000; PC = 0x5555551394 *)
mov %v5 [L0x7fffffe530,L0x7fffffe532,L0x7fffffe534,L0x7fffffe536,L0x7fffffe538,L0x7fffffe53a,L0x7fffffe53c,L0x7fffffe53e];
(* ldr	q4, [x19, #208]                             #! EA = L0x7fffffe520; Value = 0x0000000000000000; PC = 0x5555551398 *)
mov %v4 [L0x7fffffe520,L0x7fffffe522,L0x7fffffe524,L0x7fffffe526,L0x7fffffe528,L0x7fffffe52a,L0x7fffffe52c,L0x7fffffe52e];
(* ldr	q3, [x19, #192]                             #! EA = L0x7fffffe510; Value = 0x0000000000000000; PC = 0x555555139c *)
mov %v3 [L0x7fffffe510,L0x7fffffe512,L0x7fffffe514,L0x7fffffe516,L0x7fffffe518,L0x7fffffe51a,L0x7fffffe51c,L0x7fffffe51e];
(* ldr	q2, [x19, #176]                             #! EA = L0x7fffffe500; Value = 0x0000000000000000; PC = 0x55555513a0 *)
mov %v2 [L0x7fffffe500,L0x7fffffe502,L0x7fffffe504,L0x7fffffe506,L0x7fffffe508,L0x7fffffe50a,L0x7fffffe50c,L0x7fffffe50e];
(* ldr	q1, [x19, #160]                             #! EA = L0x7fffffe4f0; Value = 0x0000000000000000; PC = 0x55555513a4 *)
mov %v1 [L0x7fffffe4f0,L0x7fffffe4f2,L0x7fffffe4f4,L0x7fffffe4f6,L0x7fffffe4f8,L0x7fffffe4fa,L0x7fffffe4fc,L0x7fffffe4fe];
(* ldr	q0, [x19, #144]                             #! EA = L0x7fffffe4e0; Value = 0x0000000000000000; PC = 0x55555513a8 *)
mov %v0 [L0x7fffffe4e0,L0x7fffffe4e2,L0x7fffffe4e4,L0x7fffffe4e6,L0x7fffffe4e8,L0x7fffffe4ea,L0x7fffffe4ec,L0x7fffffe4ee];
(* ldr	q16, [x19, #272]                            #! EA = L0x7fffffe560; Value = 0x0000000000000000; PC = 0x55555513b0 *)
mov %v16 [L0x7fffffe560,L0x7fffffe562,L0x7fffffe564,L0x7fffffe566,L0x7fffffe568,L0x7fffffe56a,L0x7fffffe56c,L0x7fffffe56e];
(* str	q16, [sp]                                   #! EA = L0x7fffffc260; PC = 0x55555513b4 *)
mov [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e] %v16;
(* #bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! PC = 0x55555513d8 *)
#bl	0x5555551604 <_ZN6xpower9main_lay27ntt9_2xE11__Int16x8_tS1_S1_S1_S1_S1_S1_S1_S1_RS1_S2_S2_S2_S2_S2_S2_S2_S2_>#! 0x55555513d8 = 0x55555513d8;

ghost %fa0_91@sint16[8], %fa1_91@sint16[8], %fa2_91@sint16[8], %fa3_91@sint16[8], %fa4_91@sint16[8], %fa5_91@sint16[8], %fa6_91@sint16[8], %fa7_91@sint16[8], %fa8_91@sint16[8] :
    %fa0_91 = %v0 /\ %fa1_91 = %v1 /\ %fa2_91 = %v2 /\ %fa3_91 = %v3 /\ %fa4_91 = %v4 /\ %fa5_91 = %v5 /\ %fa6_91 = %v6 /\ %fa7_91 = %v7 /\
    %fa8_91 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e]
  &&
    %fa0_91 = %v0 /\ %fa1_91 = %v1 /\ %fa2_91 = %v2 /\ %fa3_91 = %v3 /\ %fa4_91 = %v4 /\ %fa5_91 = %v5 /\ %fa6_91 = %v6 /\ %fa7_91 = %v7 /\
    %fa8_91 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e];

cut (* 58 *)
    %fa0_91 = %v0 /\ %fa1_91 = %v1 /\ %fa2_91 = %v2 /\ %fa3_91 = %v3 /\ %fa4_91 = %v4 /\ %fa5_91 = %v5 /\ %fa6_91 = %v6 /\ %fa7_91 = %v7 /\
    %fa8_91 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_91 = [arr9100, arr9101, arr9102, arr9103, arr9104, arr9105, arr9106, arr9107] /\
    %fa1_91 = [arr9110, arr9111, arr9112, arr9113, arr9114, arr9115, arr9116, arr9117] /\
    %fa2_91 = [arr9120, arr9121, arr9122, arr9123, arr9124, arr9125, arr9126, arr9127] /\
    %fa3_91 = [arr9130, arr9131, arr9132, arr9133, arr9134, arr9135, arr9136, arr9137] /\
    %fa4_91 = [arr9140, arr9141, arr9142, arr9143, arr9144, arr9145, arr9146, arr9147] /\
    %fa5_91 = [arr9150, arr9151, arr9152, arr9153, arr9154, arr9155, arr9156, arr9157] /\
    %fa6_91 = [arr9160, arr9161, arr9162, arr9163, arr9164, arr9165, arr9166, arr9167] /\
    %fa7_91 = [arr9170, arr9171, arr9172, arr9173, arr9174, arr9175, arr9176, arr9177] /\
    %fa8_91 = [arr9180, arr9181, arr9182, arr9183, arr9184, arr9185, arr9186, arr9187]
  &&
    %fa0_91 = %v0 /\ %fa1_91 = %v1 /\ %fa2_91 = %v2 /\ %fa3_91 = %v3 /\ %fa4_91 = %v4 /\ %fa5_91 = %v5 /\ %fa6_91 = %v6 /\ %fa7_91 = %v7 /\
    %fa8_91 = [L0x7fffffc260, L0x7fffffc262, L0x7fffffc264, L0x7fffffc266, L0x7fffffc268, L0x7fffffc26a, L0x7fffffc26c, L0x7fffffc26e] /\
    %fa0_91 = [arr9100, arr9101, arr9102, arr9103, arr9104, arr9105, arr9106, arr9107] /\
    %fa1_91 = [arr9110, arr9111, arr9112, arr9113, arr9114, arr9115, arr9116, arr9117] /\
    %fa2_91 = [arr9120, arr9121, arr9122, arr9123, arr9124, arr9125, arr9126, arr9127] /\
    %fa3_91 = [arr9130, arr9131, arr9132, arr9133, arr9134, arr9135, arr9136, arr9137] /\
    %fa4_91 = [arr9140, arr9141, arr9142, arr9143, arr9144, arr9145, arr9146, arr9147] /\
    %fa5_91 = [arr9150, arr9151, arr9152, arr9153, arr9154, arr9155, arr9156, arr9157] /\
    %fa6_91 = [arr9160, arr9161, arr9162, arr9163, arr9164, arr9165, arr9166, arr9167] /\
    %fa7_91 = [arr9170, arr9171, arr9172, arr9173, arr9174, arr9175, arr9176, arr9177] /\
    %fa8_91 = [arr9180, arr9181, arr9182, arr9183, arr9184, arr9185, arr9186, arr9187];


#### ntt9_2x

(* #! -> SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* mov	v20.16b, v4.16b                             #! PC = 0x5555551608 *)
mov %v20 %v4;
(* mov	v19.16b, v5.16b                             #! PC = 0x555555160c *)
mov %v19 %v5;
(* ldr	q18, [sp, #16]                              #! EA = L0x7fffffc260; Value = 0x0000000000000000; PC = 0x5555551610 *)
mov %v18 [L0x7fffffc260,L0x7fffffc262,L0x7fffffc264,L0x7fffffc266,L0x7fffffc268,L0x7fffffc26a,L0x7fffffc26c,L0x7fffffc26e];
(* add	v9.8h, v3.8h, v6.8h                         #! PC = 0x5555551614 *)
adds %dc %v9 %v3 %v6;
(* sub	v3.8h, v3.8h, v6.8h                         #! PC = 0x5555551618 *)
subc %dc %v3 %v3 %v6;
(* add	v5.8h, v0.8h, v9.8h                         #! PC = 0x555555161c *)
adds %dc %v5 %v0 %v9;
(* ldr	q8, [x8, #2096]                             #! EA = L0x5555552830; Value = 0x00000000723311ef; PC = 0x5555551624 *)
mov %v8 [L0x5555552830,L0x5555552832,L0x5555552834,L0x5555552836,L0x5555552838,L0x555555283a,L0x555555283c,L0x555555283e];
(* sqdmulh	v4.8h, v5.8h, v8.h[1]                   #! PC = 0x5555551628 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v5 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #11                         #! PC = 0x555555162c *)
split %HI %LO %v4 11; split %LO1 %dc %LO (11-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* shl	v5.8h, v5.8h, #1                            #! PC = 0x5555551630 *)
vpc %long@sint32[8] %v5;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* mov	v17.16b, v5.16b                             #! PC = 0x5555551634 *)
mov %v17 %v5;
(* mls	v17.8h, v4.8h, v8.h[0]                      #! PC = 0x5555551638 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v17 %v17 %mls;
(* shl	v0.8h, v0.8h, #1                            #! PC = 0x555555163c *)
vpc %long@sint32[8] %v0;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v0@sint16[8] %long;
(* sub	v0.8h, v0.8h, v9.8h                         #! PC = 0x5555551640 *)
subc %dc %v0 %v0 %v9;
(* sqdmulh	v6.8h, v0.8h, v8.h[1]                   #! PC = 0x5555551644 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v0 %mul;
ssplit %LO0 %dc %LO 15; vpc %v6@sint16[8] %LO0;
(* srshr	v6.8h, v6.8h, #10                         #! PC = 0x5555551648 *)
split %HI %LO %v6 10; split %LO1 %dc %LO (10-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* ldr	q9, [x8, #2112]                             #! EA = L0x5555552840; Value = 0x0000fcdd0763fd93; PC = 0x5555551650 *)
mov %v9 [L0x5555552840,L0x5555552842,L0x5555552844,L0x5555552846,L0x5555552848,L0x555555284a,L0x555555284c,L0x555555284e];
(* sqrdmulh	v4.8h, v3.8h, v9.h[7]                  #! PC = 0x5555551654 *)
broadcast %mul 8 [%v9[7]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* add	v5.8h, v6.8h, v4.8h                         #! PC = 0x5555551658 *)
adds %dc %v5 %v6 %v4;
(* srshr	v5.8h, v5.8h, #2                          #! PC = 0x555555165c *)
split %HI %LO %v5 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* sub	v6.8h, v6.8h, v4.8h                         #! PC = 0x5555551660 *)
subc %dc %v6 %v6 %v4;
(* srshr	v6.8h, v6.8h, #2                          #! PC = 0x5555551664 *)
split %HI %LO %v6 2; split %LO1 %dc %LO (2-1);
cast %LO0@sint16[8] %LO1; add %v6 %HI %LO0;
(* mul	v3.8h, v3.8h, v9.h[0]                       #! PC = 0x5555551668 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* add	v4.8h, v0.8h, v3.8h                         #! PC = 0x555555166c *)
adds %dc %v4 %v0 %v3;
(* mov	v16.16b, v4.16b                             #! PC = 0x5555551670 *)
mov %v16 %v4;
(* mls	v16.8h, v5.8h, v8.h[0]                      #! PC = 0x5555551674 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v16 %v16 %mls;
(* sub	v0.8h, v0.8h, v3.8h                         #! PC = 0x5555551678 *)
subc %dc %v0 %v0 %v3;
(* mls	v0.8h, v6.8h, v8.h[0]                       #! PC = 0x555555167c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v6 %mul;
cast %mls@int16[8] %mls; subc %dc %v0 %v0 %mls;
(* add	v3.8h, v7.8h, v20.8h                        #! PC = 0x5555551680 *)
adds %dc %v3 %v7 %v20;
(* sub	v4.8h, v7.8h, v20.8h                        #! PC = 0x5555551684 *)
subc %dc %v4 %v7 %v20;
(* add	v6.8h, v1.8h, v3.8h                         #! PC = 0x5555551688 *)
adds %dc %v6 %v1 %v3;
(* shl	v7.8h, v1.8h, #1                            #! PC = 0x555555168c *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v7@sint16[8] %long;
(* sub	v7.8h, v7.8h, v3.8h                         #! PC = 0x5555551690 *)
subc %dc %v7 %v7 %v3;
(* sqrdmulh	v1.8h, v4.8h, v9.h[4]                  #! PC = 0x5555551694 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v4 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v4.8h, v4.8h, v9.h[0]                       #! PC = 0x5555551698 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v4 %v4 %mul; cast %v4@int16[8] %v4;
(* mls	v4.8h, v1.8h, v8.h[0]                       #! PC = 0x555555169c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* add	v3.8h, v4.8h, v7.8h                         #! PC = 0x55555516a0 *)
adds %dc %v3 %v4 %v7;
(* sub	v7.8h, v7.8h, v4.8h                         #! PC = 0x55555516a4 *)
subc %dc %v7 %v7 %v4;
(* add	v1.8h, v2.8h, v19.8h                        #! PC = 0x55555516a8 *)
adds %dc %v1 %v2 %v19;
(* sub	v5.8h, v2.8h, v19.8h                        #! PC = 0x55555516ac *)
subc %dc %v5 %v2 %v19;
(* add	v19.8h, v18.8h, v1.8h                       #! PC = 0x55555516b0 *)
adds %dc %v19 %v18 %v1;
(* shl	v2.8h, v18.8h, #1                           #! PC = 0x55555516b4 *)
vpc %long@sint32[8] %v18;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* sub	v4.8h, v2.8h, v1.8h                         #! PC = 0x55555516b8 *)
subc %dc %v4 %v2 %v1;
(* sqrdmulh	v1.8h, v5.8h, v9.h[4]                  #! PC = 0x55555516bc *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v5 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v2.8h, v5.8h, v9.h[0]                       #! PC = 0x55555516c0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v2 %v5 %mul; cast %v2@int16[8] %v2;
(* mls	v2.8h, v1.8h, v8.h[0]                       #! PC = 0x55555516c4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v2 %v2 %mls;
(* add	v1.8h, v2.8h, v4.8h                         #! PC = 0x55555516c8 *)
adds %dc %v1 %v2 %v4;
(* sub	v2.8h, v4.8h, v2.8h                         #! PC = 0x55555516cc *)
subc %dc %v2 %v4 %v2;

cut (* 59 *)
    %v17 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_91 +
        %fa3_91 +
        %fa6_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v16 = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_91 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa6_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v0  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa0_91 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa3_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v6  = (
        %fa1_91 +
        %fa7_91 +
        %fa4_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v3  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_91 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa4_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v7  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa1_91 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa7_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v19 = (
        %fa8_91 +
        %fa2_91 +
        %fa5_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v1  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_91 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa5_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v2  = [2, 2, 2, 2, 2, 2, 2, 2] * (
        %fa8_91 +
        [ 310,  310,  310,  310,  310,  310,  310,  310] * %fa2_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    %v17 <= [2295, 2295, 2295, 2295, 2295, 2295, 2295, 2295] /\
    %v17 >= [-2295, -2295, -2295, -2295, -2295, -2295, -2295, -2295] /\

    %v16 <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v16 >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v0  <= [3555, 3555, 3555, 3555, 3555, 3555, 3555, 3555] /\
    %v0  >= [-3555, -3555, -3555, -3555, -3555, -3555, -3555, -3555] /\

    %v6  <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v6  >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v3  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v3  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v7  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v7  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v19 <= [11625, 11625, 11625, 11625, 11625, 11625, 11625, 11625] /\
    %v19 >= [-11625, -11625, -11625, -11625, -11625, -11625, -11625, -11625] /\

    %v1  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v1  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    %v2  <= [17730, 17730, 17730, 17730, 17730, 17730, 17730, 17730] /\
    %v2  >= [-17730, -17730, -17730, -17730, -17730, -17730, -17730, -17730] /\

    true
    prove with [precondition, cuts[0, 58], algebra solver isl]
    && true;

(* add	v4.8h, v6.8h, v19.8h                        #! PC = 0x55555516d0 *)
adds %dc %v4 %v6 %v19;
(* sub	v6.8h, v6.8h, v19.8h                        #! PC = 0x55555516d4 *)
subc %dc %v6 %v6 %v19;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x55555516d8 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x55555516dc *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x55555516e0 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x55555516e4 *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v17.8h                        #! PC = 0x55555516e8 *)
adds %dc %v5 %v5 %v17;
(* str	q5, [x0]                                    #! EA = L0x7fffffc2f0; PC = 0x55555516ec *)
mov [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe] %v5;
(* sub	v5.8h, v17.8h, v4.8h                        #! PC = 0x55555516f0 *)
subc %dc %v5 %v17 %v4;
(* sqrdmulh	v4.8h, v6.8h, v9.h[4]                  #! PC = 0x55555516f4 *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v6 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v6.8h, v6.8h, v9.h[0]                       #! PC = 0x55555516f8 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v6 %v6 %mul; cast %v6@int16[8] %v6;
(* mls	v6.8h, v4.8h, v8.h[0]                       #! PC = 0x55555516fc *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v6 %v6 %mls;
(* add	v4.8h, v5.8h, v6.8h                         #! PC = 0x5555551700 *)
adds %dc %v4 %v5 %v6;
(* str	q4, [x3]                                    #! EA = L0x7fffffc320; PC = 0x5555551704 *)
mov [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e] %v4;
(* sub	v5.8h, v5.8h, v6.8h                         #! PC = 0x5555551708 *)
subc %dc %v5 %v5 %v6;
(* str	q5, [x6]                                    #! EA = L0x7fffffc350; PC = 0x555555170c *)
mov [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e] %v5;
(* sqrdmulh	v4.8h, v1.8h, v9.h[5]                  #! PC = 0x5555551710 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[1]                       #! PC = 0x5555551714 *)
broadcast %mul 8 [%v9[1]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551718 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* sqrdmulh	v4.8h, v7.8h, v9.h[6]                  #! PC = 0x555555171c *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v7 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v5.8h, v7.8h, v9.h[2]                       #! PC = 0x5555551720 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v5 %v7 %mul; cast %v5@int16[8] %v5;
(* mls	v5.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551724 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v5 %v5 %mls;
(* add	v4.8h, v5.8h, v1.8h                         #! PC = 0x5555551728 *)
adds %dc %v4 %v5 %v1;
(* sub	v1.8h, v1.8h, v5.8h                         #! PC = 0x555555172c *)
subc %dc %v1 %v1 %v5;
(* sqdmulh	v5.8h, v4.8h, v8.h[1]                   #! PC = 0x5555551730 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v4 %mul;
ssplit %LO0 %dc %LO 15; vpc %v5@sint16[8] %LO0;
(* srshr	v5.8h, v5.8h, #12                         #! PC = 0x5555551734 *)
split %HI %LO %v5 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v5 %HI %LO0;
(* mls	v4.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551738 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v4 %v4 %mls;
(* shl	v5.8h, v4.8h, #1                            #! PC = 0x555555173c *)
vpc %long@sint32[8] %v4;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v5@sint16[8] %long;
(* add	v5.8h, v5.8h, v16.8h                        #! PC = 0x5555551740 *)
adds %dc %v5 %v5 %v16;
(* str	q5, [x1]                                    #! EA = L0x7fffffc300; PC = 0x5555551744 *)
mov [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e] %v5;
(* sub	v4.8h, v16.8h, v4.8h                        #! PC = 0x5555551748 *)
subc %dc %v4 %v16 %v4;
(* sqrdmulh	v5.8h, v1.8h, v9.h[4]                  #! PC = 0x555555174c *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v1 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v5 %LO11 %LO01;
(* mul	v1.8h, v1.8h, v9.h[0]                       #! PC = 0x5555551750 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v1 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v5.8h, v8.h[0]                       #! PC = 0x5555551754 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v5 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v5.8h, v4.8h, v1.8h                         #! PC = 0x5555551758 *)
adds %dc %v5 %v4 %v1;
(* str	q5, [x7]                                    #! EA = L0x7fffffc360; PC = 0x555555175c *)
mov [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e] %v5;
(* sub	v4.8h, v4.8h, v1.8h                         #! PC = 0x5555551760 *)
subc %dc %v4 %v4 %v1;
(* str	q4, [x4]                                    #! EA = L0x7fffffc330; PC = 0x5555551764 *)
mov [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e] %v4;
(* sqrdmulh	v1.8h, v3.8h, v9.h[5]                  #! PC = 0x5555551768 *)
broadcast %mul 8 [%v9[5]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v1 %LO11 %LO01;
(* mul	v3.8h, v3.8h, v9.h[1]                       #! PC = 0x555555176c *)
broadcast %mul 8 [%v9[1]]; mull %dc %v3 %v3 %mul; cast %v3@int16[8] %v3;
(* mls	v3.8h, v1.8h, v8.h[0]                       #! PC = 0x5555551770 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v1 %mul;
cast %mls@int16[8] %mls; subc %dc %v3 %v3 %mls;
(* sqrdmulh	v4.8h, v2.8h, v9.h[6]                  #! PC = 0x5555551774 *)
broadcast %mul 8 [%v9[6]]; smulj %LO %v2 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v4 %LO11 %LO01;
(* mul	v1.8h, v2.8h, v9.h[2]                       #! PC = 0x5555551778 *)
broadcast %mul 8 [%v9[2]]; mull %dc %v1 %v2 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x555555177c *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v1.8h, v3.8h                         #! PC = 0x5555551780 *)
adds %dc %v2 %v1 %v3;
(* sub	v3.8h, v3.8h, v1.8h                         #! PC = 0x5555551784 *)
subc %dc %v3 %v3 %v1;
(* sqdmulh	v4.8h, v2.8h, v8.h[1]                   #! PC = 0x5555551788 *)
broadcast %mul 8 [%v8[1]]; smulj %LO %v2 %mul;
ssplit %LO0 %dc %LO 15; vpc %v4@sint16[8] %LO0;
(* srshr	v4.8h, v4.8h, #12                         #! PC = 0x555555178c *)
split %HI %LO %v4 12; split %LO1 %dc %LO (12-1);
cast %LO0@sint16[8] %LO1; add %v4 %HI %LO0;
(* mov	v1.16b, v2.16b                              #! PC = 0x5555551790 *)
mov %v1 %v2;
(* mls	v1.8h, v4.8h, v8.h[0]                       #! PC = 0x5555551794 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v4 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* shl	v2.8h, v1.8h, #1                            #! PC = 0x5555551798 *)
vpc %long@sint32[8] %v1;
shl %long %long [(1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32, (1)@int32];
cast %v2@sint16[8] %long;
(* add	v2.8h, v2.8h, v0.8h                         #! PC = 0x555555179c *)
adds %dc %v2 %v2 %v0;
(* str	q2, [x0]                                    #! EA = L0x7fffffc370; PC = 0x55555517a4 *)
mov [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517a8 *)
subc %dc %v0 %v0 %v1;
(* sqrdmulh	v2.8h, v3.8h, v9.h[4]                  #! PC = 0x55555517ac *)
broadcast %mul 8 [%v9[4]]; smulj %LO %v3 %mul;
ssplit %LO1 %LO0 %LO 15; usplit %LO00 %dc %LO0 14;
vpc %LO01@sint16[8] %LO00; vpc %LO11@sint16[8] %LO1;
add %v2 %LO11 %LO01;
(* mul	v1.8h, v3.8h, v9.h[0]                       #! PC = 0x55555517b0 *)
broadcast %mul 8 [%v9[0]]; mull %dc %v1 %v3 %mul; cast %v1@int16[8] %v1;
(* mls	v1.8h, v2.8h, v8.h[0]                       #! PC = 0x55555517b4 *)
broadcast %mul 8 [%v8[0]]; mull %dc %mls %v2 %mul;
cast %mls@int16[8] %mls; subc %dc %v1 %v1 %mls;
(* add	v2.8h, v0.8h, v1.8h                         #! PC = 0x55555517b8 *)
adds %dc %v2 %v0 %v1;
(* str	q2, [x2]                                    #! EA = L0x7fffffc310; PC = 0x55555517bc *)
mov [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e] %v2;
(* sub	v0.8h, v0.8h, v1.8h                         #! PC = 0x55555517c0 *)
subc %dc %v0 %v0 %v1;
(* str	q0, [x5]                                    #! EA = L0x7fffffc340; PC = 0x55555517c4 *)
mov [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e] %v0;
(* #! <- SP = 0x7fffffc260 *)
#! 0x7fffffc260 = 0x7fffffc260;
(* #ret                                            #! PC = 0x55555517cc *)
#ret                                            #! 0x55555517cc = 0x55555517cc;

cut (* 60 *)
    [L0x7fffffc2f0, L0x7fffffc2f2, L0x7fffffc2f4, L0x7fffffc2f6, L0x7fffffc2f8, L0x7fffffc2fa, L0x7fffffc2fc, L0x7fffffc2fe] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_91 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa1_91 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa2_91 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_91 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa4_91 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa5_91 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_91 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa7_91 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa8_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc300, L0x7fffffc302, L0x7fffffc304, L0x7fffffc306, L0x7fffffc308, L0x7fffffc30a, L0x7fffffc30c, L0x7fffffc30e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_91 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa1_91 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa2_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_91 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa4_91 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa5_91 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_91 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa7_91 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa8_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc310, L0x7fffffc312, L0x7fffffc314, L0x7fffffc316, L0x7fffffc318, L0x7fffffc31a, L0x7fffffc31c, L0x7fffffc31e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_91 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa1_91 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa2_91 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_91 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa4_91 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa5_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_91 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa7_91 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa8_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc320, L0x7fffffc322, L0x7fffffc324, L0x7fffffc326, L0x7fffffc328, L0x7fffffc32a, L0x7fffffc32c, L0x7fffffc32e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa1_91 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa2_91 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa4_91 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa5_91 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa7_91 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa8_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc330, L0x7fffffc332, L0x7fffffc334, L0x7fffffc336, L0x7fffffc338, L0x7fffffc33a, L0x7fffffc33c, L0x7fffffc33e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_91 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa1_91 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa2_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_91 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa4_91 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa5_91 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_91 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa7_91 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa8_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc340, L0x7fffffc342, L0x7fffffc344, L0x7fffffc346, L0x7fffffc348, L0x7fffffc34a, L0x7fffffc34c, L0x7fffffc34e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_91 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa1_91 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa2_91 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_91 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa4_91 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa5_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_91 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa7_91 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa8_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc350, L0x7fffffc352, L0x7fffffc354, L0x7fffffc356, L0x7fffffc358, L0x7fffffc35a, L0x7fffffc35c, L0x7fffffc35e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_91 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa1_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa2_91 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa3_91 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa4_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa5_91 +
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa6_91 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa7_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa8_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc360, L0x7fffffc362, L0x7fffffc364, L0x7fffffc366, L0x7fffffc368, L0x7fffffc36a, L0x7fffffc36c, L0x7fffffc36e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_91 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa1_91 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa2_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa3_91 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa4_91 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa5_91 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa6_91 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa7_91 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa8_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    [L0x7fffffc370, L0x7fffffc372, L0x7fffffc374, L0x7fffffc376, L0x7fffffc378, L0x7fffffc37a, L0x7fffffc37c, L0x7fffffc37e] =
    [2, 2, 2, 2, 2, 2, 2, 2] * (
        [1, 1, 1, 1, 1, 1, 1, 1] * %fa0_91 +
        [-809, -809, -809, -809, -809, -809, -809, -809] * %fa1_91 +
        [-2032, -2032, -2032, -2032, -2032, -2032, -2032, -2032] * %fa2_91 +
        [310, 310, 310, 310, 310, 310, 310, 310] * %fa3_91 +
        [1715, 1715, 1715, 1715, 1715, 1715, 1715, 1715] * %fa4_91 +
        [-953, -953, -953, -953, -953, -953, -953, -953] * %fa5_91 +
        [-311, -311, -311, -311, -311, -311, -311, -311] * %fa6_91 +
        [-906, -906, -906, -906, -906, -906, -906, -906] * %fa7_91 +
        [-1606, -1606, -1606, -1606, -1606, -1606, -1606, -1606] * %fa8_91
    )
    ( mod [4591, 4591, 4591, 4591, 4591, 4591, 4591, 4591] ) /\

    true
    prove with [algebra solver isl, cuts[59]]
    && true;


#### store

(* ldr	q0, [sp, #144]                              #! EA = L0x7fffffc2f0; Value = 0x0000000000000000; PC = 0x55555513dc *)
mov %v0 [L0x7fffffc2f0,L0x7fffffc2f2,L0x7fffffc2f4,L0x7fffffc2f6,L0x7fffffc2f8,L0x7fffffc2fa,L0x7fffffc2fc,L0x7fffffc2fe];
(* str	q0, [x19, #144]                             #! EA = L0x7fffffe4e0; PC = 0x55555513e0 *)
mov [L0x7fffffe4e0,L0x7fffffe4e2,L0x7fffffe4e4,L0x7fffffe4e6,L0x7fffffe4e8,L0x7fffffe4ea,L0x7fffffe4ec,L0x7fffffe4ee] %v0;
(* ldr	q0, [sp, #160]                              #! EA = L0x7fffffc300; Value = 0x0000000000000000; PC = 0x55555513e4 *)
mov %v0 [L0x7fffffc300,L0x7fffffc302,L0x7fffffc304,L0x7fffffc306,L0x7fffffc308,L0x7fffffc30a,L0x7fffffc30c,L0x7fffffc30e];
(* str	q0, [x19, #160]                             #! EA = L0x7fffffe4f0; PC = 0x55555513e8 *)
mov [L0x7fffffe4f0,L0x7fffffe4f2,L0x7fffffe4f4,L0x7fffffe4f6,L0x7fffffe4f8,L0x7fffffe4fa,L0x7fffffe4fc,L0x7fffffe4fe] %v0;
(* ldr	q0, [sp, #176]                              #! EA = L0x7fffffc310; Value = 0x0000000000000000; PC = 0x55555513ec *)
mov %v0 [L0x7fffffc310,L0x7fffffc312,L0x7fffffc314,L0x7fffffc316,L0x7fffffc318,L0x7fffffc31a,L0x7fffffc31c,L0x7fffffc31e];
(* str	q0, [x19, #176]                             #! EA = L0x7fffffe500; PC = 0x55555513f0 *)
mov [L0x7fffffe500,L0x7fffffe502,L0x7fffffe504,L0x7fffffe506,L0x7fffffe508,L0x7fffffe50a,L0x7fffffe50c,L0x7fffffe50e] %v0;
(* ldr	q0, [sp, #192]                              #! EA = L0x7fffffc320; Value = 0x0000000000000000; PC = 0x55555513f4 *)
mov %v0 [L0x7fffffc320,L0x7fffffc322,L0x7fffffc324,L0x7fffffc326,L0x7fffffc328,L0x7fffffc32a,L0x7fffffc32c,L0x7fffffc32e];
(* str	q0, [x19, #192]                             #! EA = L0x7fffffe510; PC = 0x55555513f8 *)
mov [L0x7fffffe510,L0x7fffffe512,L0x7fffffe514,L0x7fffffe516,L0x7fffffe518,L0x7fffffe51a,L0x7fffffe51c,L0x7fffffe51e] %v0;
(* ldr	q0, [sp, #208]                              #! EA = L0x7fffffc330; Value = 0x0000000000000000; PC = 0x55555513fc *)
mov %v0 [L0x7fffffc330,L0x7fffffc332,L0x7fffffc334,L0x7fffffc336,L0x7fffffc338,L0x7fffffc33a,L0x7fffffc33c,L0x7fffffc33e];
(* str	q0, [x19, #208]                             #! EA = L0x7fffffe520; PC = 0x5555551400 *)
mov [L0x7fffffe520,L0x7fffffe522,L0x7fffffe524,L0x7fffffe526,L0x7fffffe528,L0x7fffffe52a,L0x7fffffe52c,L0x7fffffe52e] %v0;
(* ldr	q0, [sp, #224]                              #! EA = L0x7fffffc340; Value = 0x0000000000000000; PC = 0x5555551404 *)
mov %v0 [L0x7fffffc340,L0x7fffffc342,L0x7fffffc344,L0x7fffffc346,L0x7fffffc348,L0x7fffffc34a,L0x7fffffc34c,L0x7fffffc34e];
(* str	q0, [x19, #224]                             #! EA = L0x7fffffe530; PC = 0x5555551408 *)
mov [L0x7fffffe530,L0x7fffffe532,L0x7fffffe534,L0x7fffffe536,L0x7fffffe538,L0x7fffffe53a,L0x7fffffe53c,L0x7fffffe53e] %v0;
(* ldr	q0, [sp, #240]                              #! EA = L0x7fffffc350; Value = 0x0000000000000000; PC = 0x555555140c *)
mov %v0 [L0x7fffffc350,L0x7fffffc352,L0x7fffffc354,L0x7fffffc356,L0x7fffffc358,L0x7fffffc35a,L0x7fffffc35c,L0x7fffffc35e];
(* str	q0, [x19, #240]                             #! EA = L0x7fffffe540; PC = 0x5555551410 *)
mov [L0x7fffffe540,L0x7fffffe542,L0x7fffffe544,L0x7fffffe546,L0x7fffffe548,L0x7fffffe54a,L0x7fffffe54c,L0x7fffffe54e] %v0;
(* ldr	q0, [sp, #256]                              #! EA = L0x7fffffc360; Value = 0x0000000000000000; PC = 0x5555551414 *)
mov %v0 [L0x7fffffc360,L0x7fffffc362,L0x7fffffc364,L0x7fffffc366,L0x7fffffc368,L0x7fffffc36a,L0x7fffffc36c,L0x7fffffc36e];
(* str	q0, [x19, #256]                             #! EA = L0x7fffffe550; PC = 0x5555551418 *)
mov [L0x7fffffe550,L0x7fffffe552,L0x7fffffe554,L0x7fffffe556,L0x7fffffe558,L0x7fffffe55a,L0x7fffffe55c,L0x7fffffe55e] %v0;
(* ldr	q0, [sp, #272]                              #! EA = L0x7fffffc370; Value = 0x0000000000000000; PC = 0x555555141c *)
mov %v0 [L0x7fffffc370,L0x7fffffc372,L0x7fffffc374,L0x7fffffc376,L0x7fffffc378,L0x7fffffc37a,L0x7fffffc37c,L0x7fffffc37e];
(* str	q0, [x19, #272]                             #! EA = L0x7fffffe560; PC = 0x5555551420 *)
mov [L0x7fffffe560,L0x7fffffe562,L0x7fffffe564,L0x7fffffe566,L0x7fffffe568,L0x7fffffe56a,L0x7fffffe56c,L0x7fffffe56e] %v0;


### epilogue

(* #b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! PC = 0x5555551430 *)
#b.ne	0x55555512e4 <_ZN6xpower9main_lay211fwd_inplaceEPA2_A9_A8_s+64>  // b.any#! 0x5555551430 = 0x5555551430;


# epilogue

(* #! <- SP = 0x7fffffc380 *)
#! 0x7fffffc380 = 0x7fffffc380;
(* #ret                                            #! PC = 0x5555551450 *)
#ret                                            #! 0x5555551450 = 0x5555551450;

cut (* 61 *)
    true && true;

